{"mappings":"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","sources":["node_modules/web-streams-polyfill/dist/ponyfill.es2018.js","node_modules/web-streams-polyfill/src/stub/symbol.ts","node_modules/web-streams-polyfill/src/utils.ts","node_modules/web-streams-polyfill/src/lib/helpers/miscellaneous.ts","node_modules/web-streams-polyfill/src/lib/helpers/webidl.ts","node_modules/web-streams-polyfill/src/lib/simple-queue.ts","node_modules/web-streams-polyfill/src/lib/readable-stream/generic-reader.ts","node_modules/web-streams-polyfill/src/lib/abstract-ops/internal-methods.ts","node_modules/web-streams-polyfill/src/stub/number-isfinite.ts","node_modules/web-streams-polyfill/src/stub/math-trunc.ts","node_modules/web-streams-polyfill/src/lib/validators/basic.ts","node_modules/web-streams-polyfill/src/lib/validators/readable-stream.ts","node_modules/web-streams-polyfill/src/lib/readable-stream/default-reader.ts","node_modules/web-streams-polyfill/src/target/es2018/stub/async-iterator-prototype.ts","node_modules/web-streams-polyfill/src/lib/readable-stream/async-iterator.ts","node_modules/web-streams-polyfill/src/stub/number-isnan.ts","node_modules/web-streams-polyfill/src/lib/abstract-ops/ecmascript.ts","node_modules/web-streams-polyfill/src/lib/abstract-ops/miscellaneous.ts","node_modules/web-streams-polyfill/src/lib/abstract-ops/queue-with-sizes.ts","node_modules/web-streams-polyfill/src/lib/readable-stream/byte-stream-controller.ts","node_modules/web-streams-polyfill/src/lib/readable-stream/byob-reader.ts","node_modules/web-streams-polyfill/src/lib/abstract-ops/queuing-strategy.ts","node_modules/web-streams-polyfill/src/lib/validators/queuing-strategy.ts","node_modules/web-streams-polyfill/src/lib/validators/underlying-sink.ts","node_modules/web-streams-polyfill/src/lib/validators/writable-stream.ts","node_modules/web-streams-polyfill/src/lib/abort-signal.ts","node_modules/web-streams-polyfill/src/lib/writable-stream.ts","node_modules/web-streams-polyfill/src/stub/native.ts","node_modules/web-streams-polyfill/src/stub/dom-exception.ts","node_modules/web-streams-polyfill/src/lib/readable-stream/pipe.ts","node_modules/web-streams-polyfill/src/lib/readable-stream/default-controller.ts","node_modules/web-streams-polyfill/src/lib/readable-stream/tee.ts","node_modules/web-streams-polyfill/src/lib/validators/underlying-source.ts","node_modules/web-streams-polyfill/src/lib/validators/reader-options.ts","node_modules/web-streams-polyfill/src/lib/validators/iterator-options.ts","node_modules/web-streams-polyfill/src/lib/validators/pipe-options.ts","node_modules/web-streams-polyfill/src/lib/validators/readable-writable-pair.ts","node_modules/web-streams-polyfill/src/lib/readable-stream.ts","node_modules/web-streams-polyfill/src/lib/validators/queuing-strategy-init.ts","node_modules/web-streams-polyfill/src/lib/byte-length-queuing-strategy.ts","node_modules/web-streams-polyfill/src/lib/count-queuing-strategy.ts","node_modules/web-streams-polyfill/src/lib/validators/transformer.ts","node_modules/web-streams-polyfill/src/lib/transform-stream.ts","node_modules/formdata-polyfill/esm.min.js","node_modules/fetch-blob/index.js","node_modules/fetch-blob/streams.cjs","node_modules/fetch-blob/file.js","node_modules/@parcel/runtime-js/lib/runtime-73ee08b1059c7bb1.js","node_modules/fetch-blob/from.js","node_modules/node-domexception/index.js","src/index.ts","node_modules/node-fetch/src/index.js","node_modules/data-uri-to-buffer/dist/index.js","node_modules/data-uri-to-buffer/src/index.ts","node_modules/node-fetch/src/body.js","node_modules/node-fetch/src/errors/fetch-error.js","node_modules/node-fetch/src/errors/base.js","node_modules/node-fetch/src/utils/is.js","node_modules/node-fetch/src/response.js","node_modules/node-fetch/src/headers.js","node_modules/node-fetch/src/utils/is-redirect.js","node_modules/node-fetch/src/request.js","node_modules/node-fetch/src/utils/get-search.js","node_modules/node-fetch/src/utils/referrer.js","node_modules/node-fetch/src/errors/abort-error.js"],"sourcesContent":[null,"/// <reference lib=\"es2015.symbol\" />\n\nconst SymbolPolyfill: (description?: string) => symbol =\n  typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ?\n    Symbol :\n    description => `Symbol(${description})` as any as symbol;\n\nexport default SymbolPolyfill;\n","/// <reference lib=\"dom\" />\n\nexport function noop(): undefined {\n  return undefined;\n}\n\nfunction getGlobals() {\n  if (typeof self !== 'undefined') {\n    return self;\n  } else if (typeof window !== 'undefined') {\n    return window;\n  } else if (typeof global !== 'undefined') {\n    return global;\n  }\n  return undefined;\n}\n\nexport const globals = getGlobals();\n","import { noop } from '../../utils';\nimport { AssertionError } from '../../stub/assert';\n\nexport function typeIsObject(x: any): x is object {\n  return (typeof x === 'object' && x !== null) || typeof x === 'function';\n}\n\nexport const rethrowAssertionErrorRejection: (e: any) => void =\n  DEBUG ? e => {\n    // Used throughout the reference implementation, as `.catch(rethrowAssertionErrorRejection)`, to ensure any errors\n    // get shown. There are places in the spec where we do promise transformations and purposefully ignore or don't\n    // expect any errors, but assertion errors are always problematic.\n    if (e && e instanceof AssertionError) {\n      setTimeout(() => {\n        throw e;\n      }, 0);\n    }\n  } : noop;\n","import { globals } from '../../utils';\nimport { rethrowAssertionErrorRejection } from './miscellaneous';\nimport assert from '../../stub/assert';\n\nconst originalPromise = Promise;\nconst originalPromiseThen = Promise.prototype.then;\nconst originalPromiseResolve = Promise.resolve.bind(originalPromise);\nconst originalPromiseReject = Promise.reject.bind(originalPromise);\n\nexport function newPromise<T>(executor: (\n  resolve: (value: T | PromiseLike<T>) => void,\n  reject: (reason?: any) => void\n) => void): Promise<T> {\n  return new originalPromise(executor);\n}\n\nexport function promiseResolvedWith<T>(value: T | PromiseLike<T>): Promise<T> {\n  return originalPromiseResolve(value);\n}\n\nexport function promiseRejectedWith<T = never>(reason: any): Promise<T> {\n  return originalPromiseReject(reason);\n}\n\nexport function PerformPromiseThen<T, TResult1 = T, TResult2 = never>(\n  promise: Promise<T>,\n  onFulfilled?: (value: T) => TResult1 | PromiseLike<TResult1>,\n  onRejected?: (reason: any) => TResult2 | PromiseLike<TResult2>): Promise<TResult1 | TResult2> {\n  // There doesn't appear to be any way to correctly emulate the behaviour from JavaScript, so this is just an\n  // approximation.\n  return originalPromiseThen.call(promise, onFulfilled, onRejected) as Promise<TResult1 | TResult2>;\n}\n\nexport function uponPromise<T>(\n  promise: Promise<T>,\n  onFulfilled?: (value: T) => void | PromiseLike<void>,\n  onRejected?: (reason: any) => void | PromiseLike<void>): void {\n  PerformPromiseThen(\n    PerformPromiseThen(promise, onFulfilled, onRejected),\n    undefined,\n    rethrowAssertionErrorRejection\n  );\n}\n\nexport function uponFulfillment<T>(promise: Promise<T>, onFulfilled: (value: T) => void | PromiseLike<void>): void {\n  uponPromise(promise, onFulfilled);\n}\n\nexport function uponRejection(promise: Promise<unknown>, onRejected: (reason: any) => void | PromiseLike<void>): void {\n  uponPromise(promise, undefined, onRejected);\n}\n\nexport function transformPromiseWith<T, TResult1 = T, TResult2 = never>(\n  promise: Promise<T>,\n  fulfillmentHandler?: (value: T) => TResult1 | PromiseLike<TResult1>,\n  rejectionHandler?: (reason: any) => TResult2 | PromiseLike<TResult2>): Promise<TResult1 | TResult2> {\n  return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);\n}\n\nexport function setPromiseIsHandledToTrue(promise: Promise<unknown>): void {\n  PerformPromiseThen(promise, undefined, rethrowAssertionErrorRejection);\n}\n\nexport const queueMicrotask: (fn: () => void) => void = (() => {\n  const globalQueueMicrotask = globals && globals.queueMicrotask;\n  if (typeof globalQueueMicrotask === 'function') {\n    return globalQueueMicrotask;\n  }\n\n  const resolvedPromise = promiseResolvedWith(undefined);\n  return (fn: () => void) => PerformPromiseThen(resolvedPromise, fn);\n})();\n\nexport function reflectCall<T, A extends any[], R>(F: (this: T, ...fnArgs: A) => R, V: T, args: A): R {\n  if (typeof F !== 'function') {\n    throw new TypeError('Argument is not a function');\n  }\n  return Function.prototype.apply.call(F, V, args);\n}\n\nexport function promiseCall<T, A extends any[], R>(F: (this: T, ...fnArgs: A) => R | PromiseLike<R>,\n                                                   V: T,\n                                                   args: A): Promise<R> {\n  assert(typeof F === 'function');\n  assert(V !== undefined);\n  assert(Array.isArray(args));\n  try {\n    return promiseResolvedWith(reflectCall(F, V, args));\n  } catch (value) {\n    return promiseRejectedWith(value);\n  }\n}\n","import assert from '../stub/assert';\n\n// Original from Chromium\n// https://chromium.googlesource.com/chromium/src/+/0aee4434a4dba42a42abaea9bfbc0cd196a63bc1/third_party/blink/renderer/core/streams/SimpleQueue.js\n\nconst QUEUE_MAX_ARRAY_SIZE = 16384;\n\ninterface Node<T> {\n  _elements: T[];\n  _next: Node<T> | undefined;\n}\n\n/**\n * Simple queue structure.\n *\n * Avoids scalability issues with using a packed array directly by using\n * multiple arrays in a linked list and keeping the array size bounded.\n */\nexport class SimpleQueue<T> {\n  private _front: Node<T>;\n  private _back: Node<T>;\n  private _cursor = 0;\n  private _size = 0;\n\n  constructor() {\n    // _front and _back are always defined.\n    this._front = {\n      _elements: [],\n      _next: undefined\n    };\n    this._back = this._front;\n    // The cursor is used to avoid calling Array.shift().\n    // It contains the index of the front element of the array inside the\n    // front-most node. It is always in the range [0, QUEUE_MAX_ARRAY_SIZE).\n    this._cursor = 0;\n    // When there is only one node, size === elements.length - cursor.\n    this._size = 0;\n  }\n\n  get length(): number {\n    return this._size;\n  }\n\n  // For exception safety, this method is structured in order:\n  // 1. Read state\n  // 2. Calculate required state mutations\n  // 3. Perform state mutations\n  push(element: T): void {\n    const oldBack = this._back;\n    let newBack = oldBack;\n    assert(oldBack._next === undefined);\n    if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {\n      newBack = {\n        _elements: [],\n        _next: undefined\n      };\n    }\n\n    // push() is the mutation most likely to throw an exception, so it\n    // goes first.\n    oldBack._elements.push(element);\n    if (newBack !== oldBack) {\n      this._back = newBack;\n      oldBack._next = newBack;\n    }\n    ++this._size;\n  }\n\n  // Like push(), shift() follows the read -> calculate -> mutate pattern for\n  // exception safety.\n  shift(): T {\n    assert(this._size > 0); // must not be called on an empty queue\n\n    const oldFront = this._front;\n    let newFront = oldFront;\n    const oldCursor = this._cursor;\n    let newCursor = oldCursor + 1;\n\n    const elements = oldFront._elements;\n    const element = elements[oldCursor];\n\n    if (newCursor === QUEUE_MAX_ARRAY_SIZE) {\n      assert(elements.length === QUEUE_MAX_ARRAY_SIZE);\n      assert(oldFront._next !== undefined);\n      newFront = oldFront._next!;\n      newCursor = 0;\n    }\n\n    // No mutations before this point.\n    --this._size;\n    this._cursor = newCursor;\n    if (oldFront !== newFront) {\n      this._front = newFront;\n    }\n\n    // Permit shifted element to be garbage collected.\n    elements[oldCursor] = undefined!;\n\n    return element;\n  }\n\n  // The tricky thing about forEach() is that it can be called\n  // re-entrantly. The queue may be mutated inside the callback. It is easy to\n  // see that push() within the callback has no negative effects since the end\n  // of the queue is checked for on every iteration. If shift() is called\n  // repeatedly within the callback then the next iteration may return an\n  // element that has been removed. In this case the callback will be called\n  // with undefined values until we either \"catch up\" with elements that still\n  // exist or reach the back of the queue.\n  forEach(callback: (element: T) => void): void {\n    let i = this._cursor;\n    let node = this._front;\n    let elements = node._elements;\n    while (i !== elements.length || node._next !== undefined) {\n      if (i === elements.length) {\n        assert(node._next !== undefined);\n        assert(i === QUEUE_MAX_ARRAY_SIZE);\n        node = node._next!;\n        elements = node._elements;\n        i = 0;\n        if (elements.length === 0) {\n          break;\n        }\n      }\n      callback(elements[i]);\n      ++i;\n    }\n  }\n\n  // Return the element that would be returned if shift() was called now,\n  // without modifying the queue.\n  peek(): T {\n    assert(this._size > 0); // must not be called on an empty queue\n\n    const front = this._front;\n    const cursor = this._cursor;\n    return front._elements[cursor];\n  }\n}\n","import assert from '../../stub/assert';\nimport { ReadableStream, ReadableStreamCancel, ReadableStreamReader } from '../readable-stream';\nimport { newPromise, setPromiseIsHandledToTrue } from '../helpers/webidl';\n\nexport function ReadableStreamReaderGenericInitialize<R>(reader: ReadableStreamReader<R>, stream: ReadableStream<R>) {\n  reader._ownerReadableStream = stream;\n  stream._reader = reader;\n\n  if (stream._state === 'readable') {\n    defaultReaderClosedPromiseInitialize(reader);\n  } else if (stream._state === 'closed') {\n    defaultReaderClosedPromiseInitializeAsResolved(reader);\n  } else {\n    assert(stream._state === 'errored');\n\n    defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n  }\n}\n\n// A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state\n// check.\n\nexport function ReadableStreamReaderGenericCancel(reader: ReadableStreamReader<any>, reason: any): Promise<undefined> {\n  const stream = reader._ownerReadableStream;\n  assert(stream !== undefined);\n  return ReadableStreamCancel(stream, reason);\n}\n\nexport function ReadableStreamReaderGenericRelease(reader: ReadableStreamReader<any>) {\n  assert(reader._ownerReadableStream !== undefined);\n  assert(reader._ownerReadableStream._reader === reader);\n\n  if (reader._ownerReadableStream._state === 'readable') {\n    defaultReaderClosedPromiseReject(\n      reader,\n      new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n  } else {\n    defaultReaderClosedPromiseResetToRejected(\n      reader,\n      new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n  }\n\n  reader._ownerReadableStream._reader = undefined;\n  reader._ownerReadableStream = undefined!;\n}\n\n// Helper functions for the readers.\n\nexport function readerLockException(name: string): TypeError {\n  return new TypeError('Cannot ' + name + ' a stream using a released reader');\n}\n\n// Helper functions for the ReadableStreamDefaultReader.\n\nexport function defaultReaderClosedPromiseInitialize(reader: ReadableStreamReader<any>) {\n  reader._closedPromise = newPromise((resolve, reject) => {\n    reader._closedPromise_resolve = resolve;\n    reader._closedPromise_reject = reject;\n  });\n}\n\nexport function defaultReaderClosedPromiseInitializeAsRejected(reader: ReadableStreamReader<any>, reason: any) {\n  defaultReaderClosedPromiseInitialize(reader);\n  defaultReaderClosedPromiseReject(reader, reason);\n}\n\nexport function defaultReaderClosedPromiseInitializeAsResolved(reader: ReadableStreamReader<any>) {\n  defaultReaderClosedPromiseInitialize(reader);\n  defaultReaderClosedPromiseResolve(reader);\n}\n\nexport function defaultReaderClosedPromiseReject(reader: ReadableStreamReader<any>, reason: any) {\n  if (reader._closedPromise_reject === undefined) {\n    return;\n  }\n\n  setPromiseIsHandledToTrue(reader._closedPromise);\n  reader._closedPromise_reject(reason);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n\nexport function defaultReaderClosedPromiseResetToRejected(reader: ReadableStreamReader<any>, reason: any) {\n  assert(reader._closedPromise_resolve === undefined);\n  assert(reader._closedPromise_reject === undefined);\n\n  defaultReaderClosedPromiseInitializeAsRejected(reader, reason);\n}\n\nexport function defaultReaderClosedPromiseResolve(reader: ReadableStreamReader<any>) {\n  if (reader._closedPromise_resolve === undefined) {\n    return;\n  }\n\n  reader._closedPromise_resolve(undefined);\n  reader._closedPromise_resolve = undefined;\n  reader._closedPromise_reject = undefined;\n}\n","export const AbortSteps = Symbol('[[AbortSteps]]');\nexport const ErrorSteps = Symbol('[[ErrorSteps]]');\nexport const CancelSteps = Symbol('[[CancelSteps]]');\nexport const PullSteps = Symbol('[[PullSteps]]');\n","/// <reference lib=\"es2015.core\" />\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite#Polyfill\nconst NumberIsFinite: typeof Number.isFinite = Number.isFinite || function (x) {\n  return typeof x === 'number' && isFinite(x);\n};\n\nexport default NumberIsFinite;\n","/// <reference lib=\"es2015.core\" />\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc#Polyfill\nconst MathTrunc: typeof Math.trunc = Math.trunc || function (v) {\n  return v < 0 ? Math.ceil(v) : Math.floor(v);\n};\n\nexport default MathTrunc;\n","import NumberIsFinite from '../../stub/number-isfinite';\nimport MathTrunc from '../../stub/math-trunc';\n\n// https://heycam.github.io/webidl/#idl-dictionaries\nexport function isDictionary(x: any): x is object | null {\n  return typeof x === 'object' || typeof x === 'function';\n}\n\nexport function assertDictionary(obj: unknown,\n                                 context: string): asserts obj is object | null | undefined {\n  if (obj !== undefined && !isDictionary(obj)) {\n    throw new TypeError(`${context} is not an object.`);\n  }\n}\n\nexport type AnyFunction = (...args: any[]) => any;\n\n// https://heycam.github.io/webidl/#idl-callback-functions\nexport function assertFunction(x: unknown, context: string): asserts x is AnyFunction {\n  if (typeof x !== 'function') {\n    throw new TypeError(`${context} is not a function.`);\n  }\n}\n\n// https://heycam.github.io/webidl/#idl-object\nexport function isObject(x: any): x is object {\n  return (typeof x === 'object' && x !== null) || typeof x === 'function';\n}\n\nexport function assertObject(x: unknown,\n                             context: string): asserts x is object {\n  if (!isObject(x)) {\n    throw new TypeError(`${context} is not an object.`);\n  }\n}\n\nexport function assertRequiredArgument<T extends any>(x: T | undefined,\n                                                      position: number,\n                                                      context: string): asserts x is T {\n  if (x === undefined) {\n    throw new TypeError(`Parameter ${position} is required in '${context}'.`);\n  }\n}\n\nexport function assertRequiredField<T extends any>(x: T | undefined,\n                                                   field: string,\n                                                   context: string): asserts x is T {\n  if (x === undefined) {\n    throw new TypeError(`${field} is required in '${context}'.`);\n  }\n}\n\n// https://heycam.github.io/webidl/#idl-unrestricted-double\nexport function convertUnrestrictedDouble(value: unknown): number {\n  return Number(value);\n}\n\nfunction censorNegativeZero(x: number): number {\n  return x === 0 ? 0 : x;\n}\n\nfunction integerPart(x: number): number {\n  return censorNegativeZero(MathTrunc(x));\n}\n\n// https://heycam.github.io/webidl/#idl-unsigned-long-long\nexport function convertUnsignedLongLongWithEnforceRange(value: unknown, context: string): number {\n  const lowerBound = 0;\n  const upperBound = Number.MAX_SAFE_INTEGER;\n\n  let x = Number(value);\n  x = censorNegativeZero(x);\n\n  if (!NumberIsFinite(x)) {\n    throw new TypeError(`${context} is not a finite number`);\n  }\n\n  x = integerPart(x);\n\n  if (x < lowerBound || x > upperBound) {\n    throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);\n  }\n\n  if (!NumberIsFinite(x) || x === 0) {\n    return 0;\n  }\n\n  // TODO Use BigInt if supported?\n  // let xBigInt = BigInt(integerPart(x));\n  // xBigInt = BigInt.asUintN(64, xBigInt);\n  // return Number(xBigInt);\n\n  return x;\n}\n","import { IsReadableStream, ReadableStream } from '../readable-stream';\n\nexport function assertReadableStream(x: unknown, context: string): asserts x is ReadableStream {\n  if (!IsReadableStream(x)) {\n    throw new TypeError(`${context} is not a ReadableStream.`);\n  }\n}\n","import assert from '../../stub/assert';\nimport { SimpleQueue } from '../simple-queue';\nimport {\n  ReadableStreamReaderGenericCancel,\n  ReadableStreamReaderGenericInitialize,\n  ReadableStreamReaderGenericRelease,\n  readerLockException\n} from './generic-reader';\nimport { IsReadableStreamLocked, ReadableStream } from '../readable-stream';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport { PullSteps } from '../abstract-ops/internal-methods';\nimport { newPromise, promiseRejectedWith } from '../helpers/webidl';\nimport { assertRequiredArgument } from '../validators/basic';\nimport { assertReadableStream } from '../validators/readable-stream';\n\n/**\n * A result returned by {@link ReadableStreamDefaultReader.read}.\n *\n * @public\n */\nexport type ReadableStreamDefaultReadResult<T> = {\n  done: false;\n  value: T;\n} | {\n  done: true;\n  value?: undefined;\n}\n\n// Abstract operations for the ReadableStream.\n\nexport function AcquireReadableStreamDefaultReader<R>(stream: ReadableStream): ReadableStreamDefaultReader<R> {\n  return new ReadableStreamDefaultReader(stream);\n}\n\n// ReadableStream API exposed for controllers.\n\nexport function ReadableStreamAddReadRequest<R>(stream: ReadableStream<R>,\n                                                readRequest: ReadRequest<R>): void {\n  assert(IsReadableStreamDefaultReader(stream._reader));\n  assert(stream._state === 'readable');\n\n  (stream._reader! as ReadableStreamDefaultReader<R>)._readRequests.push(readRequest);\n}\n\nexport function ReadableStreamFulfillReadRequest<R>(stream: ReadableStream<R>, chunk: R | undefined, done: boolean) {\n  const reader = stream._reader as ReadableStreamDefaultReader<R>;\n\n  assert(reader._readRequests.length > 0);\n\n  const readRequest = reader._readRequests.shift()!;\n  if (done) {\n    readRequest._closeSteps();\n  } else {\n    readRequest._chunkSteps(chunk!);\n  }\n}\n\nexport function ReadableStreamGetNumReadRequests<R>(stream: ReadableStream<R>): number {\n  return (stream._reader as ReadableStreamDefaultReader<R>)._readRequests.length;\n}\n\nexport function ReadableStreamHasDefaultReader(stream: ReadableStream): boolean {\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return false;\n  }\n\n  if (!IsReadableStreamDefaultReader(reader)) {\n    return false;\n  }\n\n  return true;\n}\n\n// Readers\n\nexport interface ReadRequest<R> {\n  _chunkSteps(chunk: R): void;\n\n  _closeSteps(): void;\n\n  _errorSteps(e: any): void;\n}\n\n/**\n * A default reader vended by a {@link ReadableStream}.\n *\n * @public\n */\nexport class ReadableStreamDefaultReader<R = any> {\n  /** @internal */\n  _ownerReadableStream!: ReadableStream<R>;\n  /** @internal */\n  _closedPromise!: Promise<undefined>;\n  /** @internal */\n  _closedPromise_resolve?: (value?: undefined) => void;\n  /** @internal */\n  _closedPromise_reject?: (reason: any) => void;\n  /** @internal */\n  _readRequests: SimpleQueue<ReadRequest<R>>;\n\n  constructor(stream: ReadableStream<R>) {\n    assertRequiredArgument(stream, 1, 'ReadableStreamDefaultReader');\n    assertReadableStream(stream, 'First parameter');\n\n    if (IsReadableStreamLocked(stream)) {\n      throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n    }\n\n    ReadableStreamReaderGenericInitialize(this, stream);\n\n    this._readRequests = new SimpleQueue();\n  }\n\n  /**\n   * Returns a promise that will be fulfilled when the stream becomes closed,\n   * or rejected if the stream ever errors or the reader's lock is released before the stream finishes closing.\n   */\n  get closed(): Promise<undefined> {\n    if (!IsReadableStreamDefaultReader(this)) {\n      return promiseRejectedWith(defaultReaderBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  /**\n   * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n   */\n  cancel(reason: any = undefined): Promise<void> {\n    if (!IsReadableStreamDefaultReader(this)) {\n      return promiseRejectedWith(defaultReaderBrandCheckException('cancel'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('cancel'));\n    }\n\n    return ReadableStreamReaderGenericCancel(this, reason);\n  }\n\n  /**\n   * Returns a promise that allows access to the next chunk from the stream's internal queue, if available.\n   *\n   * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n   */\n  read(): Promise<ReadableStreamDefaultReadResult<R>> {\n    if (!IsReadableStreamDefaultReader(this)) {\n      return promiseRejectedWith(defaultReaderBrandCheckException('read'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('read from'));\n    }\n\n    let resolvePromise!: (result: ReadableStreamDefaultReadResult<R>) => void;\n    let rejectPromise!: (reason: any) => void;\n    const promise = newPromise<ReadableStreamDefaultReadResult<R>>((resolve, reject) => {\n      resolvePromise = resolve;\n      rejectPromise = reject;\n    });\n    const readRequest: ReadRequest<R> = {\n      _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n      _closeSteps: () => resolvePromise({ value: undefined, done: true }),\n      _errorSteps: e => rejectPromise(e)\n    };\n    ReadableStreamDefaultReaderRead(this, readRequest);\n    return promise;\n  }\n\n  /**\n   * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n   * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n   * from now on; otherwise, the reader will appear closed.\n   *\n   * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n   * the reader's {@link ReadableStreamDefaultReader.read | read()} method has not yet been settled. Attempting to\n   * do so will throw a `TypeError` and leave the reader locked to the stream.\n   */\n  releaseLock(): void {\n    if (!IsReadableStreamDefaultReader(this)) {\n      throw defaultReaderBrandCheckException('releaseLock');\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return;\n    }\n\n    if (this._readRequests.length > 0) {\n      throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n    }\n\n    ReadableStreamReaderGenericRelease(this);\n  }\n}\n\nObject.defineProperties(ReadableStreamDefaultReader.prototype, {\n  cancel: { enumerable: true },\n  read: { enumerable: true },\n  releaseLock: { enumerable: true },\n  closed: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStreamDefaultReader.prototype, Symbol.toStringTag, {\n    value: 'ReadableStreamDefaultReader',\n    configurable: true\n  });\n}\n\n// Abstract operations for the readers.\n\nexport function IsReadableStreamDefaultReader<R = any>(x: any): x is ReadableStreamDefaultReader<R> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n    return false;\n  }\n\n  return x instanceof ReadableStreamDefaultReader;\n}\n\nexport function ReadableStreamDefaultReaderRead<R>(reader: ReadableStreamDefaultReader<R>,\n                                                   readRequest: ReadRequest<R>): void {\n  const stream = reader._ownerReadableStream;\n\n  assert(stream !== undefined);\n\n  stream._disturbed = true;\n\n  if (stream._state === 'closed') {\n    readRequest._closeSteps();\n  } else if (stream._state === 'errored') {\n    readRequest._errorSteps(stream._storedError);\n  } else {\n    assert(stream._state === 'readable');\n    stream._readableStreamController[PullSteps](readRequest as ReadRequest<any>);\n  }\n}\n\n// Helper functions for the ReadableStreamDefaultReader.\n\nfunction defaultReaderBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);\n}\n","/// <reference lib=\"es2018.asynciterable\" />\n\n/* eslint-disable @typescript-eslint/no-empty-function */\nexport const AsyncIteratorPrototype: AsyncIterable<any> | undefined =\n  Object.getPrototypeOf(Object.getPrototypeOf(async function* (): AsyncIterableIterator<any> {}).prototype);\n","/// <reference lib=\"es2018.asynciterable\" />\n\nimport { ReadableStream } from '../readable-stream';\nimport {\n  AcquireReadableStreamDefaultReader,\n  ReadableStreamDefaultReader,\n  ReadableStreamDefaultReaderRead,\n  ReadableStreamDefaultReadResult,\n  ReadRequest\n} from './default-reader';\nimport {\n  ReadableStreamReaderGenericCancel,\n  ReadableStreamReaderGenericRelease,\n  readerLockException\n} from './generic-reader';\nimport assert from '../../stub/assert';\nimport { AsyncIteratorPrototype } from '@@target/stub/async-iterator-prototype';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport {\n  newPromise,\n  promiseRejectedWith,\n  promiseResolvedWith,\n  queueMicrotask,\n  transformPromiseWith\n} from '../helpers/webidl';\n\n/**\n * An async iterator returned by {@link ReadableStream.values}.\n *\n * @public\n */\nexport interface ReadableStreamAsyncIterator<R> extends AsyncIterator<R> {\n  next(): Promise<IteratorResult<R, undefined>>;\n\n  return(value?: any): Promise<IteratorResult<any>>;\n}\n\nexport class ReadableStreamAsyncIteratorImpl<R> {\n  private readonly _reader: ReadableStreamDefaultReader<R>;\n  private readonly _preventCancel: boolean;\n  private _ongoingPromise: Promise<ReadableStreamDefaultReadResult<R>> | undefined = undefined;\n  private _isFinished = false;\n\n  constructor(reader: ReadableStreamDefaultReader<R>, preventCancel: boolean) {\n    this._reader = reader;\n    this._preventCancel = preventCancel;\n  }\n\n  next(): Promise<ReadableStreamDefaultReadResult<R>> {\n    const nextSteps = () => this._nextSteps();\n    this._ongoingPromise = this._ongoingPromise ?\n      transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) :\n      nextSteps();\n    return this._ongoingPromise;\n  }\n\n  return(value: any): Promise<ReadableStreamDefaultReadResult<any>> {\n    const returnSteps = () => this._returnSteps(value);\n    return this._ongoingPromise ?\n      transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) :\n      returnSteps();\n  }\n\n  private _nextSteps(): Promise<ReadableStreamDefaultReadResult<R>> {\n    if (this._isFinished) {\n      return Promise.resolve({ value: undefined, done: true });\n    }\n\n    const reader = this._reader;\n    if (reader._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('iterate'));\n    }\n\n    let resolvePromise!: (result: ReadableStreamDefaultReadResult<R>) => void;\n    let rejectPromise!: (reason: any) => void;\n    const promise = newPromise<ReadableStreamDefaultReadResult<R>>((resolve, reject) => {\n      resolvePromise = resolve;\n      rejectPromise = reject;\n    });\n    const readRequest: ReadRequest<R> = {\n      _chunkSteps: chunk => {\n        this._ongoingPromise = undefined;\n        // This needs to be delayed by one microtask, otherwise we stop pulling too early which breaks a test.\n        // FIXME Is this a bug in the specification, or in the test?\n        queueMicrotask(() => resolvePromise({ value: chunk, done: false }));\n      },\n      _closeSteps: () => {\n        this._ongoingPromise = undefined;\n        this._isFinished = true;\n        ReadableStreamReaderGenericRelease(reader);\n        resolvePromise({ value: undefined, done: true });\n      },\n      _errorSteps: reason => {\n        this._ongoingPromise = undefined;\n        this._isFinished = true;\n        ReadableStreamReaderGenericRelease(reader);\n        rejectPromise(reason);\n      }\n    };\n    ReadableStreamDefaultReaderRead(reader, readRequest);\n    return promise;\n  }\n\n  private _returnSteps(value: any): Promise<ReadableStreamDefaultReadResult<any>> {\n    if (this._isFinished) {\n      return Promise.resolve({ value, done: true });\n    }\n    this._isFinished = true;\n\n    const reader = this._reader;\n    if (reader._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('finish iterating'));\n    }\n\n    assert(reader._readRequests.length === 0);\n\n    if (!this._preventCancel) {\n      const result = ReadableStreamReaderGenericCancel(reader, value);\n      ReadableStreamReaderGenericRelease(reader);\n      return transformPromiseWith(result, () => ({ value, done: true }));\n    }\n\n    ReadableStreamReaderGenericRelease(reader);\n    return promiseResolvedWith({ value, done: true });\n  }\n}\n\ndeclare class ReadableStreamAsyncIteratorInstance<R> implements ReadableStreamAsyncIterator<R> {\n  /** @interal */\n  _asyncIteratorImpl: ReadableStreamAsyncIteratorImpl<R>;\n\n  next(): Promise<IteratorResult<R, undefined>>;\n\n  return(value?: any): Promise<IteratorResult<any>>;\n}\n\nconst ReadableStreamAsyncIteratorPrototype: ReadableStreamAsyncIteratorInstance<any> = {\n  next(this: ReadableStreamAsyncIteratorInstance<any>): Promise<ReadableStreamDefaultReadResult<any>> {\n    if (!IsReadableStreamAsyncIterator(this)) {\n      return promiseRejectedWith(streamAsyncIteratorBrandCheckException('next'));\n    }\n    return this._asyncIteratorImpl.next();\n  },\n\n  return(this: ReadableStreamAsyncIteratorInstance<any>, value: any): Promise<ReadableStreamDefaultReadResult<any>> {\n    if (!IsReadableStreamAsyncIterator(this)) {\n      return promiseRejectedWith(streamAsyncIteratorBrandCheckException('return'));\n    }\n    return this._asyncIteratorImpl.return(value);\n  }\n} as any;\nif (AsyncIteratorPrototype !== undefined) {\n  Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);\n}\n\n// Abstract operations for the ReadableStream.\n\nexport function AcquireReadableStreamAsyncIterator<R>(stream: ReadableStream<R>,\n                                                      preventCancel: boolean): ReadableStreamAsyncIterator<R> {\n  const reader = AcquireReadableStreamDefaultReader<R>(stream);\n  const impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);\n  const iterator: ReadableStreamAsyncIteratorInstance<R> = Object.create(ReadableStreamAsyncIteratorPrototype);\n  iterator._asyncIteratorImpl = impl;\n  return iterator;\n}\n\nfunction IsReadableStreamAsyncIterator<R = any>(x: any): x is ReadableStreamAsyncIterator<R> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_asyncIteratorImpl')) {\n    return false;\n  }\n\n  try {\n    // noinspection SuspiciousTypeOfGuard\n    return (x as ReadableStreamAsyncIteratorInstance<any>)._asyncIteratorImpl instanceof\n      ReadableStreamAsyncIteratorImpl;\n  } catch {\n    return false;\n  }\n}\n\n// Helper functions for the ReadableStream.\n\nfunction streamAsyncIteratorBrandCheckException(name: string): TypeError {\n  return new TypeError(`ReadableStreamAsyncIterator.${name} can only be used on a ReadableSteamAsyncIterator`);\n}\n","/// <reference lib=\"es2015.core\" />\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#Polyfill\nconst NumberIsNaN: typeof Number.isNaN = Number.isNaN || function (x) {\n  // eslint-disable-next-line no-self-compare\n  return x !== x;\n};\n\nexport default NumberIsNaN;\n","export function CreateArrayFromList<T extends any[]>(elements: T): T {\n  // We use arrays to represent lists, so this is basically a no-op.\n  // Do a slice though just in case we happen to depend on the unique-ness.\n  return elements.slice() as T;\n}\n\nexport function CopyDataBlockBytes(dest: ArrayBuffer,\n                                   destOffset: number,\n                                   src: ArrayBuffer,\n                                   srcOffset: number,\n                                   n: number) {\n  new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n}\n\n// Not implemented correctly\nexport function TransferArrayBuffer<T extends ArrayBufferLike>(O: T): T {\n  return O;\n}\n\n// Not implemented correctly\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function CanTransferArrayBuffer(O: ArrayBufferLike): boolean {\n  return true;\n}\n\n// Not implemented correctly\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function IsDetachedBuffer(O: ArrayBufferLike): boolean {\n  return false;\n}\n\nexport function ArrayBufferSlice(buffer: ArrayBufferLike, begin: number, end: number): ArrayBufferLike {\n  // ArrayBuffer.prototype.slice is not available on IE10\n  // https://www.caniuse.com/mdn-javascript_builtins_arraybuffer_slice\n  if (buffer.slice) {\n    return buffer.slice(begin, end);\n  }\n  const length = end - begin;\n  const slice = new ArrayBuffer(length);\n  CopyDataBlockBytes(slice, 0, buffer, begin, length);\n  return slice;\n}\n","import NumberIsNaN from '../../stub/number-isnan';\nimport { ArrayBufferSlice } from './ecmascript';\n\nexport function IsNonNegativeNumber(v: number): boolean {\n  if (typeof v !== 'number') {\n    return false;\n  }\n\n  if (NumberIsNaN(v)) {\n    return false;\n  }\n\n  if (v < 0) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function CloneAsUint8Array(O: ArrayBufferView): Uint8Array {\n  const buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);\n  return new Uint8Array(buffer);\n}\n","import assert from '../../stub/assert';\nimport { SimpleQueue } from '../simple-queue';\nimport { IsNonNegativeNumber } from './miscellaneous';\n\nexport interface QueueContainer<T> {\n  _queue: SimpleQueue<T>;\n  _queueTotalSize: number;\n}\n\nexport interface QueuePair<T> {\n  value: T;\n  size: number;\n}\n\nexport function DequeueValue<T>(container: QueueContainer<QueuePair<T>>): T {\n  assert('_queue' in container && '_queueTotalSize' in container);\n  assert(container._queue.length > 0);\n\n  const pair = container._queue.shift()!;\n  container._queueTotalSize -= pair.size;\n  if (container._queueTotalSize < 0) {\n    container._queueTotalSize = 0;\n  }\n\n  return pair.value;\n}\n\nexport function EnqueueValueWithSize<T>(container: QueueContainer<QueuePair<T>>, value: T, size: number) {\n  assert('_queue' in container && '_queueTotalSize' in container);\n\n  if (!IsNonNegativeNumber(size) || size === Infinity) {\n    throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n  }\n\n  container._queue.push({ value, size });\n  container._queueTotalSize += size;\n}\n\nexport function PeekQueueValue<T>(container: QueueContainer<QueuePair<T>>): T {\n  assert('_queue' in container && '_queueTotalSize' in container);\n  assert(container._queue.length > 0);\n\n  const pair = container._queue.peek();\n  return pair.value;\n}\n\nexport function ResetQueue<T>(container: QueueContainer<T>) {\n  assert('_queue' in container && '_queueTotalSize' in container);\n\n  container._queue = new SimpleQueue<T>();\n  container._queueTotalSize = 0;\n}\n","import assert from '../../stub/assert';\nimport { SimpleQueue } from '../simple-queue';\nimport { ResetQueue } from '../abstract-ops/queue-with-sizes';\nimport {\n  ReadableStreamAddReadRequest,\n  ReadableStreamFulfillReadRequest,\n  ReadableStreamGetNumReadRequests,\n  ReadableStreamHasDefaultReader,\n  ReadRequest\n} from './default-reader';\nimport {\n  ReadableStreamAddReadIntoRequest,\n  ReadableStreamFulfillReadIntoRequest,\n  ReadableStreamGetNumReadIntoRequests,\n  ReadableStreamHasBYOBReader,\n  ReadIntoRequest\n} from './byob-reader';\nimport NumberIsInteger from '../../stub/number-isinteger';\nimport {\n  IsReadableStreamLocked,\n  ReadableByteStream,\n  ReadableStreamClose,\n  ReadableStreamError\n} from '../readable-stream';\nimport { ValidatedUnderlyingByteSource } from './underlying-source';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport {\n  ArrayBufferSlice,\n  CanTransferArrayBuffer,\n  CopyDataBlockBytes,\n  IsDetachedBuffer,\n  TransferArrayBuffer\n} from '../abstract-ops/ecmascript';\nimport { CancelSteps, PullSteps } from '../abstract-ops/internal-methods';\nimport { promiseResolvedWith, uponPromise } from '../helpers/webidl';\nimport { assertRequiredArgument, convertUnsignedLongLongWithEnforceRange } from '../validators/basic';\n\n/**\n * A pull-into request in a {@link ReadableByteStreamController}.\n *\n * @public\n */\nexport class ReadableStreamBYOBRequest {\n  /** @internal */\n  _associatedReadableByteStreamController!: ReadableByteStreamController;\n  /** @internal */\n  _view!: ArrayBufferView | null;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * Returns the view for writing in to, or `null` if the BYOB request has already been responded to.\n   */\n  get view(): ArrayBufferView | null {\n    if (!IsReadableStreamBYOBRequest(this)) {\n      throw byobRequestBrandCheckException('view');\n    }\n\n    return this._view;\n  }\n\n  /**\n   * Indicates to the associated readable byte stream that `bytesWritten` bytes were written into\n   * {@link ReadableStreamBYOBRequest.view | view}, causing the result be surfaced to the consumer.\n   *\n   * After this method is called, {@link ReadableStreamBYOBRequest.view | view} will be transferred and no longer\n   * modifiable.\n   */\n  respond(bytesWritten: number): void;\n  respond(bytesWritten: number | undefined): void {\n    if (!IsReadableStreamBYOBRequest(this)) {\n      throw byobRequestBrandCheckException('respond');\n    }\n    assertRequiredArgument(bytesWritten, 1, 'respond');\n    bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, 'First parameter');\n\n    if (this._associatedReadableByteStreamController === undefined) {\n      throw new TypeError('This BYOB request has been invalidated');\n    }\n\n    if (IsDetachedBuffer(this._view!.buffer)) {\n      throw new TypeError(`The BYOB request's buffer has been detached and so cannot be used as a response`);\n    }\n\n    assert(this._view!.byteLength > 0);\n    assert(this._view!.buffer.byteLength > 0);\n\n    ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n  }\n\n  /**\n   * Indicates to the associated readable byte stream that instead of writing into\n   * {@link ReadableStreamBYOBRequest.view | view}, the underlying byte source is providing a new `ArrayBufferView`,\n   * which will be given to the consumer of the readable byte stream.\n   *\n   * After this method is called, `view` will be transferred and no longer modifiable.\n   */\n  respondWithNewView(view: ArrayBufferView): void;\n  respondWithNewView(view: ArrayBufferView | undefined): void {\n    if (!IsReadableStreamBYOBRequest(this)) {\n      throw byobRequestBrandCheckException('respondWithNewView');\n    }\n    assertRequiredArgument(view, 1, 'respondWithNewView');\n\n    if (!ArrayBuffer.isView(view)) {\n      throw new TypeError('You can only respond with array buffer views');\n    }\n\n    if (this._associatedReadableByteStreamController === undefined) {\n      throw new TypeError('This BYOB request has been invalidated');\n    }\n\n    if (IsDetachedBuffer(view.buffer)) {\n      throw new TypeError('The given view\\'s buffer has been detached and so cannot be used as a response');\n    }\n\n    ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n  }\n}\n\nObject.defineProperties(ReadableStreamBYOBRequest.prototype, {\n  respond: { enumerable: true },\n  respondWithNewView: { enumerable: true },\n  view: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStreamBYOBRequest.prototype, Symbol.toStringTag, {\n    value: 'ReadableStreamBYOBRequest',\n    configurable: true\n  });\n}\n\ninterface ArrayBufferViewConstructor<T extends ArrayBufferView = ArrayBufferView> {\n  new(buffer: ArrayBufferLike, byteOffset: number, length?: number): T;\n\n  readonly prototype: T;\n  readonly BYTES_PER_ELEMENT: number;\n}\n\ninterface ByteQueueElement {\n  buffer: ArrayBufferLike;\n  byteOffset: number;\n  byteLength: number;\n}\n\ntype PullIntoDescriptor<T extends ArrayBufferView = ArrayBufferView> =\n  DefaultPullIntoDescriptor\n  | BYOBPullIntoDescriptor<T>;\n\ninterface DefaultPullIntoDescriptor {\n  buffer: ArrayBufferLike;\n  bufferByteLength: number;\n  byteOffset: number;\n  byteLength: number;\n  bytesFilled: number;\n  elementSize: number;\n  viewConstructor: ArrayBufferViewConstructor<Uint8Array>;\n  readerType: 'default';\n}\n\ninterface BYOBPullIntoDescriptor<T extends ArrayBufferView = ArrayBufferView> {\n  buffer: ArrayBufferLike;\n  bufferByteLength: number;\n  byteOffset: number;\n  byteLength: number;\n  bytesFilled: number;\n  elementSize: number;\n  viewConstructor: ArrayBufferViewConstructor<T>;\n  readerType: 'byob';\n}\n\n/**\n * Allows control of a {@link ReadableStream | readable byte stream}'s state and internal queue.\n *\n * @public\n */\nexport class ReadableByteStreamController {\n  /** @internal */\n  _controlledReadableByteStream!: ReadableByteStream;\n  /** @internal */\n  _queue!: SimpleQueue<ByteQueueElement>;\n  /** @internal */\n  _queueTotalSize!: number;\n  /** @internal */\n  _started!: boolean;\n  /** @internal */\n  _closeRequested!: boolean;\n  /** @internal */\n  _pullAgain!: boolean;\n  /** @internal */\n  _pulling !: boolean;\n  /** @internal */\n  _strategyHWM!: number;\n  /** @internal */\n  _pullAlgorithm!: () => Promise<void>;\n  /** @internal */\n  _cancelAlgorithm!: (reason: any) => Promise<void>;\n  /** @internal */\n  _autoAllocateChunkSize: number | undefined;\n  /** @internal */\n  _byobRequest: ReadableStreamBYOBRequest | null;\n  /** @internal */\n  _pendingPullIntos!: SimpleQueue<PullIntoDescriptor>;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * Returns the current BYOB pull request, or `null` if there isn't one.\n   */\n  get byobRequest(): ReadableStreamBYOBRequest | null {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('byobRequest');\n    }\n\n    return ReadableByteStreamControllerGetBYOBRequest(this);\n  }\n\n  /**\n   * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n   * over-full. An underlying byte source ought to use this information to determine when and how to apply backpressure.\n   */\n  get desiredSize(): number | null {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('desiredSize');\n    }\n\n    return ReadableByteStreamControllerGetDesiredSize(this);\n  }\n\n  /**\n   * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n   * the stream, but once those are read, the stream will become closed.\n   */\n  close(): void {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('close');\n    }\n\n    if (this._closeRequested) {\n      throw new TypeError('The stream has already been closed; do not close it again!');\n    }\n\n    const state = this._controlledReadableByteStream._state;\n    if (state !== 'readable') {\n      throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);\n    }\n\n    ReadableByteStreamControllerClose(this);\n  }\n\n  /**\n   * Enqueues the given chunk chunk in the controlled readable stream.\n   * The chunk has to be an `ArrayBufferView` instance, or else a `TypeError` will be thrown.\n   */\n  enqueue(chunk: ArrayBufferView): void;\n  enqueue(chunk: ArrayBufferView | undefined): void {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('enqueue');\n    }\n\n    assertRequiredArgument(chunk, 1, 'enqueue');\n    if (!ArrayBuffer.isView(chunk)) {\n      throw new TypeError('chunk must be an array buffer view');\n    }\n    if (chunk.byteLength === 0) {\n      throw new TypeError('chunk must have non-zero byteLength');\n    }\n    if (chunk.buffer.byteLength === 0) {\n      throw new TypeError(`chunk's buffer must have non-zero byteLength`);\n    }\n\n    if (this._closeRequested) {\n      throw new TypeError('stream is closed or draining');\n    }\n\n    const state = this._controlledReadableByteStream._state;\n    if (state !== 'readable') {\n      throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);\n    }\n\n    ReadableByteStreamControllerEnqueue(this, chunk);\n  }\n\n  /**\n   * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n   */\n  error(e: any = undefined): void {\n    if (!IsReadableByteStreamController(this)) {\n      throw byteStreamControllerBrandCheckException('error');\n    }\n\n    ReadableByteStreamControllerError(this, e);\n  }\n\n  /** @internal */\n  [CancelSteps](reason: any): Promise<void> {\n    ReadableByteStreamControllerClearPendingPullIntos(this);\n\n    ResetQueue(this);\n\n    const result = this._cancelAlgorithm(reason);\n    ReadableByteStreamControllerClearAlgorithms(this);\n    return result;\n  }\n\n  /** @internal */\n  [PullSteps](readRequest: ReadRequest<Uint8Array>): void {\n    const stream = this._controlledReadableByteStream;\n    assert(ReadableStreamHasDefaultReader(stream));\n\n    if (this._queueTotalSize > 0) {\n      assert(ReadableStreamGetNumReadRequests(stream) === 0);\n\n      const entry = this._queue.shift()!;\n      this._queueTotalSize -= entry.byteLength;\n\n      ReadableByteStreamControllerHandleQueueDrain(this);\n\n      const view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n\n      readRequest._chunkSteps(view);\n      return;\n    }\n\n    const autoAllocateChunkSize = this._autoAllocateChunkSize;\n    if (autoAllocateChunkSize !== undefined) {\n      let buffer: ArrayBuffer;\n      try {\n        buffer = new ArrayBuffer(autoAllocateChunkSize);\n      } catch (bufferE) {\n        readRequest._errorSteps(bufferE);\n        return;\n      }\n\n      const pullIntoDescriptor: DefaultPullIntoDescriptor = {\n        buffer,\n        bufferByteLength: autoAllocateChunkSize,\n        byteOffset: 0,\n        byteLength: autoAllocateChunkSize,\n        bytesFilled: 0,\n        elementSize: 1,\n        viewConstructor: Uint8Array,\n        readerType: 'default'\n      };\n\n      this._pendingPullIntos.push(pullIntoDescriptor);\n    }\n\n    ReadableStreamAddReadRequest(stream, readRequest);\n    ReadableByteStreamControllerCallPullIfNeeded(this);\n  }\n}\n\nObject.defineProperties(ReadableByteStreamController.prototype, {\n  close: { enumerable: true },\n  enqueue: { enumerable: true },\n  error: { enumerable: true },\n  byobRequest: { enumerable: true },\n  desiredSize: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableByteStreamController.prototype, Symbol.toStringTag, {\n    value: 'ReadableByteStreamController',\n    configurable: true\n  });\n}\n\n// Abstract operations for the ReadableByteStreamController.\n\nexport function IsReadableByteStreamController(x: any): x is ReadableByteStreamController {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableByteStream')) {\n    return false;\n  }\n\n  return x instanceof ReadableByteStreamController;\n}\n\nfunction IsReadableStreamBYOBRequest(x: any): x is ReadableStreamBYOBRequest {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n    return false;\n  }\n\n  return x instanceof ReadableStreamBYOBRequest;\n}\n\nfunction ReadableByteStreamControllerCallPullIfNeeded(controller: ReadableByteStreamController): void {\n  const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n  if (!shouldPull) {\n    return;\n  }\n\n  if (controller._pulling) {\n    controller._pullAgain = true;\n    return;\n  }\n\n  assert(!controller._pullAgain);\n\n  controller._pulling = true;\n\n  // TODO: Test controller argument\n  const pullPromise = controller._pullAlgorithm();\n  uponPromise(\n    pullPromise,\n    () => {\n      controller._pulling = false;\n\n      if (controller._pullAgain) {\n        controller._pullAgain = false;\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }\n    },\n    e => {\n      ReadableByteStreamControllerError(controller, e);\n    }\n  );\n}\n\nfunction ReadableByteStreamControllerClearPendingPullIntos(controller: ReadableByteStreamController) {\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n  controller._pendingPullIntos = new SimpleQueue();\n}\n\nfunction ReadableByteStreamControllerCommitPullIntoDescriptor<T extends ArrayBufferView>(\n  stream: ReadableByteStream,\n  pullIntoDescriptor: PullIntoDescriptor<T>\n) {\n  assert(stream._state !== 'errored');\n\n  let done = false;\n  if (stream._state === 'closed') {\n    assert(pullIntoDescriptor.bytesFilled === 0);\n    done = true;\n  }\n\n  const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor<T>(pullIntoDescriptor);\n  if (pullIntoDescriptor.readerType === 'default') {\n    ReadableStreamFulfillReadRequest(stream, filledView as unknown as Uint8Array, done);\n  } else {\n    assert(pullIntoDescriptor.readerType === 'byob');\n    ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n  }\n}\n\nfunction ReadableByteStreamControllerConvertPullIntoDescriptor<T extends ArrayBufferView>(\n  pullIntoDescriptor: PullIntoDescriptor<T>\n): T {\n  const bytesFilled = pullIntoDescriptor.bytesFilled;\n  const elementSize = pullIntoDescriptor.elementSize;\n\n  assert(bytesFilled <= pullIntoDescriptor.byteLength);\n  assert(bytesFilled % elementSize === 0);\n\n  return new pullIntoDescriptor.viewConstructor(\n    pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize) as T;\n}\n\nfunction ReadableByteStreamControllerEnqueueChunkToQueue(controller: ReadableByteStreamController,\n                                                         buffer: ArrayBufferLike,\n                                                         byteOffset: number,\n                                                         byteLength: number) {\n  controller._queue.push({ buffer, byteOffset, byteLength });\n  controller._queueTotalSize += byteLength;\n}\n\nfunction ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller: ReadableByteStreamController,\n                                                                     pullIntoDescriptor: PullIntoDescriptor) {\n  const elementSize = pullIntoDescriptor.elementSize;\n\n  const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n\n  const maxBytesToCopy = Math.min(controller._queueTotalSize,\n                                  pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n  const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n  const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n\n  let totalBytesToCopyRemaining = maxBytesToCopy;\n  let ready = false;\n  if (maxAlignedBytes > currentAlignedBytes) {\n    totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n    ready = true;\n  }\n\n  const queue = controller._queue;\n\n  while (totalBytesToCopyRemaining > 0) {\n    const headOfQueue = queue.peek();\n\n    const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n\n    const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n    CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n\n    if (headOfQueue.byteLength === bytesToCopy) {\n      queue.shift();\n    } else {\n      headOfQueue.byteOffset += bytesToCopy;\n      headOfQueue.byteLength -= bytesToCopy;\n    }\n    controller._queueTotalSize -= bytesToCopy;\n\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n\n    totalBytesToCopyRemaining -= bytesToCopy;\n  }\n\n  if (!ready) {\n    assert(controller._queueTotalSize === 0);\n    assert(pullIntoDescriptor.bytesFilled > 0);\n    assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\n  }\n\n  return ready;\n}\n\nfunction ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller: ReadableByteStreamController,\n                                                                size: number,\n                                                                pullIntoDescriptor: PullIntoDescriptor) {\n  assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos.peek() === pullIntoDescriptor);\n  assert(controller._byobRequest === null);\n  pullIntoDescriptor.bytesFilled += size;\n}\n\nfunction ReadableByteStreamControllerHandleQueueDrain(controller: ReadableByteStreamController) {\n  assert(controller._controlledReadableByteStream._state === 'readable');\n\n  if (controller._queueTotalSize === 0 && controller._closeRequested) {\n    ReadableByteStreamControllerClearAlgorithms(controller);\n    ReadableStreamClose(controller._controlledReadableByteStream);\n  } else {\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n  }\n}\n\nfunction ReadableByteStreamControllerInvalidateBYOBRequest(controller: ReadableByteStreamController) {\n  if (controller._byobRequest === null) {\n    return;\n  }\n\n  controller._byobRequest._associatedReadableByteStreamController = undefined!;\n  controller._byobRequest._view = null!;\n  controller._byobRequest = null;\n}\n\nfunction ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller: ReadableByteStreamController) {\n  assert(!controller._closeRequested);\n\n  while (controller._pendingPullIntos.length > 0) {\n    if (controller._queueTotalSize === 0) {\n      return;\n    }\n\n    const pullIntoDescriptor = controller._pendingPullIntos.peek();\n\n    if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n      ReadableByteStreamControllerShiftPendingPullInto(controller);\n\n      ReadableByteStreamControllerCommitPullIntoDescriptor(\n        controller._controlledReadableByteStream,\n        pullIntoDescriptor\n      );\n    }\n  }\n}\n\nexport function ReadableByteStreamControllerPullInto<T extends ArrayBufferView>(\n  controller: ReadableByteStreamController,\n  view: T,\n  readIntoRequest: ReadIntoRequest<T>\n): void {\n  const stream = controller._controlledReadableByteStream;\n\n  let elementSize = 1;\n  if (view.constructor !== DataView) {\n    elementSize = (view.constructor as ArrayBufferViewConstructor<T>).BYTES_PER_ELEMENT;\n  }\n\n  const ctor = view.constructor as ArrayBufferViewConstructor<T>;\n\n  // try {\n  const buffer = TransferArrayBuffer(view.buffer);\n  // } catch (e) {\n  //   readIntoRequest._errorSteps(e);\n  //   return;\n  // }\n\n  const pullIntoDescriptor: BYOBPullIntoDescriptor<T> = {\n    buffer,\n    bufferByteLength: buffer.byteLength,\n    byteOffset: view.byteOffset,\n    byteLength: view.byteLength,\n    bytesFilled: 0,\n    elementSize,\n    viewConstructor: ctor,\n    readerType: 'byob'\n  };\n\n  if (controller._pendingPullIntos.length > 0) {\n    controller._pendingPullIntos.push(pullIntoDescriptor);\n\n    // No ReadableByteStreamControllerCallPullIfNeeded() call since:\n    // - No change happens on desiredSize\n    // - The source has already been notified of that there's at least 1 pending read(view)\n\n    ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n    return;\n  }\n\n  if (stream._state === 'closed') {\n    const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n    readIntoRequest._closeSteps(emptyView);\n    return;\n  }\n\n  if (controller._queueTotalSize > 0) {\n    if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n      const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor<T>(pullIntoDescriptor);\n\n      ReadableByteStreamControllerHandleQueueDrain(controller);\n\n      readIntoRequest._chunkSteps(filledView);\n      return;\n    }\n\n    if (controller._closeRequested) {\n      const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n      ReadableByteStreamControllerError(controller, e);\n\n      readIntoRequest._errorSteps(e);\n      return;\n    }\n  }\n\n  controller._pendingPullIntos.push(pullIntoDescriptor);\n\n  ReadableStreamAddReadIntoRequest<T>(stream, readIntoRequest);\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nfunction ReadableByteStreamControllerRespondInClosedState(controller: ReadableByteStreamController,\n                                                          firstDescriptor: PullIntoDescriptor) {\n  assert(firstDescriptor.bytesFilled === 0);\n\n  const stream = controller._controlledReadableByteStream;\n  if (ReadableStreamHasBYOBReader(stream)) {\n    while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n      const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n      ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n    }\n  }\n}\n\nfunction ReadableByteStreamControllerRespondInReadableState(controller: ReadableByteStreamController,\n                                                            bytesWritten: number,\n                                                            pullIntoDescriptor: PullIntoDescriptor) {\n  assert(pullIntoDescriptor.bytesFilled + bytesWritten <= pullIntoDescriptor.byteLength);\n\n  ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n\n  if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n    return;\n  }\n\n  ReadableByteStreamControllerShiftPendingPullInto(controller);\n\n  const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n  if (remainderSize > 0) {\n    const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n    const remainder = ArrayBufferSlice(pullIntoDescriptor.buffer, end - remainderSize, end);\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n  }\n\n  pullIntoDescriptor.bytesFilled -= remainderSize;\n  ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n\n  ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n}\n\nfunction ReadableByteStreamControllerRespondInternal(controller: ReadableByteStreamController, bytesWritten: number) {\n  const firstDescriptor = controller._pendingPullIntos.peek();\n  assert(CanTransferArrayBuffer(firstDescriptor.buffer));\n\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n\n  const state = controller._controlledReadableByteStream._state;\n  if (state === 'closed') {\n    assert(bytesWritten === 0);\n    ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n  } else {\n    assert(state === 'readable');\n    assert(bytesWritten > 0);\n    ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n  }\n\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nfunction ReadableByteStreamControllerShiftPendingPullInto(\n  controller: ReadableByteStreamController\n): PullIntoDescriptor {\n  assert(controller._byobRequest === null);\n  const descriptor = controller._pendingPullIntos.shift()!;\n  return descriptor;\n}\n\nfunction ReadableByteStreamControllerShouldCallPull(controller: ReadableByteStreamController): boolean {\n  const stream = controller._controlledReadableByteStream;\n\n  if (stream._state !== 'readable') {\n    return false;\n  }\n\n  if (controller._closeRequested) {\n    return false;\n  }\n\n  if (!controller._started) {\n    return false;\n  }\n\n  if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n    return true;\n  }\n\n  if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n    return true;\n  }\n\n  const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);\n  assert(desiredSize !== null);\n  if (desiredSize! > 0) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction ReadableByteStreamControllerClearAlgorithms(controller: ReadableByteStreamController) {\n  controller._pullAlgorithm = undefined!;\n  controller._cancelAlgorithm = undefined!;\n}\n\n// A client of ReadableByteStreamController may use these functions directly to bypass state check.\n\nexport function ReadableByteStreamControllerClose(controller: ReadableByteStreamController) {\n  const stream = controller._controlledReadableByteStream;\n\n  if (controller._closeRequested || stream._state !== 'readable') {\n    return;\n  }\n\n  if (controller._queueTotalSize > 0) {\n    controller._closeRequested = true;\n\n    return;\n  }\n\n  if (controller._pendingPullIntos.length > 0) {\n    const firstPendingPullInto = controller._pendingPullIntos.peek();\n    if (firstPendingPullInto.bytesFilled > 0) {\n      const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n      ReadableByteStreamControllerError(controller, e);\n\n      throw e;\n    }\n  }\n\n  ReadableByteStreamControllerClearAlgorithms(controller);\n  ReadableStreamClose(stream);\n}\n\nexport function ReadableByteStreamControllerEnqueue(controller: ReadableByteStreamController, chunk: ArrayBufferView) {\n  const stream = controller._controlledReadableByteStream;\n\n  if (controller._closeRequested || stream._state !== 'readable') {\n    return;\n  }\n\n  const buffer = chunk.buffer;\n  const byteOffset = chunk.byteOffset;\n  const byteLength = chunk.byteLength;\n  if (IsDetachedBuffer(buffer)) {\n    throw new TypeError('chunk\\'s buffer is detached and so cannot be enqueued');\n  }\n  const transferredBuffer = TransferArrayBuffer(buffer);\n\n  if (controller._pendingPullIntos.length > 0) {\n    const firstPendingPullInto = controller._pendingPullIntos.peek();\n    if (IsDetachedBuffer(firstPendingPullInto.buffer)) {\n      throw new TypeError(\n        'The BYOB request\\'s buffer has been detached and so cannot be filled with an enqueued chunk'\n      );\n    }\n    firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);\n  }\n\n  ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n\n  if (ReadableStreamHasDefaultReader(stream)) {\n    if (ReadableStreamGetNumReadRequests(stream) === 0) {\n      assert(controller._pendingPullIntos.length === 0);\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    } else {\n      assert(controller._queue.length === 0);\n      if (controller._pendingPullIntos.length > 0) {\n        assert(controller._pendingPullIntos.peek().readerType === 'default');\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n      }\n      const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n      ReadableStreamFulfillReadRequest(stream, transferredView, false);\n    }\n  } else if (ReadableStreamHasBYOBReader(stream)) {\n    // TODO: Ideally in this branch detaching should happen only if the buffer is not consumed fully.\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n  } else {\n    assert(!IsReadableStreamLocked(stream));\n    ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n  }\n\n  ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\n\nexport function ReadableByteStreamControllerError(controller: ReadableByteStreamController, e: any) {\n  const stream = controller._controlledReadableByteStream;\n\n  if (stream._state !== 'readable') {\n    return;\n  }\n\n  ReadableByteStreamControllerClearPendingPullIntos(controller);\n\n  ResetQueue(controller);\n  ReadableByteStreamControllerClearAlgorithms(controller);\n  ReadableStreamError(stream, e);\n}\n\nexport function ReadableByteStreamControllerGetBYOBRequest(\n  controller: ReadableByteStreamController\n): ReadableStreamBYOBRequest | null {\n  if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {\n    const firstDescriptor = controller._pendingPullIntos.peek();\n    const view = new Uint8Array(firstDescriptor.buffer,\n                                firstDescriptor.byteOffset + firstDescriptor.bytesFilled,\n                                firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n\n    const byobRequest: ReadableStreamBYOBRequest = Object.create(ReadableStreamBYOBRequest.prototype);\n    SetUpReadableStreamBYOBRequest(byobRequest, controller, view);\n    controller._byobRequest = byobRequest;\n  }\n  return controller._byobRequest;\n}\n\nfunction ReadableByteStreamControllerGetDesiredSize(controller: ReadableByteStreamController): number | null {\n  const state = controller._controlledReadableByteStream._state;\n\n  if (state === 'errored') {\n    return null;\n  }\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return controller._strategyHWM - controller._queueTotalSize;\n}\n\nexport function ReadableByteStreamControllerRespond(controller: ReadableByteStreamController, bytesWritten: number) {\n  assert(controller._pendingPullIntos.length > 0);\n\n  const firstDescriptor = controller._pendingPullIntos.peek();\n  const state = controller._controlledReadableByteStream._state;\n\n  if (state === 'closed') {\n    if (bytesWritten !== 0) {\n      throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n    }\n  } else {\n    assert(state === 'readable');\n    if (bytesWritten === 0) {\n      throw new TypeError('bytesWritten must be greater than 0 when calling respond() on a readable stream');\n    }\n    if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {\n      throw new RangeError('bytesWritten out of range');\n    }\n  }\n\n  firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n\n  ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n}\n\nexport function ReadableByteStreamControllerRespondWithNewView(controller: ReadableByteStreamController,\n                                                               view: ArrayBufferView) {\n  assert(controller._pendingPullIntos.length > 0);\n  assert(!IsDetachedBuffer(view.buffer));\n\n  const firstDescriptor = controller._pendingPullIntos.peek();\n  const state = controller._controlledReadableByteStream._state;\n\n  if (state === 'closed') {\n    if (view.byteLength !== 0) {\n      throw new TypeError('The view\\'s length must be 0 when calling respondWithNewView() on a closed stream');\n    }\n  } else {\n    assert(state === 'readable');\n    if (view.byteLength === 0) {\n      throw new TypeError(\n        'The view\\'s length must be greater than 0 when calling respondWithNewView() on a readable stream'\n      );\n    }\n  }\n\n  if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n    throw new RangeError('The region specified by view does not match byobRequest');\n  }\n  if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {\n    throw new RangeError('The buffer of view has different capacity than byobRequest');\n  }\n  if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {\n    throw new RangeError('The region specified by view is larger than byobRequest');\n  }\n\n  const viewByteLength = view.byteLength;\n  firstDescriptor.buffer = TransferArrayBuffer(view.buffer);\n  ReadableByteStreamControllerRespondInternal(controller, viewByteLength);\n}\n\nexport function SetUpReadableByteStreamController(stream: ReadableByteStream,\n                                                  controller: ReadableByteStreamController,\n                                                  startAlgorithm: () => void | PromiseLike<void>,\n                                                  pullAlgorithm: () => Promise<void>,\n                                                  cancelAlgorithm: (reason: any) => Promise<void>,\n                                                  highWaterMark: number,\n                                                  autoAllocateChunkSize: number | undefined) {\n  assert(stream._readableStreamController === undefined);\n  if (autoAllocateChunkSize !== undefined) {\n    assert(NumberIsInteger(autoAllocateChunkSize));\n    assert(autoAllocateChunkSize > 0);\n  }\n\n  controller._controlledReadableByteStream = stream;\n\n  controller._pullAgain = false;\n  controller._pulling = false;\n\n  controller._byobRequest = null;\n\n  // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n  controller._queue = controller._queueTotalSize = undefined!;\n  ResetQueue(controller);\n\n  controller._closeRequested = false;\n  controller._started = false;\n\n  controller._strategyHWM = highWaterMark;\n\n  controller._pullAlgorithm = pullAlgorithm;\n  controller._cancelAlgorithm = cancelAlgorithm;\n\n  controller._autoAllocateChunkSize = autoAllocateChunkSize;\n\n  controller._pendingPullIntos = new SimpleQueue();\n\n  stream._readableStreamController = controller;\n\n  const startResult = startAlgorithm();\n  uponPromise(\n    promiseResolvedWith(startResult),\n    () => {\n      controller._started = true;\n\n      assert(!controller._pulling);\n      assert(!controller._pullAgain);\n\n      ReadableByteStreamControllerCallPullIfNeeded(controller);\n    },\n    r => {\n      ReadableByteStreamControllerError(controller, r);\n    }\n  );\n}\n\nexport function SetUpReadableByteStreamControllerFromUnderlyingSource(\n  stream: ReadableByteStream,\n  underlyingByteSource: ValidatedUnderlyingByteSource,\n  highWaterMark: number\n) {\n  const controller: ReadableByteStreamController = Object.create(ReadableByteStreamController.prototype);\n\n  let startAlgorithm: () => void | PromiseLike<void> = () => undefined;\n  let pullAlgorithm: () => Promise<void> = () => promiseResolvedWith(undefined);\n  let cancelAlgorithm: (reason: any) => Promise<void> = () => promiseResolvedWith(undefined);\n\n  if (underlyingByteSource.start !== undefined) {\n    startAlgorithm = () => underlyingByteSource.start!(controller);\n  }\n  if (underlyingByteSource.pull !== undefined) {\n    pullAlgorithm = () => underlyingByteSource.pull!(controller);\n  }\n  if (underlyingByteSource.cancel !== undefined) {\n    cancelAlgorithm = reason => underlyingByteSource.cancel!(reason);\n  }\n\n  const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n  if (autoAllocateChunkSize === 0) {\n    throw new TypeError('autoAllocateChunkSize must be greater than 0');\n  }\n\n  SetUpReadableByteStreamController(\n    stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize\n  );\n}\n\nfunction SetUpReadableStreamBYOBRequest(request: ReadableStreamBYOBRequest,\n                                        controller: ReadableByteStreamController,\n                                        view: ArrayBufferView) {\n  assert(IsReadableByteStreamController(controller));\n  assert(typeof view === 'object');\n  assert(ArrayBuffer.isView(view));\n  assert(!IsDetachedBuffer(view.buffer));\n  request._associatedReadableByteStreamController = controller;\n  request._view = view;\n}\n\n// Helper functions for the ReadableStreamBYOBRequest.\n\nfunction byobRequestBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);\n}\n\n// Helper functions for the ReadableByteStreamController.\n\nfunction byteStreamControllerBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);\n}\n","import assert from '../../stub/assert';\nimport { SimpleQueue } from '../simple-queue';\nimport {\n  ReadableStreamReaderGenericCancel,\n  ReadableStreamReaderGenericInitialize,\n  ReadableStreamReaderGenericRelease,\n  readerLockException\n} from './generic-reader';\nimport { IsReadableStreamLocked, ReadableByteStream, ReadableStream } from '../readable-stream';\nimport {\n  IsReadableByteStreamController,\n  ReadableByteStreamController,\n  ReadableByteStreamControllerPullInto\n} from './byte-stream-controller';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport { newPromise, promiseRejectedWith } from '../helpers/webidl';\nimport { assertRequiredArgument } from '../validators/basic';\nimport { assertReadableStream } from '../validators/readable-stream';\nimport { IsDetachedBuffer } from '../abstract-ops/ecmascript';\n\n/**\n * A result returned by {@link ReadableStreamBYOBReader.read}.\n *\n * @public\n */\nexport type ReadableStreamBYOBReadResult<T extends ArrayBufferView> = {\n  done: false;\n  value: T;\n} | {\n  done: true;\n  value: T | undefined;\n};\n\n// Abstract operations for the ReadableStream.\n\nexport function AcquireReadableStreamBYOBReader(stream: ReadableByteStream): ReadableStreamBYOBReader {\n  return new ReadableStreamBYOBReader(stream);\n}\n\n// ReadableStream API exposed for controllers.\n\nexport function ReadableStreamAddReadIntoRequest<T extends ArrayBufferView>(stream: ReadableByteStream,\n                                                                            readIntoRequest: ReadIntoRequest<T>): void {\n  assert(IsReadableStreamBYOBReader(stream._reader));\n  assert(stream._state === 'readable' || stream._state === 'closed');\n\n  (stream._reader! as ReadableStreamBYOBReader)._readIntoRequests.push(readIntoRequest);\n}\n\nexport function ReadableStreamFulfillReadIntoRequest(stream: ReadableByteStream,\n                                                     chunk: ArrayBufferView,\n                                                     done: boolean) {\n  const reader = stream._reader as ReadableStreamBYOBReader;\n\n  assert(reader._readIntoRequests.length > 0);\n\n  const readIntoRequest = reader._readIntoRequests.shift()!;\n  if (done) {\n    readIntoRequest._closeSteps(chunk);\n  } else {\n    readIntoRequest._chunkSteps(chunk);\n  }\n}\n\nexport function ReadableStreamGetNumReadIntoRequests(stream: ReadableByteStream): number {\n  return (stream._reader as ReadableStreamBYOBReader)._readIntoRequests.length;\n}\n\nexport function ReadableStreamHasBYOBReader(stream: ReadableByteStream): boolean {\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return false;\n  }\n\n  if (!IsReadableStreamBYOBReader(reader)) {\n    return false;\n  }\n\n  return true;\n}\n\n// Readers\n\nexport interface ReadIntoRequest<T extends ArrayBufferView> {\n  _chunkSteps(chunk: T): void;\n\n  _closeSteps(chunk: T | undefined): void;\n\n  _errorSteps(e: any): void;\n}\n\n/**\n * A BYOB reader vended by a {@link ReadableStream}.\n *\n * @public\n */\nexport class ReadableStreamBYOBReader {\n  /** @internal */\n  _ownerReadableStream!: ReadableByteStream;\n  /** @internal */\n  _closedPromise!: Promise<undefined>;\n  /** @internal */\n  _closedPromise_resolve?: (value?: undefined) => void;\n  /** @internal */\n  _closedPromise_reject?: (reason: any) => void;\n  /** @internal */\n  _readIntoRequests: SimpleQueue<ReadIntoRequest<any>>;\n\n  constructor(stream: ReadableByteStream) {\n    assertRequiredArgument(stream, 1, 'ReadableStreamBYOBReader');\n    assertReadableStream(stream, 'First parameter');\n\n    if (IsReadableStreamLocked(stream)) {\n      throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n    }\n\n    if (!IsReadableByteStreamController(stream._readableStreamController)) {\n      throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' +\n        'source');\n    }\n\n    ReadableStreamReaderGenericInitialize(this, stream);\n\n    this._readIntoRequests = new SimpleQueue();\n  }\n\n  /**\n   * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n   * the reader's lock is released before the stream finishes closing.\n   */\n  get closed(): Promise<undefined> {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return promiseRejectedWith(byobReaderBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  /**\n   * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n   */\n  cancel(reason: any = undefined): Promise<void> {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return promiseRejectedWith(byobReaderBrandCheckException('cancel'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('cancel'));\n    }\n\n    return ReadableStreamReaderGenericCancel(this, reason);\n  }\n\n  /**\n   * Attempts to reads bytes into view, and returns a promise resolved with the result.\n   *\n   * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n   */\n  read<T extends ArrayBufferView>(view: T): Promise<ReadableStreamBYOBReadResult<T>> {\n    if (!IsReadableStreamBYOBReader(this)) {\n      return promiseRejectedWith(byobReaderBrandCheckException('read'));\n    }\n\n    if (!ArrayBuffer.isView(view)) {\n      return promiseRejectedWith(new TypeError('view must be an array buffer view'));\n    }\n    if (view.byteLength === 0) {\n      return promiseRejectedWith(new TypeError('view must have non-zero byteLength'));\n    }\n    if (view.buffer.byteLength === 0) {\n      return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`));\n    }\n    if (IsDetachedBuffer(view.buffer)) {\n      return promiseRejectedWith(new TypeError('view\\'s buffer has been detached'));\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return promiseRejectedWith(readerLockException('read from'));\n    }\n\n    let resolvePromise!: (result: ReadableStreamBYOBReadResult<T>) => void;\n    let rejectPromise!: (reason: any) => void;\n    const promise = newPromise<ReadableStreamBYOBReadResult<T>>((resolve, reject) => {\n      resolvePromise = resolve;\n      rejectPromise = reject;\n    });\n    const readIntoRequest: ReadIntoRequest<T> = {\n      _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n      _closeSteps: chunk => resolvePromise({ value: chunk, done: true }),\n      _errorSteps: e => rejectPromise(e)\n    };\n    ReadableStreamBYOBReaderRead(this, view, readIntoRequest);\n    return promise;\n  }\n\n  /**\n   * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n   * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n   * from now on; otherwise, the reader will appear closed.\n   *\n   * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n   * the reader's {@link ReadableStreamBYOBReader.read | read()} method has not yet been settled. Attempting to\n   * do so will throw a `TypeError` and leave the reader locked to the stream.\n   */\n  releaseLock(): void {\n    if (!IsReadableStreamBYOBReader(this)) {\n      throw byobReaderBrandCheckException('releaseLock');\n    }\n\n    if (this._ownerReadableStream === undefined) {\n      return;\n    }\n\n    if (this._readIntoRequests.length > 0) {\n      throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n    }\n\n    ReadableStreamReaderGenericRelease(this);\n  }\n}\n\nObject.defineProperties(ReadableStreamBYOBReader.prototype, {\n  cancel: { enumerable: true },\n  read: { enumerable: true },\n  releaseLock: { enumerable: true },\n  closed: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStreamBYOBReader.prototype, Symbol.toStringTag, {\n    value: 'ReadableStreamBYOBReader',\n    configurable: true\n  });\n}\n\n// Abstract operations for the readers.\n\nexport function IsReadableStreamBYOBReader(x: any): x is ReadableStreamBYOBReader {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n    return false;\n  }\n\n  return x instanceof ReadableStreamBYOBReader;\n}\n\nexport function ReadableStreamBYOBReaderRead<T extends ArrayBufferView>(\n  reader: ReadableStreamBYOBReader,\n  view: T,\n  readIntoRequest: ReadIntoRequest<T>\n): void {\n  const stream = reader._ownerReadableStream;\n\n  assert(stream !== undefined);\n\n  stream._disturbed = true;\n\n  if (stream._state === 'errored') {\n    readIntoRequest._errorSteps(stream._storedError);\n  } else {\n    ReadableByteStreamControllerPullInto(\n      stream._readableStreamController as ReadableByteStreamController,\n      view,\n      readIntoRequest\n    );\n  }\n}\n\n// Helper functions for the ReadableStreamBYOBReader.\n\nfunction byobReaderBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);\n}\n","import { QueuingStrategy, QueuingStrategySizeCallback } from '../queuing-strategy';\nimport NumberIsNaN from '../../stub/number-isnan';\n\nexport function ExtractHighWaterMark(strategy: QueuingStrategy, defaultHWM: number): number {\n  const { highWaterMark } = strategy;\n\n  if (highWaterMark === undefined) {\n    return defaultHWM;\n  }\n\n  if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {\n    throw new RangeError('Invalid highWaterMark');\n  }\n\n  return highWaterMark;\n}\n\nexport function ExtractSizeAlgorithm<T>(strategy: QueuingStrategy<T>): QueuingStrategySizeCallback<T> {\n  const { size } = strategy;\n\n  if (!size) {\n    return () => 1;\n  }\n\n  return size;\n}\n","import { QueuingStrategy, QueuingStrategySizeCallback } from '../queuing-strategy';\nimport { assertDictionary, assertFunction, convertUnrestrictedDouble } from './basic';\n\nexport function convertQueuingStrategy<T>(init: QueuingStrategy<T> | null | undefined,\n                                          context: string): QueuingStrategy<T> {\n  assertDictionary(init, context);\n  const highWaterMark = init?.highWaterMark;\n  const size = init?.size;\n  return {\n    highWaterMark: highWaterMark === undefined ? undefined : convertUnrestrictedDouble(highWaterMark),\n    size: size === undefined ? undefined : convertQueuingStrategySize(size, `${context} has member 'size' that`)\n  };\n}\n\nfunction convertQueuingStrategySize<T>(fn: QueuingStrategySizeCallback<T>,\n                                       context: string): QueuingStrategySizeCallback<T> {\n  assertFunction(fn, context);\n  return chunk => convertUnrestrictedDouble(fn(chunk));\n}\n","import { assertDictionary, assertFunction } from './basic';\nimport { promiseCall, reflectCall } from '../helpers/webidl';\nimport {\n  UnderlyingSink,\n  UnderlyingSinkAbortCallback,\n  UnderlyingSinkCloseCallback,\n  UnderlyingSinkStartCallback,\n  UnderlyingSinkWriteCallback,\n  ValidatedUnderlyingSink\n} from '../writable-stream/underlying-sink';\nimport { WritableStreamDefaultController } from '../writable-stream';\n\nexport function convertUnderlyingSink<W>(original: UnderlyingSink<W> | null,\n                                         context: string): ValidatedUnderlyingSink<W> {\n  assertDictionary(original, context);\n  const abort = original?.abort;\n  const close = original?.close;\n  const start = original?.start;\n  const type = original?.type;\n  const write = original?.write;\n  return {\n    abort: abort === undefined ?\n      undefined :\n      convertUnderlyingSinkAbortCallback(abort, original!, `${context} has member 'abort' that`),\n    close: close === undefined ?\n      undefined :\n      convertUnderlyingSinkCloseCallback(close, original!, `${context} has member 'close' that`),\n    start: start === undefined ?\n      undefined :\n      convertUnderlyingSinkStartCallback(start, original!, `${context} has member 'start' that`),\n    write: write === undefined ?\n      undefined :\n      convertUnderlyingSinkWriteCallback(write, original!, `${context} has member 'write' that`),\n    type\n  };\n}\n\nfunction convertUnderlyingSinkAbortCallback(\n  fn: UnderlyingSinkAbortCallback,\n  original: UnderlyingSink,\n  context: string\n): (reason: any) => Promise<void> {\n  assertFunction(fn, context);\n  return (reason: any) => promiseCall(fn, original, [reason]);\n}\n\nfunction convertUnderlyingSinkCloseCallback(\n  fn: UnderlyingSinkCloseCallback,\n  original: UnderlyingSink,\n  context: string\n): () => Promise<void> {\n  assertFunction(fn, context);\n  return () => promiseCall(fn, original, []);\n}\n\nfunction convertUnderlyingSinkStartCallback(\n  fn: UnderlyingSinkStartCallback,\n  original: UnderlyingSink,\n  context: string\n): UnderlyingSinkStartCallback {\n  assertFunction(fn, context);\n  return (controller: WritableStreamDefaultController) => reflectCall(fn, original, [controller]);\n}\n\nfunction convertUnderlyingSinkWriteCallback<W>(\n  fn: UnderlyingSinkWriteCallback<W>,\n  original: UnderlyingSink<W>,\n  context: string\n): (chunk: W, controller: WritableStreamDefaultController) => Promise<void> {\n  assertFunction(fn, context);\n  return (chunk: W, controller: WritableStreamDefaultController) => promiseCall(fn, original, [chunk, controller]);\n}\n","import { IsWritableStream, WritableStream } from '../writable-stream';\n\nexport function assertWritableStream(x: unknown, context: string): asserts x is WritableStream {\n  if (!IsWritableStream(x)) {\n    throw new TypeError(`${context} is not a WritableStream.`);\n  }\n}\n","/**\n * A signal object that allows you to communicate with a request and abort it if required\n * via its associated `AbortController` object.\n *\n * @remarks\n *   This interface is compatible with the `AbortSignal` interface defined in TypeScript's DOM types.\n *   It is redefined here, so it can be polyfilled without a DOM, for example with\n *   {@link https://www.npmjs.com/package/abortcontroller-polyfill | abortcontroller-polyfill} in a Node environment.\n *\n * @public\n */\nexport interface AbortSignal {\n  /**\n   * Whether the request is aborted.\n   */\n  readonly aborted: boolean;\n\n  /**\n   * Add an event listener to be triggered when this signal becomes aborted.\n   */\n  addEventListener(type: 'abort', listener: () => void): void;\n\n  /**\n   * Remove an event listener that was previously added with {@link AbortSignal.addEventListener}.\n   */\n  removeEventListener(type: 'abort', listener: () => void): void;\n}\n\nexport function isAbortSignal(value: unknown): value is AbortSignal {\n  if (typeof value !== 'object' || value === null) {\n    return false;\n  }\n  try {\n    return typeof (value as AbortSignal).aborted === 'boolean';\n  } catch {\n    // AbortSignal.prototype.aborted throws if its brand check fails\n    return false;\n  }\n}\n\n/**\n * A controller object that allows you to abort an `AbortSignal` when desired.\n *\n * @remarks\n *   This interface is compatible with the `AbortController` interface defined in TypeScript's DOM types.\n *   It is redefined here, so it can be polyfilled without a DOM, for example with\n *   {@link https://www.npmjs.com/package/abortcontroller-polyfill | abortcontroller-polyfill} in a Node environment.\n *\n * @internal\n */\nexport interface AbortController {\n  readonly signal: AbortSignal;\n\n  abort(): void;\n}\n\ninterface AbortControllerConstructor {\n  new(): AbortController;\n}\n\nconst supportsAbortController = typeof (AbortController as any) === 'function';\n\n/**\n * Construct a new AbortController, if supported by the platform.\n *\n * @internal\n */\nexport function createAbortController(): AbortController | undefined {\n  if (supportsAbortController) {\n    return new (AbortController as AbortControllerConstructor)();\n  }\n  return undefined;\n}\n","import assert from '../stub/assert';\nimport {\n  newPromise,\n  promiseRejectedWith,\n  promiseResolvedWith,\n  setPromiseIsHandledToTrue,\n  uponPromise\n} from './helpers/webidl';\nimport {\n  DequeueValue,\n  EnqueueValueWithSize,\n  PeekQueueValue,\n  QueuePair,\n  ResetQueue\n} from './abstract-ops/queue-with-sizes';\nimport { QueuingStrategy, QueuingStrategySizeCallback } from './queuing-strategy';\nimport { SimpleQueue } from './simple-queue';\nimport { typeIsObject } from './helpers/miscellaneous';\nimport { AbortSteps, ErrorSteps } from './abstract-ops/internal-methods';\nimport { IsNonNegativeNumber } from './abstract-ops/miscellaneous';\nimport { ExtractHighWaterMark, ExtractSizeAlgorithm } from './abstract-ops/queuing-strategy';\nimport { convertQueuingStrategy } from './validators/queuing-strategy';\nimport {\n  UnderlyingSink,\n  UnderlyingSinkAbortCallback,\n  UnderlyingSinkCloseCallback,\n  UnderlyingSinkStartCallback,\n  UnderlyingSinkWriteCallback,\n  ValidatedUnderlyingSink\n} from './writable-stream/underlying-sink';\nimport { assertObject, assertRequiredArgument } from './validators/basic';\nimport { convertUnderlyingSink } from './validators/underlying-sink';\nimport { assertWritableStream } from './validators/writable-stream';\nimport { AbortController, AbortSignal, createAbortController } from './abort-signal';\n\ntype WritableStreamState = 'writable' | 'closed' | 'erroring' | 'errored';\n\ninterface WriteOrCloseRequest {\n  _resolve: (value?: undefined) => void;\n  _reject: (reason: any) => void;\n}\n\ntype WriteRequest = WriteOrCloseRequest;\ntype CloseRequest = WriteOrCloseRequest;\n\ninterface PendingAbortRequest {\n  _promise: Promise<undefined>;\n  _resolve: (value?: undefined) => void;\n  _reject: (reason: any) => void;\n  _reason: any;\n  _wasAlreadyErroring: boolean;\n}\n\n/**\n * A writable stream represents a destination for data, into which you can write.\n *\n * @public\n */\nclass WritableStream<W = any> {\n  /** @internal */\n  _state!: WritableStreamState;\n  /** @internal */\n  _storedError: any;\n  /** @internal */\n  _writer: WritableStreamDefaultWriter<W> | undefined;\n  /** @internal */\n  _writableStreamController!: WritableStreamDefaultController<W>;\n  /** @internal */\n  _writeRequests!: SimpleQueue<WriteRequest>;\n  /** @internal */\n  _inFlightWriteRequest: WriteRequest | undefined;\n  /** @internal */\n  _closeRequest: CloseRequest | undefined;\n  /** @internal */\n  _inFlightCloseRequest: CloseRequest | undefined;\n  /** @internal */\n  _pendingAbortRequest: PendingAbortRequest | undefined;\n  /** @internal */\n  _backpressure!: boolean;\n\n  constructor(underlyingSink?: UnderlyingSink<W>, strategy?: QueuingStrategy<W>);\n  constructor(rawUnderlyingSink: UnderlyingSink<W> | null | undefined = {},\n              rawStrategy: QueuingStrategy<W> | null | undefined = {}) {\n    if (rawUnderlyingSink === undefined) {\n      rawUnderlyingSink = null;\n    } else {\n      assertObject(rawUnderlyingSink, 'First parameter');\n    }\n\n    const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n    const underlyingSink = convertUnderlyingSink(rawUnderlyingSink, 'First parameter');\n\n    InitializeWritableStream(this);\n\n    const type = underlyingSink.type;\n    if (type !== undefined) {\n      throw new RangeError('Invalid type is specified');\n    }\n\n    const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n    const highWaterMark = ExtractHighWaterMark(strategy, 1);\n\n    SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);\n  }\n\n  /**\n   * Returns whether or not the writable stream is locked to a writer.\n   */\n  get locked(): boolean {\n    if (!IsWritableStream(this)) {\n      throw streamBrandCheckException('locked');\n    }\n\n    return IsWritableStreamLocked(this);\n  }\n\n  /**\n   * Aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be\n   * immediately moved to an errored state, with any queued-up writes discarded. This will also execute any abort\n   * mechanism of the underlying sink.\n   *\n   * The returned promise will fulfill if the stream shuts down successfully, or reject if the underlying sink signaled\n   * that there was an error doing so. Additionally, it will reject with a `TypeError` (without attempting to cancel\n   * the stream) if the stream is currently locked.\n   */\n  abort(reason: any = undefined): Promise<void> {\n    if (!IsWritableStream(this)) {\n      return promiseRejectedWith(streamBrandCheckException('abort'));\n    }\n\n    if (IsWritableStreamLocked(this)) {\n      return promiseRejectedWith(new TypeError('Cannot abort a stream that already has a writer'));\n    }\n\n    return WritableStreamAbort(this, reason);\n  }\n\n  /**\n   * Closes the stream. The underlying sink will finish processing any previously-written chunks, before invoking its\n   * close behavior. During this time any further attempts to write will fail (without erroring the stream).\n   *\n   * The method returns a promise that will fulfill if all remaining chunks are successfully written and the stream\n   * successfully closes, or rejects if an error is encountered during this process. Additionally, it will reject with\n   * a `TypeError` (without attempting to cancel the stream) if the stream is currently locked.\n   */\n  close() {\n    if (!IsWritableStream(this)) {\n      return promiseRejectedWith(streamBrandCheckException('close'));\n    }\n\n    if (IsWritableStreamLocked(this)) {\n      return promiseRejectedWith(new TypeError('Cannot close a stream that already has a writer'));\n    }\n\n    if (WritableStreamCloseQueuedOrInFlight(this)) {\n      return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n    }\n\n    return WritableStreamClose(this);\n  }\n\n  /**\n   * Creates a {@link WritableStreamDefaultWriter | writer} and locks the stream to the new writer. While the stream\n   * is locked, no other writer can be acquired until this one is released.\n   *\n   * This functionality is especially useful for creating abstractions that desire the ability to write to a stream\n   * without interruption or interleaving. By getting a writer for the stream, you can ensure nobody else can write at\n   * the same time, which would cause the resulting written data to be unpredictable and probably useless.\n   */\n  getWriter(): WritableStreamDefaultWriter<W> {\n    if (!IsWritableStream(this)) {\n      throw streamBrandCheckException('getWriter');\n    }\n\n    return AcquireWritableStreamDefaultWriter(this);\n  }\n}\n\nObject.defineProperties(WritableStream.prototype, {\n  abort: { enumerable: true },\n  close: { enumerable: true },\n  getWriter: { enumerable: true },\n  locked: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(WritableStream.prototype, Symbol.toStringTag, {\n    value: 'WritableStream',\n    configurable: true\n  });\n}\n\nexport {\n  AcquireWritableStreamDefaultWriter,\n  CreateWritableStream,\n  IsWritableStream,\n  IsWritableStreamLocked,\n  WritableStream,\n  WritableStreamAbort,\n  WritableStreamDefaultControllerErrorIfNeeded,\n  WritableStreamDefaultWriterCloseWithErrorPropagation,\n  WritableStreamDefaultWriterRelease,\n  WritableStreamDefaultWriterWrite,\n  WritableStreamCloseQueuedOrInFlight,\n  UnderlyingSink,\n  UnderlyingSinkStartCallback,\n  UnderlyingSinkWriteCallback,\n  UnderlyingSinkCloseCallback,\n  UnderlyingSinkAbortCallback\n};\n\n// Abstract operations for the WritableStream.\n\nfunction AcquireWritableStreamDefaultWriter<W>(stream: WritableStream<W>): WritableStreamDefaultWriter<W> {\n  return new WritableStreamDefaultWriter(stream);\n}\n\n// Throws if and only if startAlgorithm throws.\nfunction CreateWritableStream<W>(startAlgorithm: () => void | PromiseLike<void>,\n                                 writeAlgorithm: (chunk: W) => Promise<void>,\n                                 closeAlgorithm: () => Promise<void>,\n                                 abortAlgorithm: (reason: any) => Promise<void>,\n                                 highWaterMark = 1,\n                                 sizeAlgorithm: QueuingStrategySizeCallback<W> = () => 1) {\n  assert(IsNonNegativeNumber(highWaterMark));\n\n  const stream: WritableStream<W> = Object.create(WritableStream.prototype);\n  InitializeWritableStream(stream);\n\n  const controller: WritableStreamDefaultController<W> = Object.create(WritableStreamDefaultController.prototype);\n\n  SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm,\n                                       abortAlgorithm, highWaterMark, sizeAlgorithm);\n  return stream;\n}\n\nfunction InitializeWritableStream<W>(stream: WritableStream<W>) {\n  stream._state = 'writable';\n\n  // The error that will be reported by new method calls once the state becomes errored. Only set when [[state]] is\n  // 'erroring' or 'errored'. May be set to an undefined value.\n  stream._storedError = undefined;\n\n  stream._writer = undefined;\n\n  // Initialize to undefined first because the constructor of the controller checks this\n  // variable to validate the caller.\n  stream._writableStreamController = undefined!;\n\n  // This queue is placed here instead of the writer class in order to allow for passing a writer to the next data\n  // producer without waiting for the queued writes to finish.\n  stream._writeRequests = new SimpleQueue();\n\n  // Write requests are removed from _writeRequests when write() is called on the underlying sink. This prevents\n  // them from being erroneously rejected on error. If a write() call is in-flight, the request is stored here.\n  stream._inFlightWriteRequest = undefined;\n\n  // The promise that was returned from writer.close(). Stored here because it may be fulfilled after the writer\n  // has been detached.\n  stream._closeRequest = undefined;\n\n  // Close request is removed from _closeRequest when close() is called on the underlying sink. This prevents it\n  // from being erroneously rejected on error. If a close() call is in-flight, the request is stored here.\n  stream._inFlightCloseRequest = undefined;\n\n  // The promise that was returned from writer.abort(). This may also be fulfilled after the writer has detached.\n  stream._pendingAbortRequest = undefined;\n\n  // The backpressure signal set by the controller.\n  stream._backpressure = false;\n}\n\nfunction IsWritableStream(x: unknown): x is WritableStream {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n    return false;\n  }\n\n  return x instanceof WritableStream;\n}\n\nfunction IsWritableStreamLocked(stream: WritableStream): boolean {\n  assert(IsWritableStream(stream));\n\n  if (stream._writer === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction WritableStreamAbort(stream: WritableStream, reason: any): Promise<undefined> {\n  if (stream._state === 'closed' || stream._state === 'errored') {\n    return promiseResolvedWith(undefined);\n  }\n  stream._writableStreamController._abortReason = reason;\n  stream._writableStreamController._abortController?.abort();\n\n  // TypeScript narrows the type of `stream._state` down to 'writable' | 'erroring',\n  // but it doesn't know that signaling abort runs author code that might have changed the state.\n  // Widen the type again by casting to WritableStreamState.\n  const state = stream._state as WritableStreamState;\n\n  if (state === 'closed' || state === 'errored') {\n    return promiseResolvedWith(undefined);\n  }\n  if (stream._pendingAbortRequest !== undefined) {\n    return stream._pendingAbortRequest._promise;\n  }\n\n  assert(state === 'writable' || state === 'erroring');\n\n  let wasAlreadyErroring = false;\n  if (state === 'erroring') {\n    wasAlreadyErroring = true;\n    // reason will not be used, so don't keep a reference to it.\n    reason = undefined;\n  }\n\n  const promise = newPromise<undefined>((resolve, reject) => {\n    stream._pendingAbortRequest = {\n      _promise: undefined!,\n      _resolve: resolve,\n      _reject: reject,\n      _reason: reason,\n      _wasAlreadyErroring: wasAlreadyErroring\n    };\n  });\n  stream._pendingAbortRequest!._promise = promise;\n\n  if (!wasAlreadyErroring) {\n    WritableStreamStartErroring(stream, reason);\n  }\n\n  return promise;\n}\n\nfunction WritableStreamClose(stream: WritableStream<any>): Promise<undefined> {\n  const state = stream._state;\n  if (state === 'closed' || state === 'errored') {\n    return promiseRejectedWith(new TypeError(\n      `The stream (in ${state} state) is not in the writable state and cannot be closed`));\n  }\n\n  assert(state === 'writable' || state === 'erroring');\n  assert(!WritableStreamCloseQueuedOrInFlight(stream));\n\n  const promise = newPromise<undefined>((resolve, reject) => {\n    const closeRequest: CloseRequest = {\n      _resolve: resolve,\n      _reject: reject\n    };\n\n    stream._closeRequest = closeRequest;\n  });\n\n  const writer = stream._writer;\n  if (writer !== undefined && stream._backpressure && state === 'writable') {\n    defaultWriterReadyPromiseResolve(writer);\n  }\n\n  WritableStreamDefaultControllerClose(stream._writableStreamController);\n\n  return promise;\n}\n\n// WritableStream API exposed for controllers.\n\nfunction WritableStreamAddWriteRequest(stream: WritableStream): Promise<undefined> {\n  assert(IsWritableStreamLocked(stream));\n  assert(stream._state === 'writable');\n\n  const promise = newPromise<undefined>((resolve, reject) => {\n    const writeRequest: WriteRequest = {\n      _resolve: resolve,\n      _reject: reject\n    };\n\n    stream._writeRequests.push(writeRequest);\n  });\n\n  return promise;\n}\n\nfunction WritableStreamDealWithRejection(stream: WritableStream, error: any) {\n  const state = stream._state;\n\n  if (state === 'writable') {\n    WritableStreamStartErroring(stream, error);\n    return;\n  }\n\n  assert(state === 'erroring');\n  WritableStreamFinishErroring(stream);\n}\n\nfunction WritableStreamStartErroring(stream: WritableStream, reason: any) {\n  assert(stream._storedError === undefined);\n  assert(stream._state === 'writable');\n\n  const controller = stream._writableStreamController;\n  assert(controller !== undefined);\n\n  stream._state = 'erroring';\n  stream._storedError = reason;\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n  }\n\n  if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {\n    WritableStreamFinishErroring(stream);\n  }\n}\n\nfunction WritableStreamFinishErroring(stream: WritableStream) {\n  assert(stream._state === 'erroring');\n  assert(!WritableStreamHasOperationMarkedInFlight(stream));\n  stream._state = 'errored';\n  stream._writableStreamController[ErrorSteps]();\n\n  const storedError = stream._storedError;\n  stream._writeRequests.forEach(writeRequest => {\n    writeRequest._reject(storedError);\n  });\n  stream._writeRequests = new SimpleQueue();\n\n  if (stream._pendingAbortRequest === undefined) {\n    WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    return;\n  }\n\n  const abortRequest = stream._pendingAbortRequest;\n  stream._pendingAbortRequest = undefined;\n\n  if (abortRequest._wasAlreadyErroring) {\n    abortRequest._reject(storedError);\n    WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    return;\n  }\n\n  const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);\n  uponPromise(\n    promise,\n    () => {\n      abortRequest._resolve();\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    },\n    (reason: any) => {\n      abortRequest._reject(reason);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    });\n}\n\nfunction WritableStreamFinishInFlightWrite(stream: WritableStream) {\n  assert(stream._inFlightWriteRequest !== undefined);\n  stream._inFlightWriteRequest!._resolve(undefined);\n  stream._inFlightWriteRequest = undefined;\n}\n\nfunction WritableStreamFinishInFlightWriteWithError(stream: WritableStream, error: any) {\n  assert(stream._inFlightWriteRequest !== undefined);\n  stream._inFlightWriteRequest!._reject(error);\n  stream._inFlightWriteRequest = undefined;\n\n  assert(stream._state === 'writable' || stream._state === 'erroring');\n\n  WritableStreamDealWithRejection(stream, error);\n}\n\nfunction WritableStreamFinishInFlightClose(stream: WritableStream) {\n  assert(stream._inFlightCloseRequest !== undefined);\n  stream._inFlightCloseRequest!._resolve(undefined);\n  stream._inFlightCloseRequest = undefined;\n\n  const state = stream._state;\n\n  assert(state === 'writable' || state === 'erroring');\n\n  if (state === 'erroring') {\n    // The error was too late to do anything, so it is ignored.\n    stream._storedError = undefined;\n    if (stream._pendingAbortRequest !== undefined) {\n      stream._pendingAbortRequest._resolve();\n      stream._pendingAbortRequest = undefined;\n    }\n  }\n\n  stream._state = 'closed';\n\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    defaultWriterClosedPromiseResolve(writer);\n  }\n\n  assert(stream._pendingAbortRequest === undefined);\n  assert(stream._storedError === undefined);\n}\n\nfunction WritableStreamFinishInFlightCloseWithError(stream: WritableStream, error: any) {\n  assert(stream._inFlightCloseRequest !== undefined);\n  stream._inFlightCloseRequest!._reject(error);\n  stream._inFlightCloseRequest = undefined;\n\n  assert(stream._state === 'writable' || stream._state === 'erroring');\n\n  // Never execute sink abort() after sink close().\n  if (stream._pendingAbortRequest !== undefined) {\n    stream._pendingAbortRequest._reject(error);\n    stream._pendingAbortRequest = undefined;\n  }\n  WritableStreamDealWithRejection(stream, error);\n}\n\n// TODO(ricea): Fix alphabetical order.\nfunction WritableStreamCloseQueuedOrInFlight(stream: WritableStream): boolean {\n  if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction WritableStreamHasOperationMarkedInFlight(stream: WritableStream): boolean {\n  if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction WritableStreamMarkCloseRequestInFlight(stream: WritableStream) {\n  assert(stream._inFlightCloseRequest === undefined);\n  assert(stream._closeRequest !== undefined);\n  stream._inFlightCloseRequest = stream._closeRequest;\n  stream._closeRequest = undefined;\n}\n\nfunction WritableStreamMarkFirstWriteRequestInFlight(stream: WritableStream) {\n  assert(stream._inFlightWriteRequest === undefined);\n  assert(stream._writeRequests.length !== 0);\n  stream._inFlightWriteRequest = stream._writeRequests.shift();\n}\n\nfunction WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream: WritableStream) {\n  assert(stream._state === 'errored');\n  if (stream._closeRequest !== undefined) {\n    assert(stream._inFlightCloseRequest === undefined);\n\n    stream._closeRequest._reject(stream._storedError);\n    stream._closeRequest = undefined;\n  }\n  const writer = stream._writer;\n  if (writer !== undefined) {\n    defaultWriterClosedPromiseReject(writer, stream._storedError);\n  }\n}\n\nfunction WritableStreamUpdateBackpressure(stream: WritableStream, backpressure: boolean) {\n  assert(stream._state === 'writable');\n  assert(!WritableStreamCloseQueuedOrInFlight(stream));\n\n  const writer = stream._writer;\n  if (writer !== undefined && backpressure !== stream._backpressure) {\n    if (backpressure) {\n      defaultWriterReadyPromiseReset(writer);\n    } else {\n      assert(!backpressure);\n\n      defaultWriterReadyPromiseResolve(writer);\n    }\n  }\n\n  stream._backpressure = backpressure;\n}\n\n/**\n * A default writer vended by a {@link WritableStream}.\n *\n * @public\n */\nexport class WritableStreamDefaultWriter<W = any> {\n  /** @internal */\n  _ownerWritableStream: WritableStream<W>;\n  /** @internal */\n  _closedPromise!: Promise<undefined>;\n  /** @internal */\n  _closedPromise_resolve?: (value?: undefined) => void;\n  /** @internal */\n  _closedPromise_reject?: (reason: any) => void;\n  /** @internal */\n  _closedPromiseState!: 'pending' | 'resolved' | 'rejected';\n  /** @internal */\n  _readyPromise!: Promise<undefined>;\n  /** @internal */\n  _readyPromise_resolve?: (value?: undefined) => void;\n  /** @internal */\n  _readyPromise_reject?: (reason: any) => void;\n  /** @internal */\n  _readyPromiseState!: 'pending' | 'fulfilled' | 'rejected';\n\n  constructor(stream: WritableStream<W>) {\n    assertRequiredArgument(stream, 1, 'WritableStreamDefaultWriter');\n    assertWritableStream(stream, 'First parameter');\n\n    if (IsWritableStreamLocked(stream)) {\n      throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n    }\n\n    this._ownerWritableStream = stream;\n    stream._writer = this;\n\n    const state = stream._state;\n\n    if (state === 'writable') {\n      if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {\n        defaultWriterReadyPromiseInitialize(this);\n      } else {\n        defaultWriterReadyPromiseInitializeAsResolved(this);\n      }\n\n      defaultWriterClosedPromiseInitialize(this);\n    } else if (state === 'erroring') {\n      defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n      defaultWriterClosedPromiseInitialize(this);\n    } else if (state === 'closed') {\n      defaultWriterReadyPromiseInitializeAsResolved(this);\n      defaultWriterClosedPromiseInitializeAsResolved(this);\n    } else {\n      assert(state === 'errored');\n\n      const storedError = stream._storedError;\n      defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n      defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n    }\n  }\n\n  /**\n   * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n   * the writer’s lock is released before the stream finishes closing.\n   */\n  get closed(): Promise<undefined> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('closed'));\n    }\n\n    return this._closedPromise;\n  }\n\n  /**\n   * Returns the desired size to fill the stream’s internal queue. It can be negative, if the queue is over-full.\n   * A producer can use this information to determine the right amount of data to write.\n   *\n   * It will be `null` if the stream cannot be successfully written to (due to either being errored, or having an abort\n   * queued up). It will return zero if the stream is closed. And the getter will throw an exception if invoked when\n   * the writer’s lock is released.\n   */\n  get desiredSize(): number | null {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      throw defaultWriterBrandCheckException('desiredSize');\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      throw defaultWriterLockException('desiredSize');\n    }\n\n    return WritableStreamDefaultWriterGetDesiredSize(this);\n  }\n\n  /**\n   * Returns a promise that will be fulfilled when the desired size to fill the stream’s internal queue transitions\n   * from non-positive to positive, signaling that it is no longer applying backpressure. Once the desired size dips\n   * back to zero or below, the getter will return a new promise that stays pending until the next transition.\n   *\n   * If the stream becomes errored or aborted, or the writer’s lock is released, the returned promise will become\n   * rejected.\n   */\n  get ready(): Promise<undefined> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('ready'));\n    }\n\n    return this._readyPromise;\n  }\n\n  /**\n   * If the reader is active, behaves the same as {@link WritableStream.abort | stream.abort(reason)}.\n   */\n  abort(reason: any = undefined): Promise<void> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('abort'));\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      return promiseRejectedWith(defaultWriterLockException('abort'));\n    }\n\n    return WritableStreamDefaultWriterAbort(this, reason);\n  }\n\n  /**\n   * If the reader is active, behaves the same as {@link WritableStream.close | stream.close()}.\n   */\n  close(): Promise<void> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('close'));\n    }\n\n    const stream = this._ownerWritableStream;\n\n    if (stream === undefined) {\n      return promiseRejectedWith(defaultWriterLockException('close'));\n    }\n\n    if (WritableStreamCloseQueuedOrInFlight(stream)) {\n      return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n    }\n\n    return WritableStreamDefaultWriterClose(this);\n  }\n\n  /**\n   * Releases the writer’s lock on the corresponding stream. After the lock is released, the writer is no longer active.\n   * If the associated stream is errored when the lock is released, the writer will appear errored in the same way from\n   * now on; otherwise, the writer will appear closed.\n   *\n   * Note that the lock can still be released even if some ongoing writes have not yet finished (i.e. even if the\n   * promises returned from previous calls to {@link WritableStreamDefaultWriter.write | write()} have not yet settled).\n   * It’s not necessary to hold the lock on the writer for the duration of the write; the lock instead simply prevents\n   * other producers from writing in an interleaved manner.\n   */\n  releaseLock(): void {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      throw defaultWriterBrandCheckException('releaseLock');\n    }\n\n    const stream = this._ownerWritableStream;\n\n    if (stream === undefined) {\n      return;\n    }\n\n    assert(stream._writer !== undefined);\n\n    WritableStreamDefaultWriterRelease(this);\n  }\n\n  /**\n   * Writes the given chunk to the writable stream, by waiting until any previous writes have finished successfully,\n   * and then sending the chunk to the underlying sink's {@link UnderlyingSink.write | write()} method. It will return\n   * a promise that fulfills with undefined upon a successful write, or rejects if the write fails or stream becomes\n   * errored before the writing process is initiated.\n   *\n   * Note that what \"success\" means is up to the underlying sink; it might indicate simply that the chunk has been\n   * accepted, and not necessarily that it is safely saved to its ultimate destination.\n   */\n  write(chunk: W): Promise<void>;\n  write(chunk: W = undefined!): Promise<void> {\n    if (!IsWritableStreamDefaultWriter(this)) {\n      return promiseRejectedWith(defaultWriterBrandCheckException('write'));\n    }\n\n    if (this._ownerWritableStream === undefined) {\n      return promiseRejectedWith(defaultWriterLockException('write to'));\n    }\n\n    return WritableStreamDefaultWriterWrite(this, chunk);\n  }\n}\n\nObject.defineProperties(WritableStreamDefaultWriter.prototype, {\n  abort: { enumerable: true },\n  close: { enumerable: true },\n  releaseLock: { enumerable: true },\n  write: { enumerable: true },\n  closed: { enumerable: true },\n  desiredSize: { enumerable: true },\n  ready: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(WritableStreamDefaultWriter.prototype, Symbol.toStringTag, {\n    value: 'WritableStreamDefaultWriter',\n    configurable: true\n  });\n}\n\n// Abstract operations for the WritableStreamDefaultWriter.\n\nfunction IsWritableStreamDefaultWriter<W = any>(x: any): x is WritableStreamDefaultWriter<W> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n    return false;\n  }\n\n  return x instanceof WritableStreamDefaultWriter;\n}\n\n// A client of WritableStreamDefaultWriter may use these functions directly to bypass state check.\n\nfunction WritableStreamDefaultWriterAbort(writer: WritableStreamDefaultWriter, reason: any) {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  return WritableStreamAbort(stream, reason);\n}\n\nfunction WritableStreamDefaultWriterClose(writer: WritableStreamDefaultWriter): Promise<undefined> {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  return WritableStreamClose(stream);\n}\n\nfunction WritableStreamDefaultWriterCloseWithErrorPropagation(writer: WritableStreamDefaultWriter): Promise<undefined> {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  const state = stream._state;\n  if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n    return promiseResolvedWith(undefined);\n  }\n\n  if (state === 'errored') {\n    return promiseRejectedWith(stream._storedError);\n  }\n\n  assert(state === 'writable' || state === 'erroring');\n\n  return WritableStreamDefaultWriterClose(writer);\n}\n\nfunction WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer: WritableStreamDefaultWriter, error: any) {\n  if (writer._closedPromiseState === 'pending') {\n    defaultWriterClosedPromiseReject(writer, error);\n  } else {\n    defaultWriterClosedPromiseResetToRejected(writer, error);\n  }\n}\n\nfunction WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer: WritableStreamDefaultWriter, error: any) {\n  if (writer._readyPromiseState === 'pending') {\n    defaultWriterReadyPromiseReject(writer, error);\n  } else {\n    defaultWriterReadyPromiseResetToRejected(writer, error);\n  }\n}\n\nfunction WritableStreamDefaultWriterGetDesiredSize(writer: WritableStreamDefaultWriter): number | null {\n  const stream = writer._ownerWritableStream;\n  const state = stream._state;\n\n  if (state === 'errored' || state === 'erroring') {\n    return null;\n  }\n\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n}\n\nfunction WritableStreamDefaultWriterRelease(writer: WritableStreamDefaultWriter) {\n  const stream = writer._ownerWritableStream;\n  assert(stream !== undefined);\n  assert(stream._writer === writer);\n\n  const releasedError = new TypeError(\n    `Writer was released and can no longer be used to monitor the stream's closedness`);\n\n  WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n\n  // The state transitions to \"errored\" before the sink abort() method runs, but the writer.closed promise is not\n  // rejected until afterwards. This means that simply testing state will not work.\n  WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n\n  stream._writer = undefined;\n  writer._ownerWritableStream = undefined!;\n}\n\nfunction WritableStreamDefaultWriterWrite<W>(writer: WritableStreamDefaultWriter<W>, chunk: W): Promise<undefined> {\n  const stream = writer._ownerWritableStream;\n\n  assert(stream !== undefined);\n\n  const controller = stream._writableStreamController;\n\n  const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n\n  if (stream !== writer._ownerWritableStream) {\n    return promiseRejectedWith(defaultWriterLockException('write to'));\n  }\n\n  const state = stream._state;\n  if (state === 'errored') {\n    return promiseRejectedWith(stream._storedError);\n  }\n  if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n    return promiseRejectedWith(new TypeError('The stream is closing or closed and cannot be written to'));\n  }\n  if (state === 'erroring') {\n    return promiseRejectedWith(stream._storedError);\n  }\n\n  assert(state === 'writable');\n\n  const promise = WritableStreamAddWriteRequest(stream);\n\n  WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n\n  return promise;\n}\n\nconst closeSentinel: unique symbol = {} as any;\n\ntype QueueRecord<W> = W | typeof closeSentinel;\n\n/**\n * Allows control of a {@link WritableStream | writable stream}'s state and internal queue.\n *\n * @public\n */\nexport class WritableStreamDefaultController<W = any> {\n  /** @internal */\n  _controlledWritableStream!: WritableStream<W>;\n  /** @internal */\n  _queue!: SimpleQueue<QueuePair<QueueRecord<W>>>;\n  /** @internal */\n  _queueTotalSize!: number;\n  /** @internal */\n  _abortReason: any;\n  /** @internal */\n  _abortController: AbortController | undefined;\n  /** @internal */\n  _started!: boolean;\n  /** @internal */\n  _strategySizeAlgorithm!: QueuingStrategySizeCallback<W>;\n  /** @internal */\n  _strategyHWM!: number;\n  /** @internal */\n  _writeAlgorithm!: (chunk: W) => Promise<void>;\n  /** @internal */\n  _closeAlgorithm!: () => Promise<void>;\n  /** @internal */\n  _abortAlgorithm!: (reason: any) => Promise<void>;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * The reason which was passed to `WritableStream.abort(reason)` when the stream was aborted.\n   *\n   * @deprecated\n   *  This property has been removed from the specification, see https://github.com/whatwg/streams/pull/1177.\n   *  Use {@link WritableStreamDefaultController.signal}'s `reason` instead.\n   */\n  get abortReason(): any {\n    if (!IsWritableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('abortReason');\n    }\n    return this._abortReason;\n  }\n\n  /**\n   * An `AbortSignal` that can be used to abort the pending write or close operation when the stream is aborted.\n   */\n  get signal(): AbortSignal {\n    if (!IsWritableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('signal');\n    }\n    if (this._abortController === undefined) {\n      // Older browsers or older Node versions may not support `AbortController` or `AbortSignal`.\n      // We don't want to bundle and ship an `AbortController` polyfill together with our polyfill,\n      // so instead we only implement support for `signal` if we find a global `AbortController` constructor.\n      throw new TypeError('WritableStreamDefaultController.prototype.signal is not supported');\n    }\n    return this._abortController.signal;\n  }\n\n  /**\n   * Closes the controlled writable stream, making all future interactions with it fail with the given error `e`.\n   *\n   * This method is rarely used, since usually it suffices to return a rejected promise from one of the underlying\n   * sink's methods. However, it can be useful for suddenly shutting down a stream in response to an event outside the\n   * normal lifecycle of interactions with the underlying sink.\n   */\n  error(e: any = undefined): void {\n    if (!IsWritableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('error');\n    }\n    const state = this._controlledWritableStream._state;\n    if (state !== 'writable') {\n      // The stream is closed, errored or will be soon. The sink can't do anything useful if it gets an error here, so\n      // just treat it as a no-op.\n      return;\n    }\n\n    WritableStreamDefaultControllerError(this, e);\n  }\n\n  /** @internal */\n  [AbortSteps](reason: any): Promise<void> {\n    const result = this._abortAlgorithm(reason);\n    WritableStreamDefaultControllerClearAlgorithms(this);\n    return result;\n  }\n\n  /** @internal */\n  [ErrorSteps]() {\n    ResetQueue(this);\n  }\n}\n\nObject.defineProperties(WritableStreamDefaultController.prototype, {\n  abortReason: { enumerable: true },\n  signal: { enumerable: true },\n  error: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(WritableStreamDefaultController.prototype, Symbol.toStringTag, {\n    value: 'WritableStreamDefaultController',\n    configurable: true\n  });\n}\n\n// Abstract operations implementing interface required by the WritableStream.\n\nfunction IsWritableStreamDefaultController(x: any): x is WritableStreamDefaultController<any> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledWritableStream')) {\n    return false;\n  }\n\n  return x instanceof WritableStreamDefaultController;\n}\n\nfunction SetUpWritableStreamDefaultController<W>(stream: WritableStream<W>,\n                                                 controller: WritableStreamDefaultController<W>,\n                                                 startAlgorithm: () => void | PromiseLike<void>,\n                                                 writeAlgorithm: (chunk: W) => Promise<void>,\n                                                 closeAlgorithm: () => Promise<void>,\n                                                 abortAlgorithm: (reason: any) => Promise<void>,\n                                                 highWaterMark: number,\n                                                 sizeAlgorithm: QueuingStrategySizeCallback<W>) {\n  assert(IsWritableStream(stream));\n  assert(stream._writableStreamController === undefined);\n\n  controller._controlledWritableStream = stream;\n  stream._writableStreamController = controller;\n\n  // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n  controller._queue = undefined!;\n  controller._queueTotalSize = undefined!;\n  ResetQueue(controller);\n\n  controller._abortReason = undefined;\n  controller._abortController = createAbortController();\n  controller._started = false;\n\n  controller._strategySizeAlgorithm = sizeAlgorithm;\n  controller._strategyHWM = highWaterMark;\n\n  controller._writeAlgorithm = writeAlgorithm;\n  controller._closeAlgorithm = closeAlgorithm;\n  controller._abortAlgorithm = abortAlgorithm;\n\n  const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n  WritableStreamUpdateBackpressure(stream, backpressure);\n\n  const startResult = startAlgorithm();\n  const startPromise = promiseResolvedWith(startResult);\n  uponPromise(\n    startPromise,\n    () => {\n      assert(stream._state === 'writable' || stream._state === 'erroring');\n      controller._started = true;\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    },\n    r => {\n      assert(stream._state === 'writable' || stream._state === 'erroring');\n      controller._started = true;\n      WritableStreamDealWithRejection(stream, r);\n    }\n  );\n}\n\nfunction SetUpWritableStreamDefaultControllerFromUnderlyingSink<W>(stream: WritableStream<W>,\n                                                                   underlyingSink: ValidatedUnderlyingSink<W>,\n                                                                   highWaterMark: number,\n                                                                   sizeAlgorithm: QueuingStrategySizeCallback<W>) {\n  const controller = Object.create(WritableStreamDefaultController.prototype);\n\n  let startAlgorithm: () => void | PromiseLike<void> = () => undefined;\n  let writeAlgorithm: (chunk: W) => Promise<void> = () => promiseResolvedWith(undefined);\n  let closeAlgorithm: () => Promise<void> = () => promiseResolvedWith(undefined);\n  let abortAlgorithm: (reason: any) => Promise<void> = () => promiseResolvedWith(undefined);\n\n  if (underlyingSink.start !== undefined) {\n    startAlgorithm = () => underlyingSink.start!(controller);\n  }\n  if (underlyingSink.write !== undefined) {\n    writeAlgorithm = chunk => underlyingSink.write!(chunk, controller);\n  }\n  if (underlyingSink.close !== undefined) {\n    closeAlgorithm = () => underlyingSink.close!();\n  }\n  if (underlyingSink.abort !== undefined) {\n    abortAlgorithm = reason => underlyingSink.abort!(reason);\n  }\n\n  SetUpWritableStreamDefaultController(\n    stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm\n  );\n}\n\n// ClearAlgorithms may be called twice. Erroring the same stream in multiple ways will often result in redundant calls.\nfunction WritableStreamDefaultControllerClearAlgorithms(controller: WritableStreamDefaultController<any>) {\n  controller._writeAlgorithm = undefined!;\n  controller._closeAlgorithm = undefined!;\n  controller._abortAlgorithm = undefined!;\n  controller._strategySizeAlgorithm = undefined!;\n}\n\nfunction WritableStreamDefaultControllerClose<W>(controller: WritableStreamDefaultController<W>) {\n  EnqueueValueWithSize(controller, closeSentinel, 0);\n  WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\n\nfunction WritableStreamDefaultControllerGetChunkSize<W>(controller: WritableStreamDefaultController<W>,\n                                                        chunk: W): number {\n  try {\n    return controller._strategySizeAlgorithm(chunk);\n  } catch (chunkSizeE) {\n    WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n    return 1;\n  }\n}\n\nfunction WritableStreamDefaultControllerGetDesiredSize(controller: WritableStreamDefaultController<any>): number {\n  return controller._strategyHWM - controller._queueTotalSize;\n}\n\nfunction WritableStreamDefaultControllerWrite<W>(controller: WritableStreamDefaultController<W>,\n                                                 chunk: W,\n                                                 chunkSize: number) {\n  try {\n    EnqueueValueWithSize(controller, chunk, chunkSize);\n  } catch (enqueueE) {\n    WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n    return;\n  }\n\n  const stream = controller._controlledWritableStream;\n  if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === 'writable') {\n    const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n    WritableStreamUpdateBackpressure(stream, backpressure);\n  }\n\n  WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\n\n// Abstract operations for the WritableStreamDefaultController.\n\nfunction WritableStreamDefaultControllerAdvanceQueueIfNeeded<W>(controller: WritableStreamDefaultController<W>) {\n  const stream = controller._controlledWritableStream;\n\n  if (!controller._started) {\n    return;\n  }\n\n  if (stream._inFlightWriteRequest !== undefined) {\n    return;\n  }\n\n  const state = stream._state;\n  assert(state !== 'closed' && state !== 'errored');\n  if (state === 'erroring') {\n    WritableStreamFinishErroring(stream);\n    return;\n  }\n\n  if (controller._queue.length === 0) {\n    return;\n  }\n\n  const value = PeekQueueValue(controller);\n  if (value === closeSentinel) {\n    WritableStreamDefaultControllerProcessClose(controller);\n  } else {\n    WritableStreamDefaultControllerProcessWrite(controller, value);\n  }\n}\n\nfunction WritableStreamDefaultControllerErrorIfNeeded(controller: WritableStreamDefaultController<any>, error: any) {\n  if (controller._controlledWritableStream._state === 'writable') {\n    WritableStreamDefaultControllerError(controller, error);\n  }\n}\n\nfunction WritableStreamDefaultControllerProcessClose(controller: WritableStreamDefaultController<any>) {\n  const stream = controller._controlledWritableStream;\n\n  WritableStreamMarkCloseRequestInFlight(stream);\n\n  DequeueValue(controller);\n  assert(controller._queue.length === 0);\n\n  const sinkClosePromise = controller._closeAlgorithm();\n  WritableStreamDefaultControllerClearAlgorithms(controller);\n  uponPromise(\n    sinkClosePromise,\n    () => {\n      WritableStreamFinishInFlightClose(stream);\n    },\n    reason => {\n      WritableStreamFinishInFlightCloseWithError(stream, reason);\n    }\n  );\n}\n\nfunction WritableStreamDefaultControllerProcessWrite<W>(controller: WritableStreamDefaultController<W>, chunk: W) {\n  const stream = controller._controlledWritableStream;\n\n  WritableStreamMarkFirstWriteRequestInFlight(stream);\n\n  const sinkWritePromise = controller._writeAlgorithm(chunk);\n  uponPromise(\n    sinkWritePromise,\n    () => {\n      WritableStreamFinishInFlightWrite(stream);\n\n      const state = stream._state;\n      assert(state === 'writable' || state === 'erroring');\n\n      DequeueValue(controller);\n\n      if (!WritableStreamCloseQueuedOrInFlight(stream) && state === 'writable') {\n        const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n      }\n\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    },\n    reason => {\n      if (stream._state === 'writable') {\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n      }\n      WritableStreamFinishInFlightWriteWithError(stream, reason);\n    }\n  );\n}\n\nfunction WritableStreamDefaultControllerGetBackpressure(controller: WritableStreamDefaultController<any>): boolean {\n  const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n  return desiredSize <= 0;\n}\n\n// A client of WritableStreamDefaultController may use these functions directly to bypass state check.\n\nfunction WritableStreamDefaultControllerError(controller: WritableStreamDefaultController<any>, error: any) {\n  const stream = controller._controlledWritableStream;\n\n  assert(stream._state === 'writable');\n\n  WritableStreamDefaultControllerClearAlgorithms(controller);\n  WritableStreamStartErroring(stream, error);\n}\n\n// Helper functions for the WritableStream.\n\nfunction streamBrandCheckException(name: string): TypeError {\n  return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);\n}\n\n// Helper functions for the WritableStreamDefaultController.\n\nfunction defaultControllerBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `WritableStreamDefaultController.prototype.${name} can only be used on a WritableStreamDefaultController`);\n}\n\n\n// Helper functions for the WritableStreamDefaultWriter.\n\nfunction defaultWriterBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);\n}\n\nfunction defaultWriterLockException(name: string): TypeError {\n  return new TypeError('Cannot ' + name + ' a stream using a released writer');\n}\n\nfunction defaultWriterClosedPromiseInitialize(writer: WritableStreamDefaultWriter) {\n  writer._closedPromise = newPromise((resolve, reject) => {\n    writer._closedPromise_resolve = resolve;\n    writer._closedPromise_reject = reject;\n    writer._closedPromiseState = 'pending';\n  });\n}\n\nfunction defaultWriterClosedPromiseInitializeAsRejected(writer: WritableStreamDefaultWriter, reason: any) {\n  defaultWriterClosedPromiseInitialize(writer);\n  defaultWriterClosedPromiseReject(writer, reason);\n}\n\nfunction defaultWriterClosedPromiseInitializeAsResolved(writer: WritableStreamDefaultWriter) {\n  defaultWriterClosedPromiseInitialize(writer);\n  defaultWriterClosedPromiseResolve(writer);\n}\n\nfunction defaultWriterClosedPromiseReject(writer: WritableStreamDefaultWriter, reason: any) {\n  if (writer._closedPromise_reject === undefined) {\n    return;\n  }\n  assert(writer._closedPromiseState === 'pending');\n\n  setPromiseIsHandledToTrue(writer._closedPromise);\n  writer._closedPromise_reject(reason);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n  writer._closedPromiseState = 'rejected';\n}\n\nfunction defaultWriterClosedPromiseResetToRejected(writer: WritableStreamDefaultWriter, reason: any) {\n  assert(writer._closedPromise_resolve === undefined);\n  assert(writer._closedPromise_reject === undefined);\n  assert(writer._closedPromiseState !== 'pending');\n\n  defaultWriterClosedPromiseInitializeAsRejected(writer, reason);\n}\n\nfunction defaultWriterClosedPromiseResolve(writer: WritableStreamDefaultWriter) {\n  if (writer._closedPromise_resolve === undefined) {\n    return;\n  }\n  assert(writer._closedPromiseState === 'pending');\n\n  writer._closedPromise_resolve(undefined);\n  writer._closedPromise_resolve = undefined;\n  writer._closedPromise_reject = undefined;\n  writer._closedPromiseState = 'resolved';\n}\n\nfunction defaultWriterReadyPromiseInitialize(writer: WritableStreamDefaultWriter) {\n  writer._readyPromise = newPromise((resolve, reject) => {\n    writer._readyPromise_resolve = resolve;\n    writer._readyPromise_reject = reject;\n  });\n  writer._readyPromiseState = 'pending';\n}\n\nfunction defaultWriterReadyPromiseInitializeAsRejected(writer: WritableStreamDefaultWriter, reason: any) {\n  defaultWriterReadyPromiseInitialize(writer);\n  defaultWriterReadyPromiseReject(writer, reason);\n}\n\nfunction defaultWriterReadyPromiseInitializeAsResolved(writer: WritableStreamDefaultWriter) {\n  defaultWriterReadyPromiseInitialize(writer);\n  defaultWriterReadyPromiseResolve(writer);\n}\n\nfunction defaultWriterReadyPromiseReject(writer: WritableStreamDefaultWriter, reason: any) {\n  if (writer._readyPromise_reject === undefined) {\n    return;\n  }\n\n  setPromiseIsHandledToTrue(writer._readyPromise);\n  writer._readyPromise_reject(reason);\n  writer._readyPromise_resolve = undefined;\n  writer._readyPromise_reject = undefined;\n  writer._readyPromiseState = 'rejected';\n}\n\nfunction defaultWriterReadyPromiseReset(writer: WritableStreamDefaultWriter) {\n  assert(writer._readyPromise_resolve === undefined);\n  assert(writer._readyPromise_reject === undefined);\n\n  defaultWriterReadyPromiseInitialize(writer);\n}\n\nfunction defaultWriterReadyPromiseResetToRejected(writer: WritableStreamDefaultWriter, reason: any) {\n  assert(writer._readyPromise_resolve === undefined);\n  assert(writer._readyPromise_reject === undefined);\n\n  defaultWriterReadyPromiseInitializeAsRejected(writer, reason);\n}\n\nfunction defaultWriterReadyPromiseResolve(writer: WritableStreamDefaultWriter) {\n  if (writer._readyPromise_resolve === undefined) {\n    return;\n  }\n\n  writer._readyPromise_resolve(undefined);\n  writer._readyPromise_resolve = undefined;\n  writer._readyPromise_reject = undefined;\n  writer._readyPromiseState = 'fulfilled';\n}\n","/// <reference lib=\"dom\" />\nexport const NativeDOMException: typeof DOMException | undefined =\n  typeof DOMException !== 'undefined' ? DOMException : undefined;\n","/// <reference types=\"node\" />\nimport { NativeDOMException } from './native';\n\ndeclare class DOMExceptionClass extends Error {\n  constructor(message?: string, name?: string);\n\n  name: string;\n  message: string;\n}\n\ntype DOMException = DOMExceptionClass;\ntype DOMExceptionConstructor = typeof DOMExceptionClass;\n\nfunction isDOMExceptionConstructor(ctor: unknown): ctor is DOMExceptionConstructor {\n  if (!(typeof ctor === 'function' || typeof ctor === 'object')) {\n    return false;\n  }\n  try {\n    new (ctor as DOMExceptionConstructor)();\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction createDOMExceptionPolyfill(): DOMExceptionConstructor {\n  // eslint-disable-next-line no-shadow\n  const ctor = function DOMException(this: DOMException, message?: string, name?: string) {\n    this.message = message || '';\n    this.name = name || 'Error';\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  } as any;\n  ctor.prototype = Object.create(Error.prototype);\n  Object.defineProperty(ctor.prototype, 'constructor', { value: ctor, writable: true, configurable: true });\n  return ctor;\n}\n\n// eslint-disable-next-line no-redeclare\nconst DOMException: DOMExceptionConstructor =\n  isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();\n\nexport { DOMException };\n","import { IsReadableStream, IsReadableStreamLocked, ReadableStream, ReadableStreamCancel } from '../readable-stream';\nimport { AcquireReadableStreamDefaultReader, ReadableStreamDefaultReaderRead } from './default-reader';\nimport { ReadableStreamReaderGenericRelease } from './generic-reader';\nimport {\n  AcquireWritableStreamDefaultWriter,\n  IsWritableStream,\n  IsWritableStreamLocked,\n  WritableStream,\n  WritableStreamAbort,\n  WritableStreamCloseQueuedOrInFlight,\n  WritableStreamDefaultWriterCloseWithErrorPropagation,\n  WritableStreamDefaultWriterRelease,\n  WritableStreamDefaultWriterWrite\n} from '../writable-stream';\nimport assert from '../../stub/assert';\nimport {\n  newPromise,\n  PerformPromiseThen,\n  promiseResolvedWith,\n  setPromiseIsHandledToTrue,\n  uponFulfillment,\n  uponPromise,\n  uponRejection\n} from '../helpers/webidl';\nimport { noop } from '../../utils';\nimport { AbortSignal, isAbortSignal } from '../abort-signal';\nimport { DOMException } from '../../stub/dom-exception';\n\nexport function ReadableStreamPipeTo<T>(source: ReadableStream<T>,\n                                        dest: WritableStream<T>,\n                                        preventClose: boolean,\n                                        preventAbort: boolean,\n                                        preventCancel: boolean,\n                                        signal: AbortSignal | undefined): Promise<undefined> {\n  assert(IsReadableStream(source));\n  assert(IsWritableStream(dest));\n  assert(typeof preventClose === 'boolean');\n  assert(typeof preventAbort === 'boolean');\n  assert(typeof preventCancel === 'boolean');\n  assert(signal === undefined || isAbortSignal(signal));\n  assert(!IsReadableStreamLocked(source));\n  assert(!IsWritableStreamLocked(dest));\n\n  const reader = AcquireReadableStreamDefaultReader<T>(source);\n  const writer = AcquireWritableStreamDefaultWriter<T>(dest);\n\n  source._disturbed = true;\n\n  let shuttingDown = false;\n\n  // This is used to keep track of the spec's requirement that we wait for ongoing writes during shutdown.\n  let currentWrite = promiseResolvedWith<void>(undefined);\n\n  return newPromise((resolve, reject) => {\n    let abortAlgorithm: () => void;\n    if (signal !== undefined) {\n      abortAlgorithm = () => {\n        const error = new DOMException('Aborted', 'AbortError');\n        const actions: Array<() => Promise<void>> = [];\n        if (!preventAbort) {\n          actions.push(() => {\n            if (dest._state === 'writable') {\n              return WritableStreamAbort(dest, error);\n            }\n            return promiseResolvedWith(undefined);\n          });\n        }\n        if (!preventCancel) {\n          actions.push(() => {\n            if (source._state === 'readable') {\n              return ReadableStreamCancel(source, error);\n            }\n            return promiseResolvedWith(undefined);\n          });\n        }\n        shutdownWithAction(() => Promise.all(actions.map(action => action())), true, error);\n      };\n\n      if (signal.aborted) {\n        abortAlgorithm();\n        return;\n      }\n\n      signal.addEventListener('abort', abortAlgorithm);\n    }\n\n    // Using reader and writer, read all chunks from this and write them to dest\n    // - Backpressure must be enforced\n    // - Shutdown must stop all activity\n    function pipeLoop() {\n      return newPromise<void>((resolveLoop, rejectLoop) => {\n        function next(done: boolean) {\n          if (done) {\n            resolveLoop();\n          } else {\n            // Use `PerformPromiseThen` instead of `uponPromise` to avoid\n            // adding unnecessary `.catch(rethrowAssertionErrorRejection)` handlers\n            PerformPromiseThen(pipeStep(), next, rejectLoop);\n          }\n        }\n\n        next(false);\n      });\n    }\n\n    function pipeStep(): Promise<boolean> {\n      if (shuttingDown) {\n        return promiseResolvedWith(true);\n      }\n\n      return PerformPromiseThen(writer._readyPromise, () => {\n        return newPromise<boolean>((resolveRead, rejectRead) => {\n          ReadableStreamDefaultReaderRead(\n            reader,\n            {\n              _chunkSteps: chunk => {\n                currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), undefined, noop);\n                resolveRead(false);\n              },\n              _closeSteps: () => resolveRead(true),\n              _errorSteps: rejectRead\n            }\n          );\n        });\n      });\n    }\n\n    // Errors must be propagated forward\n    isOrBecomesErrored(source, reader._closedPromise, storedError => {\n      if (!preventAbort) {\n        shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);\n      } else {\n        shutdown(true, storedError);\n      }\n    });\n\n    // Errors must be propagated backward\n    isOrBecomesErrored(dest, writer._closedPromise, storedError => {\n      if (!preventCancel) {\n        shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);\n      } else {\n        shutdown(true, storedError);\n      }\n    });\n\n    // Closing must be propagated forward\n    isOrBecomesClosed(source, reader._closedPromise, () => {\n      if (!preventClose) {\n        shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));\n      } else {\n        shutdown();\n      }\n    });\n\n    // Closing must be propagated backward\n    if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === 'closed') {\n      const destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n\n      if (!preventCancel) {\n        shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);\n      } else {\n        shutdown(true, destClosed);\n      }\n    }\n\n    setPromiseIsHandledToTrue(pipeLoop());\n\n    function waitForWritesToFinish(): Promise<void> {\n      // Another write may have started while we were waiting on this currentWrite, so we have to be sure to wait\n      // for that too.\n      const oldCurrentWrite = currentWrite;\n      return PerformPromiseThen(\n        currentWrite,\n        () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined\n      );\n    }\n\n    function isOrBecomesErrored(stream: ReadableStream | WritableStream,\n                                promise: Promise<void>,\n                                action: (reason: any) => void) {\n      if (stream._state === 'errored') {\n        action(stream._storedError);\n      } else {\n        uponRejection(promise, action);\n      }\n    }\n\n    function isOrBecomesClosed(stream: ReadableStream | WritableStream, promise: Promise<void>, action: () => void) {\n      if (stream._state === 'closed') {\n        action();\n      } else {\n        uponFulfillment(promise, action);\n      }\n    }\n\n    function shutdownWithAction(action: () => Promise<unknown>, originalIsError?: boolean, originalError?: any) {\n      if (shuttingDown) {\n        return;\n      }\n      shuttingDown = true;\n\n      if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n        uponFulfillment(waitForWritesToFinish(), doTheRest);\n      } else {\n        doTheRest();\n      }\n\n      function doTheRest() {\n        uponPromise(\n          action(),\n          () => finalize(originalIsError, originalError),\n          newError => finalize(true, newError)\n        );\n      }\n    }\n\n    function shutdown(isError?: boolean, error?: any) {\n      if (shuttingDown) {\n        return;\n      }\n      shuttingDown = true;\n\n      if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n        uponFulfillment(waitForWritesToFinish(), () => finalize(isError, error));\n      } else {\n        finalize(isError, error);\n      }\n    }\n\n    function finalize(isError?: boolean, error?: any) {\n      WritableStreamDefaultWriterRelease(writer);\n      ReadableStreamReaderGenericRelease(reader);\n\n      if (signal !== undefined) {\n        signal.removeEventListener('abort', abortAlgorithm);\n      }\n      if (isError) {\n        reject(error);\n      } else {\n        resolve(undefined);\n      }\n    }\n  });\n}\n","import { QueuingStrategySizeCallback } from '../queuing-strategy';\nimport assert from '../../stub/assert';\nimport { DequeueValue, EnqueueValueWithSize, QueuePair, ResetQueue } from '../abstract-ops/queue-with-sizes';\nimport {\n  ReadableStreamAddReadRequest,\n  ReadableStreamFulfillReadRequest,\n  ReadableStreamGetNumReadRequests,\n  ReadRequest\n} from './default-reader';\nimport { SimpleQueue } from '../simple-queue';\nimport { IsReadableStreamLocked, ReadableStream, ReadableStreamClose, ReadableStreamError } from '../readable-stream';\nimport { ValidatedUnderlyingSource } from './underlying-source';\nimport { typeIsObject } from '../helpers/miscellaneous';\nimport { CancelSteps, PullSteps } from '../abstract-ops/internal-methods';\nimport { promiseResolvedWith, uponPromise } from '../helpers/webidl';\n\n/**\n * Allows control of a {@link ReadableStream | readable stream}'s state and internal queue.\n *\n * @public\n */\nexport class ReadableStreamDefaultController<R> {\n  /** @internal */\n  _controlledReadableStream!: ReadableStream<R>;\n  /** @internal */\n  _queue!: SimpleQueue<QueuePair<R>>;\n  /** @internal */\n  _queueTotalSize!: number;\n  /** @internal */\n  _started!: boolean;\n  /** @internal */\n  _closeRequested!: boolean;\n  /** @internal */\n  _pullAgain!: boolean;\n  /** @internal */\n  _pulling !: boolean;\n  /** @internal */\n  _strategySizeAlgorithm!: QueuingStrategySizeCallback<R>;\n  /** @internal */\n  _strategyHWM!: number;\n  /** @internal */\n  _pullAlgorithm!: () => Promise<void>;\n  /** @internal */\n  _cancelAlgorithm!: (reason: any) => Promise<void>;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n   * over-full. An underlying source ought to use this information to determine when and how to apply backpressure.\n   */\n  get desiredSize(): number | null {\n    if (!IsReadableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('desiredSize');\n    }\n\n    return ReadableStreamDefaultControllerGetDesiredSize(this);\n  }\n\n  /**\n   * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n   * the stream, but once those are read, the stream will become closed.\n   */\n  close(): void {\n    if (!IsReadableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('close');\n    }\n\n    if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n      throw new TypeError('The stream is not in a state that permits close');\n    }\n\n    ReadableStreamDefaultControllerClose(this);\n  }\n\n  /**\n   * Enqueues the given chunk `chunk` in the controlled readable stream.\n   */\n  enqueue(chunk: R): void;\n  enqueue(chunk: R = undefined!): void {\n    if (!IsReadableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('enqueue');\n    }\n\n    if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n      throw new TypeError('The stream is not in a state that permits enqueue');\n    }\n\n    return ReadableStreamDefaultControllerEnqueue(this, chunk);\n  }\n\n  /**\n   * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n   */\n  error(e: any = undefined): void {\n    if (!IsReadableStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('error');\n    }\n\n    ReadableStreamDefaultControllerError(this, e);\n  }\n\n  /** @internal */\n  [CancelSteps](reason: any): Promise<void> {\n    ResetQueue(this);\n    const result = this._cancelAlgorithm(reason);\n    ReadableStreamDefaultControllerClearAlgorithms(this);\n    return result;\n  }\n\n  /** @internal */\n  [PullSteps](readRequest: ReadRequest<R>): void {\n    const stream = this._controlledReadableStream;\n\n    if (this._queue.length > 0) {\n      const chunk = DequeueValue(this);\n\n      if (this._closeRequested && this._queue.length === 0) {\n        ReadableStreamDefaultControllerClearAlgorithms(this);\n        ReadableStreamClose(stream);\n      } else {\n        ReadableStreamDefaultControllerCallPullIfNeeded(this);\n      }\n\n      readRequest._chunkSteps(chunk);\n    } else {\n      ReadableStreamAddReadRequest(stream, readRequest);\n      ReadableStreamDefaultControllerCallPullIfNeeded(this);\n    }\n  }\n}\n\nObject.defineProperties(ReadableStreamDefaultController.prototype, {\n  close: { enumerable: true },\n  enqueue: { enumerable: true },\n  error: { enumerable: true },\n  desiredSize: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStreamDefaultController.prototype, Symbol.toStringTag, {\n    value: 'ReadableStreamDefaultController',\n    configurable: true\n  });\n}\n\n// Abstract operations for the ReadableStreamDefaultController.\n\nfunction IsReadableStreamDefaultController<R = any>(x: any): x is ReadableStreamDefaultController<R> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableStream')) {\n    return false;\n  }\n\n  return x instanceof ReadableStreamDefaultController;\n}\n\nfunction ReadableStreamDefaultControllerCallPullIfNeeded(controller: ReadableStreamDefaultController<any>): void {\n  const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n  if (!shouldPull) {\n    return;\n  }\n\n  if (controller._pulling) {\n    controller._pullAgain = true;\n    return;\n  }\n\n  assert(!controller._pullAgain);\n\n  controller._pulling = true;\n\n  const pullPromise = controller._pullAlgorithm();\n  uponPromise(\n    pullPromise,\n    () => {\n      controller._pulling = false;\n\n      if (controller._pullAgain) {\n        controller._pullAgain = false;\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }\n    },\n    e => {\n      ReadableStreamDefaultControllerError(controller, e);\n    }\n  );\n}\n\nfunction ReadableStreamDefaultControllerShouldCallPull(controller: ReadableStreamDefaultController<any>): boolean {\n  const stream = controller._controlledReadableStream;\n\n  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n    return false;\n  }\n\n  if (!controller._started) {\n    return false;\n  }\n\n  if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n    return true;\n  }\n\n  const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n  assert(desiredSize !== null);\n  if (desiredSize! > 0) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction ReadableStreamDefaultControllerClearAlgorithms(controller: ReadableStreamDefaultController<any>) {\n  controller._pullAlgorithm = undefined!;\n  controller._cancelAlgorithm = undefined!;\n  controller._strategySizeAlgorithm = undefined!;\n}\n\n// A client of ReadableStreamDefaultController may use these functions directly to bypass state check.\n\nexport function ReadableStreamDefaultControllerClose(controller: ReadableStreamDefaultController<any>) {\n  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n    return;\n  }\n\n  const stream = controller._controlledReadableStream;\n\n  controller._closeRequested = true;\n\n  if (controller._queue.length === 0) {\n    ReadableStreamDefaultControllerClearAlgorithms(controller);\n    ReadableStreamClose(stream);\n  }\n}\n\nexport function ReadableStreamDefaultControllerEnqueue<R>(\n  controller: ReadableStreamDefaultController<R>,\n  chunk: R\n): void {\n  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n    return;\n  }\n\n  const stream = controller._controlledReadableStream;\n\n  if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n    ReadableStreamFulfillReadRequest(stream, chunk, false);\n  } else {\n    let chunkSize;\n    try {\n      chunkSize = controller._strategySizeAlgorithm(chunk);\n    } catch (chunkSizeE) {\n      ReadableStreamDefaultControllerError(controller, chunkSizeE);\n      throw chunkSizeE;\n    }\n\n    try {\n      EnqueueValueWithSize(controller, chunk, chunkSize);\n    } catch (enqueueE) {\n      ReadableStreamDefaultControllerError(controller, enqueueE);\n      throw enqueueE;\n    }\n  }\n\n  ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n}\n\nexport function ReadableStreamDefaultControllerError(controller: ReadableStreamDefaultController<any>, e: any) {\n  const stream = controller._controlledReadableStream;\n\n  if (stream._state !== 'readable') {\n    return;\n  }\n\n  ResetQueue(controller);\n\n  ReadableStreamDefaultControllerClearAlgorithms(controller);\n  ReadableStreamError(stream, e);\n}\n\nexport function ReadableStreamDefaultControllerGetDesiredSize(\n  controller: ReadableStreamDefaultController<any>\n): number | null {\n  const state = controller._controlledReadableStream._state;\n\n  if (state === 'errored') {\n    return null;\n  }\n  if (state === 'closed') {\n    return 0;\n  }\n\n  return controller._strategyHWM - controller._queueTotalSize;\n}\n\n// This is used in the implementation of TransformStream.\nexport function ReadableStreamDefaultControllerHasBackpressure(\n  controller: ReadableStreamDefaultController<any>\n): boolean {\n  if (ReadableStreamDefaultControllerShouldCallPull(controller)) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function ReadableStreamDefaultControllerCanCloseOrEnqueue(\n  controller: ReadableStreamDefaultController<any>\n): boolean {\n  const state = controller._controlledReadableStream._state;\n\n  if (!controller._closeRequested && state === 'readable') {\n    return true;\n  }\n\n  return false;\n}\n\nexport function SetUpReadableStreamDefaultController<R>(stream: ReadableStream<R>,\n                                                        controller: ReadableStreamDefaultController<R>,\n                                                        startAlgorithm: () => void | PromiseLike<void>,\n                                                        pullAlgorithm: () => Promise<void>,\n                                                        cancelAlgorithm: (reason: any) => Promise<void>,\n                                                        highWaterMark: number,\n                                                        sizeAlgorithm: QueuingStrategySizeCallback<R>) {\n  assert(stream._readableStreamController === undefined);\n\n  controller._controlledReadableStream = stream;\n\n  controller._queue = undefined!;\n  controller._queueTotalSize = undefined!;\n  ResetQueue(controller);\n\n  controller._started = false;\n  controller._closeRequested = false;\n  controller._pullAgain = false;\n  controller._pulling = false;\n\n  controller._strategySizeAlgorithm = sizeAlgorithm;\n  controller._strategyHWM = highWaterMark;\n\n  controller._pullAlgorithm = pullAlgorithm;\n  controller._cancelAlgorithm = cancelAlgorithm;\n\n  stream._readableStreamController = controller;\n\n  const startResult = startAlgorithm();\n  uponPromise(\n    promiseResolvedWith(startResult),\n    () => {\n      controller._started = true;\n\n      assert(!controller._pulling);\n      assert(!controller._pullAgain);\n\n      ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    },\n    r => {\n      ReadableStreamDefaultControllerError(controller, r);\n    }\n  );\n}\n\nexport function SetUpReadableStreamDefaultControllerFromUnderlyingSource<R>(\n  stream: ReadableStream<R>,\n  underlyingSource: ValidatedUnderlyingSource<R>,\n  highWaterMark: number,\n  sizeAlgorithm: QueuingStrategySizeCallback<R>\n) {\n  const controller: ReadableStreamDefaultController<R> = Object.create(ReadableStreamDefaultController.prototype);\n\n  let startAlgorithm: () => void | PromiseLike<void> = () => undefined;\n  let pullAlgorithm: () => Promise<void> = () => promiseResolvedWith(undefined);\n  let cancelAlgorithm: (reason: any) => Promise<void> = () => promiseResolvedWith(undefined);\n\n  if (underlyingSource.start !== undefined) {\n    startAlgorithm = () => underlyingSource.start!(controller);\n  }\n  if (underlyingSource.pull !== undefined) {\n    pullAlgorithm = () => underlyingSource.pull!(controller);\n  }\n  if (underlyingSource.cancel !== undefined) {\n    cancelAlgorithm = reason => underlyingSource.cancel!(reason);\n  }\n\n  SetUpReadableStreamDefaultController(\n    stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm\n  );\n}\n\n// Helper functions for the ReadableStreamDefaultController.\n\nfunction defaultControllerBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);\n}\n","import {\n  CreateReadableByteStream,\n  CreateReadableStream,\n  IsReadableStream,\n  ReadableByteStream,\n  ReadableStream,\n  ReadableStreamCancel,\n  ReadableStreamReader\n} from '../readable-stream';\nimport { ReadableStreamReaderGenericRelease } from './generic-reader';\nimport {\n  AcquireReadableStreamDefaultReader,\n  IsReadableStreamDefaultReader,\n  ReadableStreamDefaultReaderRead,\n  ReadRequest\n} from './default-reader';\nimport {\n  AcquireReadableStreamBYOBReader,\n  IsReadableStreamBYOBReader,\n  ReadableStreamBYOBReaderRead,\n  ReadIntoRequest\n} from './byob-reader';\nimport assert from '../../stub/assert';\nimport { newPromise, promiseResolvedWith, queueMicrotask, uponRejection } from '../helpers/webidl';\nimport {\n  ReadableStreamDefaultController,\n  ReadableStreamDefaultControllerClose,\n  ReadableStreamDefaultControllerEnqueue,\n  ReadableStreamDefaultControllerError\n} from './default-controller';\nimport {\n  IsReadableByteStreamController,\n  ReadableByteStreamControllerClose,\n  ReadableByteStreamControllerEnqueue,\n  ReadableByteStreamControllerError,\n  ReadableByteStreamControllerGetBYOBRequest,\n  ReadableByteStreamControllerRespond,\n  ReadableByteStreamControllerRespondWithNewView\n} from './byte-stream-controller';\nimport { CreateArrayFromList } from '../abstract-ops/ecmascript';\nimport { CloneAsUint8Array } from '../abstract-ops/miscellaneous';\n\nexport function ReadableStreamTee<R>(stream: ReadableStream<R>,\n                                     cloneForBranch2: boolean): [ReadableStream<R>, ReadableStream<R>] {\n  assert(IsReadableStream(stream));\n  assert(typeof cloneForBranch2 === 'boolean');\n  if (IsReadableByteStreamController(stream._readableStreamController)) {\n    return ReadableByteStreamTee(stream as unknown as ReadableByteStream) as\n      unknown as [ReadableStream<R>, ReadableStream<R>];\n  }\n  return ReadableStreamDefaultTee(stream, cloneForBranch2);\n}\n\nexport function ReadableStreamDefaultTee<R>(stream: ReadableStream<R>,\n                                            cloneForBranch2: boolean): [ReadableStream<R>, ReadableStream<R>] {\n  assert(IsReadableStream(stream));\n  assert(typeof cloneForBranch2 === 'boolean');\n\n  const reader = AcquireReadableStreamDefaultReader<R>(stream);\n\n  let reading = false;\n  let readAgain = false;\n  let canceled1 = false;\n  let canceled2 = false;\n  let reason1: any;\n  let reason2: any;\n  let branch1: ReadableStream<R>;\n  let branch2: ReadableStream<R>;\n\n  let resolveCancelPromise: (value: undefined | Promise<undefined>) => void;\n  const cancelPromise = newPromise<undefined>(resolve => {\n    resolveCancelPromise = resolve;\n  });\n\n  function pullAlgorithm(): Promise<void> {\n    if (reading) {\n      readAgain = true;\n      return promiseResolvedWith(undefined);\n    }\n\n    reading = true;\n\n    const readRequest: ReadRequest<R> = {\n      _chunkSteps: chunk => {\n        // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n        // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n        // successful synchronously-available reads get ahead of asynchronously-available errors.\n        queueMicrotask(() => {\n          readAgain = false;\n          const chunk1 = chunk;\n          const chunk2 = chunk;\n\n          // There is no way to access the cloning code right now in the reference implementation.\n          // If we add one then we'll need an implementation for serializable objects.\n          // if (!canceled2 && cloneForBranch2) {\n          //   chunk2 = StructuredDeserialize(StructuredSerialize(chunk2));\n          // }\n\n          if (!canceled1) {\n            ReadableStreamDefaultControllerEnqueue(\n              branch1._readableStreamController as ReadableStreamDefaultController<R>,\n              chunk1\n            );\n          }\n          if (!canceled2) {\n            ReadableStreamDefaultControllerEnqueue(\n              branch2._readableStreamController as ReadableStreamDefaultController<R>,\n              chunk2\n            );\n          }\n\n          reading = false;\n          if (readAgain) {\n            pullAlgorithm();\n          }\n        });\n      },\n      _closeSteps: () => {\n        reading = false;\n        if (!canceled1) {\n          ReadableStreamDefaultControllerClose(branch1._readableStreamController as ReadableStreamDefaultController<R>);\n        }\n        if (!canceled2) {\n          ReadableStreamDefaultControllerClose(branch2._readableStreamController as ReadableStreamDefaultController<R>);\n        }\n\n        if (!canceled1 || !canceled2) {\n          resolveCancelPromise(undefined);\n        }\n      },\n      _errorSteps: () => {\n        reading = false;\n      }\n    };\n    ReadableStreamDefaultReaderRead(reader, readRequest);\n\n    return promiseResolvedWith(undefined);\n  }\n\n  function cancel1Algorithm(reason: any): Promise<void> {\n    canceled1 = true;\n    reason1 = reason;\n    if (canceled2) {\n      const compositeReason = CreateArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function cancel2Algorithm(reason: any): Promise<void> {\n    canceled2 = true;\n    reason2 = reason;\n    if (canceled1) {\n      const compositeReason = CreateArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function startAlgorithm() {\n    // do nothing\n  }\n\n  branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);\n  branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);\n\n  uponRejection(reader._closedPromise, (r: any) => {\n    ReadableStreamDefaultControllerError(branch1._readableStreamController as ReadableStreamDefaultController<R>, r);\n    ReadableStreamDefaultControllerError(branch2._readableStreamController as ReadableStreamDefaultController<R>, r);\n    if (!canceled1 || !canceled2) {\n      resolveCancelPromise(undefined);\n    }\n  });\n\n  return [branch1, branch2];\n}\n\nexport function ReadableByteStreamTee(stream: ReadableByteStream): [ReadableByteStream, ReadableByteStream] {\n  assert(IsReadableStream(stream));\n  assert(IsReadableByteStreamController(stream._readableStreamController));\n\n  let reader: ReadableStreamReader<Uint8Array> = AcquireReadableStreamDefaultReader(stream);\n  let reading = false;\n  let readAgainForBranch1 = false;\n  let readAgainForBranch2 = false;\n  let canceled1 = false;\n  let canceled2 = false;\n  let reason1: any;\n  let reason2: any;\n  let branch1: ReadableByteStream;\n  let branch2: ReadableByteStream;\n\n  let resolveCancelPromise: (value: undefined | Promise<undefined>) => void;\n  const cancelPromise = newPromise<void>(resolve => {\n    resolveCancelPromise = resolve;\n  });\n\n  function forwardReaderError(thisReader: ReadableStreamReader<Uint8Array>) {\n    uponRejection(thisReader._closedPromise, r => {\n      if (thisReader !== reader) {\n        return;\n      }\n      ReadableByteStreamControllerError(branch1._readableStreamController, r);\n      ReadableByteStreamControllerError(branch2._readableStreamController, r);\n      if (!canceled1 || !canceled2) {\n        resolveCancelPromise(undefined);\n      }\n    });\n  }\n\n  function pullWithDefaultReader() {\n    if (IsReadableStreamBYOBReader(reader)) {\n      assert(reader._readIntoRequests.length === 0);\n      ReadableStreamReaderGenericRelease(reader);\n\n      reader = AcquireReadableStreamDefaultReader(stream);\n      forwardReaderError(reader);\n    }\n\n    const readRequest: ReadRequest<Uint8Array> = {\n      _chunkSteps: chunk => {\n        // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n        // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n        // successful synchronously-available reads get ahead of asynchronously-available errors.\n        queueMicrotask(() => {\n          readAgainForBranch1 = false;\n          readAgainForBranch2 = false;\n\n          const chunk1 = chunk;\n          let chunk2 = chunk;\n          if (!canceled1 && !canceled2) {\n            try {\n              chunk2 = CloneAsUint8Array(chunk);\n            } catch (cloneE) {\n              ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);\n              ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);\n              resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n              return;\n            }\n          }\n\n          if (!canceled1) {\n            ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);\n          }\n          if (!canceled2) {\n            ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);\n          }\n\n          reading = false;\n          if (readAgainForBranch1) {\n            pull1Algorithm();\n          } else if (readAgainForBranch2) {\n            pull2Algorithm();\n          }\n        });\n      },\n      _closeSteps: () => {\n        reading = false;\n        if (!canceled1) {\n          ReadableByteStreamControllerClose(branch1._readableStreamController);\n        }\n        if (!canceled2) {\n          ReadableByteStreamControllerClose(branch2._readableStreamController);\n        }\n        if (branch1._readableStreamController._pendingPullIntos.length > 0) {\n          ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);\n        }\n        if (branch2._readableStreamController._pendingPullIntos.length > 0) {\n          ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);\n        }\n        if (!canceled1 || !canceled2) {\n          resolveCancelPromise(undefined);\n        }\n      },\n      _errorSteps: () => {\n        reading = false;\n      }\n    };\n    ReadableStreamDefaultReaderRead(reader, readRequest);\n  }\n\n  function pullWithBYOBReader(view: ArrayBufferView, forBranch2: boolean) {\n    if (IsReadableStreamDefaultReader<Uint8Array>(reader)) {\n      assert(reader._readRequests.length === 0);\n      ReadableStreamReaderGenericRelease(reader);\n\n      reader = AcquireReadableStreamBYOBReader(stream);\n      forwardReaderError(reader);\n    }\n\n    const byobBranch = forBranch2 ? branch2 : branch1;\n    const otherBranch = forBranch2 ? branch1 : branch2;\n\n    const readIntoRequest: ReadIntoRequest<ArrayBufferView> = {\n      _chunkSteps: chunk => {\n        // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n        // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n        // successful synchronously-available reads get ahead of asynchronously-available errors.\n        queueMicrotask(() => {\n          readAgainForBranch1 = false;\n          readAgainForBranch2 = false;\n\n          const byobCanceled = forBranch2 ? canceled2 : canceled1;\n          const otherCanceled = forBranch2 ? canceled1 : canceled2;\n\n          if (!otherCanceled) {\n            let clonedChunk;\n            try {\n              clonedChunk = CloneAsUint8Array(chunk);\n            } catch (cloneE) {\n              ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);\n              ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);\n              resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n              return;\n            }\n            if (!byobCanceled) {\n              ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n            }\n            ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);\n          } else if (!byobCanceled) {\n            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n          }\n\n          reading = false;\n          if (readAgainForBranch1) {\n            pull1Algorithm();\n          } else if (readAgainForBranch2) {\n            pull2Algorithm();\n          }\n        });\n      },\n      _closeSteps: chunk => {\n        reading = false;\n\n        const byobCanceled = forBranch2 ? canceled2 : canceled1;\n        const otherCanceled = forBranch2 ? canceled1 : canceled2;\n\n        if (!byobCanceled) {\n          ReadableByteStreamControllerClose(byobBranch._readableStreamController);\n        }\n        if (!otherCanceled) {\n          ReadableByteStreamControllerClose(otherBranch._readableStreamController);\n        }\n\n        if (chunk !== undefined) {\n          assert(chunk.byteLength === 0);\n\n          if (!byobCanceled) {\n            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n          }\n          if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {\n            ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);\n          }\n        }\n\n        if (!byobCanceled || !otherCanceled) {\n          resolveCancelPromise(undefined);\n        }\n      },\n      _errorSteps: () => {\n        reading = false;\n      }\n    };\n    ReadableStreamBYOBReaderRead(reader, view, readIntoRequest);\n  }\n\n  function pull1Algorithm(): Promise<void> {\n    if (reading) {\n      readAgainForBranch1 = true;\n      return promiseResolvedWith(undefined);\n    }\n\n    reading = true;\n\n    const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);\n    if (byobRequest === null) {\n      pullWithDefaultReader();\n    } else {\n      pullWithBYOBReader(byobRequest._view!, false);\n    }\n\n    return promiseResolvedWith(undefined);\n  }\n\n  function pull2Algorithm(): Promise<void> {\n    if (reading) {\n      readAgainForBranch2 = true;\n      return promiseResolvedWith(undefined);\n    }\n\n    reading = true;\n\n    const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);\n    if (byobRequest === null) {\n      pullWithDefaultReader();\n    } else {\n      pullWithBYOBReader(byobRequest._view!, true);\n    }\n\n    return promiseResolvedWith(undefined);\n  }\n\n  function cancel1Algorithm(reason: any): Promise<void> {\n    canceled1 = true;\n    reason1 = reason;\n    if (canceled2) {\n      const compositeReason = CreateArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function cancel2Algorithm(reason: any): Promise<void> {\n    canceled2 = true;\n    reason2 = reason;\n    if (canceled1) {\n      const compositeReason = CreateArrayFromList([reason1, reason2]);\n      const cancelResult = ReadableStreamCancel(stream, compositeReason);\n      resolveCancelPromise(cancelResult);\n    }\n    return cancelPromise;\n  }\n\n  function startAlgorithm(): void {\n    return;\n  }\n\n  branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);\n  branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);\n\n  forwardReaderError(reader);\n\n  return [branch1, branch2];\n}\n","import { assertDictionary, assertFunction, convertUnsignedLongLongWithEnforceRange } from './basic';\nimport {\n  ReadableStreamController,\n  UnderlyingByteSource,\n  UnderlyingDefaultOrByteSource,\n  UnderlyingDefaultOrByteSourcePullCallback,\n  UnderlyingDefaultOrByteSourceStartCallback,\n  UnderlyingSource,\n  UnderlyingSourceCancelCallback,\n  ValidatedUnderlyingDefaultOrByteSource\n} from '../readable-stream/underlying-source';\nimport { promiseCall, reflectCall } from '../helpers/webidl';\n\nexport function convertUnderlyingDefaultOrByteSource<R>(\n  source: UnderlyingSource<R> | UnderlyingByteSource | null,\n  context: string\n): ValidatedUnderlyingDefaultOrByteSource<R> {\n  assertDictionary(source, context);\n  const original = source as (UnderlyingDefaultOrByteSource<R> | null);\n  const autoAllocateChunkSize = original?.autoAllocateChunkSize;\n  const cancel = original?.cancel;\n  const pull = original?.pull;\n  const start = original?.start;\n  const type = original?.type;\n  return {\n    autoAllocateChunkSize: autoAllocateChunkSize === undefined ?\n      undefined :\n      convertUnsignedLongLongWithEnforceRange(\n        autoAllocateChunkSize,\n        `${context} has member 'autoAllocateChunkSize' that`\n      ),\n    cancel: cancel === undefined ?\n      undefined :\n      convertUnderlyingSourceCancelCallback(cancel, original!, `${context} has member 'cancel' that`),\n    pull: pull === undefined ?\n      undefined :\n      convertUnderlyingSourcePullCallback(pull, original!, `${context} has member 'pull' that`),\n    start: start === undefined ?\n      undefined :\n      convertUnderlyingSourceStartCallback(start, original!, `${context} has member 'start' that`),\n    type: type === undefined ? undefined : convertReadableStreamType(type, `${context} has member 'type' that`)\n  };\n}\n\nfunction convertUnderlyingSourceCancelCallback(\n  fn: UnderlyingSourceCancelCallback,\n  original: UnderlyingDefaultOrByteSource,\n  context: string\n): (reason: any) => Promise<void> {\n  assertFunction(fn, context);\n  return (reason: any) => promiseCall(fn, original, [reason]);\n}\n\nfunction convertUnderlyingSourcePullCallback<R>(\n  fn: UnderlyingDefaultOrByteSourcePullCallback<R>,\n  original: UnderlyingDefaultOrByteSource<R>,\n  context: string\n): (controller: ReadableStreamController<R>) => Promise<void> {\n  assertFunction(fn, context);\n  return (controller: ReadableStreamController<R>) => promiseCall(fn, original, [controller]);\n}\n\nfunction convertUnderlyingSourceStartCallback<R>(\n  fn: UnderlyingDefaultOrByteSourceStartCallback<R>,\n  original: UnderlyingDefaultOrByteSource<R>,\n  context: string\n): UnderlyingDefaultOrByteSourceStartCallback<R> {\n  assertFunction(fn, context);\n  return (controller: ReadableStreamController<R>) => reflectCall(fn, original, [controller]);\n}\n\nfunction convertReadableStreamType(type: string, context: string): 'bytes' {\n  type = `${type}`;\n  if (type !== 'bytes') {\n    throw new TypeError(`${context} '${type}' is not a valid enumeration value for ReadableStreamType`);\n  }\n  return type;\n}\n","import { assertDictionary } from './basic';\nimport { ReadableStreamGetReaderOptions } from '../readable-stream/reader-options';\n\nexport function convertReaderOptions(options: ReadableStreamGetReaderOptions | null | undefined,\n                                     context: string): ReadableStreamGetReaderOptions {\n  assertDictionary(options, context);\n  const mode = options?.mode;\n  return {\n    mode: mode === undefined ? undefined : convertReadableStreamReaderMode(mode, `${context} has member 'mode' that`)\n  };\n}\n\nfunction convertReadableStreamReaderMode(mode: string, context: string): 'byob' {\n  mode = `${mode}`;\n  if (mode !== 'byob') {\n    throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);\n  }\n  return mode;\n}\n","import { assertDictionary } from './basic';\nimport {\n  ReadableStreamIteratorOptions,\n  ValidatedReadableStreamIteratorOptions\n} from '../readable-stream/iterator-options';\n\nexport function convertIteratorOptions(options: ReadableStreamIteratorOptions | null | undefined,\n                                       context: string): ValidatedReadableStreamIteratorOptions {\n  assertDictionary(options, context);\n  const preventCancel = options?.preventCancel;\n  return { preventCancel: Boolean(preventCancel) };\n}\n","import { assertDictionary } from './basic';\nimport { StreamPipeOptions, ValidatedStreamPipeOptions } from '../readable-stream/pipe-options';\nimport { AbortSignal, isAbortSignal } from '../abort-signal';\n\nexport function convertPipeOptions(options: StreamPipeOptions | null | undefined,\n                                   context: string): ValidatedStreamPipeOptions {\n  assertDictionary(options, context);\n  const preventAbort = options?.preventAbort;\n  const preventCancel = options?.preventCancel;\n  const preventClose = options?.preventClose;\n  const signal = options?.signal;\n  if (signal !== undefined) {\n    assertAbortSignal(signal, `${context} has member 'signal' that`);\n  }\n  return {\n    preventAbort: Boolean(preventAbort),\n    preventCancel: Boolean(preventCancel),\n    preventClose: Boolean(preventClose),\n    signal\n  };\n}\n\nfunction assertAbortSignal(signal: unknown, context: string): asserts signal is AbortSignal {\n  if (!isAbortSignal(signal)) {\n    throw new TypeError(`${context} is not an AbortSignal.`);\n  }\n}\n","import { assertDictionary, assertRequiredField } from './basic';\nimport { ReadableStream } from '../readable-stream';\nimport { WritableStream } from '../writable-stream';\nimport { assertReadableStream } from './readable-stream';\nimport { assertWritableStream } from './writable-stream';\n\nexport function convertReadableWritablePair<RS extends ReadableStream, WS extends WritableStream>(\n  pair: { readable: RS; writable: WS } | null | undefined,\n  context: string\n): { readable: RS; writable: WS } {\n  assertDictionary(pair, context);\n\n  const readable = pair?.readable;\n  assertRequiredField(readable, 'readable', 'ReadableWritablePair');\n  assertReadableStream(readable, `${context} has member 'readable' that`);\n\n  const writable = pair?.writable;\n  assertRequiredField(writable, 'writable', 'ReadableWritablePair');\n  assertWritableStream(writable, `${context} has member 'writable' that`);\n\n  return { readable, writable };\n}\n","import assert from '../stub/assert';\nimport {\n  promiseRejectedWith,\n  promiseResolvedWith,\n  setPromiseIsHandledToTrue,\n  transformPromiseWith\n} from './helpers/webidl';\nimport { QueuingStrategy, QueuingStrategySizeCallback } from './queuing-strategy';\nimport { AcquireReadableStreamAsyncIterator, ReadableStreamAsyncIterator } from './readable-stream/async-iterator';\nimport { defaultReaderClosedPromiseReject, defaultReaderClosedPromiseResolve } from './readable-stream/generic-reader';\nimport {\n  AcquireReadableStreamDefaultReader,\n  IsReadableStreamDefaultReader,\n  ReadableStreamDefaultReader,\n  ReadableStreamDefaultReadResult\n} from './readable-stream/default-reader';\nimport {\n  AcquireReadableStreamBYOBReader,\n  IsReadableStreamBYOBReader,\n  ReadableStreamBYOBReader,\n  ReadableStreamBYOBReadResult\n} from './readable-stream/byob-reader';\nimport { ReadableStreamPipeTo } from './readable-stream/pipe';\nimport { ReadableStreamTee } from './readable-stream/tee';\nimport { IsWritableStream, IsWritableStreamLocked, WritableStream } from './writable-stream';\nimport { SimpleQueue } from './simple-queue';\nimport {\n  ReadableByteStreamController,\n  ReadableStreamBYOBRequest,\n  SetUpReadableByteStreamController,\n  SetUpReadableByteStreamControllerFromUnderlyingSource\n} from './readable-stream/byte-stream-controller';\nimport {\n  ReadableStreamDefaultController,\n  SetUpReadableStreamDefaultController,\n  SetUpReadableStreamDefaultControllerFromUnderlyingSource\n} from './readable-stream/default-controller';\nimport {\n  UnderlyingByteSource,\n  UnderlyingByteSourcePullCallback,\n  UnderlyingByteSourceStartCallback,\n  UnderlyingSource,\n  UnderlyingSourceCancelCallback,\n  UnderlyingSourcePullCallback,\n  UnderlyingSourceStartCallback\n} from './readable-stream/underlying-source';\nimport { noop } from '../utils';\nimport { typeIsObject } from './helpers/miscellaneous';\nimport { CreateArrayFromList } from './abstract-ops/ecmascript';\nimport { CancelSteps } from './abstract-ops/internal-methods';\nimport { IsNonNegativeNumber } from './abstract-ops/miscellaneous';\nimport { assertObject, assertRequiredArgument } from './validators/basic';\nimport { convertQueuingStrategy } from './validators/queuing-strategy';\nimport { ExtractHighWaterMark, ExtractSizeAlgorithm } from './abstract-ops/queuing-strategy';\nimport { convertUnderlyingDefaultOrByteSource } from './validators/underlying-source';\nimport { ReadableStreamGetReaderOptions } from './readable-stream/reader-options';\nimport { convertReaderOptions } from './validators/reader-options';\nimport { StreamPipeOptions, ValidatedStreamPipeOptions } from './readable-stream/pipe-options';\nimport { ReadableStreamIteratorOptions } from './readable-stream/iterator-options';\nimport { convertIteratorOptions } from './validators/iterator-options';\nimport { convertPipeOptions } from './validators/pipe-options';\nimport { ReadableWritablePair } from './readable-stream/readable-writable-pair';\nimport { convertReadableWritablePair } from './validators/readable-writable-pair';\n\nexport type ReadableByteStream = ReadableStream<Uint8Array> & {\n  _readableStreamController: ReadableByteStreamController\n};\n\ntype ReadableStreamState = 'readable' | 'closed' | 'errored';\n\n/**\n * A readable stream represents a source of data, from which you can read.\n *\n * @public\n */\nexport class ReadableStream<R = any> {\n  /** @internal */\n  _state!: ReadableStreamState;\n  /** @internal */\n  _reader: ReadableStreamReader<R> | undefined;\n  /** @internal */\n  _storedError: any;\n  /** @internal */\n  _disturbed!: boolean;\n  /** @internal */\n  _readableStreamController!: ReadableStreamDefaultController<R> | ReadableByteStreamController;\n\n  constructor(underlyingSource: UnderlyingByteSource, strategy?: { highWaterMark?: number; size?: undefined });\n  constructor(underlyingSource?: UnderlyingSource<R>, strategy?: QueuingStrategy<R>);\n  constructor(rawUnderlyingSource: UnderlyingSource<R> | UnderlyingByteSource | null | undefined = {},\n              rawStrategy: QueuingStrategy<R> | null | undefined = {}) {\n    if (rawUnderlyingSource === undefined) {\n      rawUnderlyingSource = null;\n    } else {\n      assertObject(rawUnderlyingSource, 'First parameter');\n    }\n\n    const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n    const underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, 'First parameter');\n\n    InitializeReadableStream(this);\n\n    if (underlyingSource.type === 'bytes') {\n      if (strategy.size !== undefined) {\n        throw new RangeError('The strategy for a byte stream cannot have a size function');\n      }\n      const highWaterMark = ExtractHighWaterMark(strategy, 0);\n      SetUpReadableByteStreamControllerFromUnderlyingSource(\n        this as unknown as ReadableByteStream,\n        underlyingSource,\n        highWaterMark\n      );\n    } else {\n      assert(underlyingSource.type === undefined);\n      const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n      const highWaterMark = ExtractHighWaterMark(strategy, 1);\n      SetUpReadableStreamDefaultControllerFromUnderlyingSource(\n        this,\n        underlyingSource,\n        highWaterMark,\n        sizeAlgorithm\n      );\n    }\n  }\n\n  /**\n   * Whether or not the readable stream is locked to a {@link ReadableStreamDefaultReader | reader}.\n   */\n  get locked(): boolean {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('locked');\n    }\n\n    return IsReadableStreamLocked(this);\n  }\n\n  /**\n   * Cancels the stream, signaling a loss of interest in the stream by a consumer.\n   *\n   * The supplied `reason` argument will be given to the underlying source's {@link UnderlyingSource.cancel | cancel()}\n   * method, which might or might not use it.\n   */\n  cancel(reason: any = undefined): Promise<void> {\n    if (!IsReadableStream(this)) {\n      return promiseRejectedWith(streamBrandCheckException('cancel'));\n    }\n\n    if (IsReadableStreamLocked(this)) {\n      return promiseRejectedWith(new TypeError('Cannot cancel a stream that already has a reader'));\n    }\n\n    return ReadableStreamCancel(this, reason);\n  }\n\n  /**\n   * Creates a {@link ReadableStreamBYOBReader} and locks the stream to the new reader.\n   *\n   * This call behaves the same way as the no-argument variant, except that it only works on readable byte streams,\n   * i.e. streams which were constructed specifically with the ability to handle \"bring your own buffer\" reading.\n   * The returned BYOB reader provides the ability to directly read individual chunks from the stream via its\n   * {@link ReadableStreamBYOBReader.read | read()} method, into developer-supplied buffers, allowing more precise\n   * control over allocation.\n   */\n  getReader({ mode }: { mode: 'byob' }): ReadableStreamBYOBReader;\n  /**\n   * Creates a {@link ReadableStreamDefaultReader} and locks the stream to the new reader.\n   * While the stream is locked, no other reader can be acquired until this one is released.\n   *\n   * This functionality is especially useful for creating abstractions that desire the ability to consume a stream\n   * in its entirety. By getting a reader for the stream, you can ensure nobody else can interleave reads with yours\n   * or cancel the stream, which would interfere with your abstraction.\n   */\n  getReader(): ReadableStreamDefaultReader<R>;\n  getReader(\n    rawOptions: ReadableStreamGetReaderOptions | null | undefined = undefined\n  ): ReadableStreamDefaultReader<R> | ReadableStreamBYOBReader {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('getReader');\n    }\n\n    const options = convertReaderOptions(rawOptions, 'First parameter');\n\n    if (options.mode === undefined) {\n      return AcquireReadableStreamDefaultReader(this);\n    }\n\n    assert(options.mode === 'byob');\n    return AcquireReadableStreamBYOBReader(this as unknown as ReadableByteStream);\n  }\n\n  /**\n   * Provides a convenient, chainable way of piping this readable stream through a transform stream\n   * (or any other `{ writable, readable }` pair). It simply {@link ReadableStream.pipeTo | pipes} the stream\n   * into the writable side of the supplied pair, and returns the readable side for further use.\n   *\n   * Piping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n   */\n  pipeThrough<RS extends ReadableStream>(\n    transform: { readable: RS; writable: WritableStream<R> },\n    options?: StreamPipeOptions\n  ): RS;\n  pipeThrough<RS extends ReadableStream>(\n    rawTransform: { readable: RS; writable: WritableStream<R> } | null | undefined,\n    rawOptions: StreamPipeOptions | null | undefined = {}\n  ): RS {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('pipeThrough');\n    }\n    assertRequiredArgument(rawTransform, 1, 'pipeThrough');\n\n    const transform = convertReadableWritablePair(rawTransform, 'First parameter');\n    const options = convertPipeOptions(rawOptions, 'Second parameter');\n\n    if (IsReadableStreamLocked(this)) {\n      throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream');\n    }\n    if (IsWritableStreamLocked(transform.writable)) {\n      throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream');\n    }\n\n    const promise = ReadableStreamPipeTo(\n      this, transform.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal\n    );\n\n    setPromiseIsHandledToTrue(promise);\n\n    return transform.readable;\n  }\n\n  /**\n   * Pipes this readable stream to a given writable stream. The way in which the piping process behaves under\n   * various error conditions can be customized with a number of passed options. It returns a promise that fulfills\n   * when the piping process completes successfully, or rejects if any errors were encountered.\n   *\n   * Piping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n   */\n  pipeTo(destination: WritableStream<R>, options?: StreamPipeOptions): Promise<void>;\n  pipeTo(destination: WritableStream<R> | null | undefined,\n         rawOptions: StreamPipeOptions | null | undefined = {}): Promise<void> {\n    if (!IsReadableStream(this)) {\n      return promiseRejectedWith(streamBrandCheckException('pipeTo'));\n    }\n\n    if (destination === undefined) {\n      return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`);\n    }\n    if (!IsWritableStream(destination)) {\n      return promiseRejectedWith(\n        new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`)\n      );\n    }\n\n    let options: ValidatedStreamPipeOptions;\n    try {\n      options = convertPipeOptions(rawOptions, 'Second parameter');\n    } catch (e) {\n      return promiseRejectedWith(e);\n    }\n\n    if (IsReadableStreamLocked(this)) {\n      return promiseRejectedWith(\n        new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream')\n      );\n    }\n    if (IsWritableStreamLocked(destination)) {\n      return promiseRejectedWith(\n        new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream')\n      );\n    }\n\n    return ReadableStreamPipeTo<R>(\n      this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal\n    );\n  }\n\n  /**\n   * Tees this readable stream, returning a two-element array containing the two resulting branches as\n   * new {@link ReadableStream} instances.\n   *\n   * Teeing a stream will lock it, preventing any other consumer from acquiring a reader.\n   * To cancel the stream, cancel both of the resulting branches; a composite cancellation reason will then be\n   * propagated to the stream's underlying source.\n   *\n   * Note that the chunks seen in each branch will be the same object. If the chunks are not immutable,\n   * this could allow interference between the two branches.\n   */\n  tee(): [ReadableStream<R>, ReadableStream<R>] {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('tee');\n    }\n\n    const branches = ReadableStreamTee(this, false);\n    return CreateArrayFromList(branches);\n  }\n\n  /**\n   * Asynchronously iterates over the chunks in the stream's internal queue.\n   *\n   * Asynchronously iterating over the stream will lock it, preventing any other consumer from acquiring a reader.\n   * The lock will be released if the async iterator's {@link ReadableStreamAsyncIterator.return | return()} method\n   * is called, e.g. by breaking out of the loop.\n   *\n   * By default, calling the async iterator's {@link ReadableStreamAsyncIterator.return | return()} method will also\n   * cancel the stream. To prevent this, use the stream's {@link ReadableStream.values | values()} method, passing\n   * `true` for the `preventCancel` option.\n   */\n  values(options?: ReadableStreamIteratorOptions): ReadableStreamAsyncIterator<R>;\n  values(rawOptions: ReadableStreamIteratorOptions | null | undefined = undefined): ReadableStreamAsyncIterator<R> {\n    if (!IsReadableStream(this)) {\n      throw streamBrandCheckException('values');\n    }\n\n    const options = convertIteratorOptions(rawOptions, 'First parameter');\n    return AcquireReadableStreamAsyncIterator<R>(this, options.preventCancel);\n  }\n\n  /**\n   * {@inheritDoc ReadableStream.values}\n   */\n  [Symbol.asyncIterator]: (options?: ReadableStreamIteratorOptions) => ReadableStreamAsyncIterator<R>;\n}\n\nObject.defineProperties(ReadableStream.prototype, {\n  cancel: { enumerable: true },\n  getReader: { enumerable: true },\n  pipeThrough: { enumerable: true },\n  pipeTo: { enumerable: true },\n  tee: { enumerable: true },\n  values: { enumerable: true },\n  locked: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ReadableStream.prototype, Symbol.toStringTag, {\n    value: 'ReadableStream',\n    configurable: true\n  });\n}\nif (typeof Symbol.asyncIterator === 'symbol') {\n  Object.defineProperty(ReadableStream.prototype, Symbol.asyncIterator, {\n    value: ReadableStream.prototype.values,\n    writable: true,\n    configurable: true\n  });\n}\n\nexport {\n  ReadableStreamAsyncIterator,\n  ReadableStreamDefaultReadResult,\n  ReadableStreamBYOBReadResult,\n  UnderlyingByteSource,\n  UnderlyingSource,\n  UnderlyingSourceStartCallback,\n  UnderlyingSourcePullCallback,\n  UnderlyingSourceCancelCallback,\n  UnderlyingByteSourceStartCallback,\n  UnderlyingByteSourcePullCallback,\n  StreamPipeOptions,\n  ReadableWritablePair,\n  ReadableStreamIteratorOptions\n};\n\n// Abstract operations for the ReadableStream.\n\n// Throws if and only if startAlgorithm throws.\nexport function CreateReadableStream<R>(startAlgorithm: () => void | PromiseLike<void>,\n                                        pullAlgorithm: () => Promise<void>,\n                                        cancelAlgorithm: (reason: any) => Promise<void>,\n                                        highWaterMark = 1,\n                                        sizeAlgorithm: QueuingStrategySizeCallback<R> = () => 1): ReadableStream<R> {\n  assert(IsNonNegativeNumber(highWaterMark));\n\n  const stream: ReadableStream<R> = Object.create(ReadableStream.prototype);\n  InitializeReadableStream(stream);\n\n  const controller: ReadableStreamDefaultController<R> = Object.create(ReadableStreamDefaultController.prototype);\n  SetUpReadableStreamDefaultController(\n    stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm\n  );\n\n  return stream;\n}\n\n// Throws if and only if startAlgorithm throws.\nexport function CreateReadableByteStream(\n  startAlgorithm: () => void | PromiseLike<void>,\n  pullAlgorithm: () => Promise<void>,\n  cancelAlgorithm: (reason: any) => Promise<void>\n): ReadableByteStream {\n  const stream: ReadableByteStream = Object.create(ReadableStream.prototype);\n  InitializeReadableStream(stream);\n\n  const controller: ReadableByteStreamController = Object.create(ReadableByteStreamController.prototype);\n  SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, undefined);\n\n  return stream;\n}\n\nfunction InitializeReadableStream(stream: ReadableStream) {\n  stream._state = 'readable';\n  stream._reader = undefined;\n  stream._storedError = undefined;\n  stream._disturbed = false;\n}\n\nexport function IsReadableStream(x: unknown): x is ReadableStream {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n    return false;\n  }\n\n  return x instanceof ReadableStream;\n}\n\nexport function IsReadableStreamDisturbed(stream: ReadableStream): boolean {\n  assert(IsReadableStream(stream));\n\n  return stream._disturbed;\n}\n\nexport function IsReadableStreamLocked(stream: ReadableStream): boolean {\n  assert(IsReadableStream(stream));\n\n  if (stream._reader === undefined) {\n    return false;\n  }\n\n  return true;\n}\n\n// ReadableStream API exposed for controllers.\n\nexport function ReadableStreamCancel<R>(stream: ReadableStream<R>, reason: any): Promise<undefined> {\n  stream._disturbed = true;\n\n  if (stream._state === 'closed') {\n    return promiseResolvedWith(undefined);\n  }\n  if (stream._state === 'errored') {\n    return promiseRejectedWith(stream._storedError);\n  }\n\n  ReadableStreamClose(stream);\n\n  const reader = stream._reader;\n  if (reader !== undefined && IsReadableStreamBYOBReader(reader)) {\n    reader._readIntoRequests.forEach(readIntoRequest => {\n      readIntoRequest._closeSteps(undefined);\n    });\n    reader._readIntoRequests = new SimpleQueue();\n  }\n\n  const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);\n  return transformPromiseWith(sourceCancelPromise, noop);\n}\n\nexport function ReadableStreamClose<R>(stream: ReadableStream<R>): void {\n  assert(stream._state === 'readable');\n\n  stream._state = 'closed';\n\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return;\n  }\n\n  defaultReaderClosedPromiseResolve(reader);\n\n  if (IsReadableStreamDefaultReader<R>(reader)) {\n    reader._readRequests.forEach(readRequest => {\n      readRequest._closeSteps();\n    });\n    reader._readRequests = new SimpleQueue();\n  }\n}\n\nexport function ReadableStreamError<R>(stream: ReadableStream<R>, e: any): void {\n  assert(IsReadableStream(stream));\n  assert(stream._state === 'readable');\n\n  stream._state = 'errored';\n  stream._storedError = e;\n\n  const reader = stream._reader;\n\n  if (reader === undefined) {\n    return;\n  }\n\n  defaultReaderClosedPromiseReject(reader, e);\n\n  if (IsReadableStreamDefaultReader<R>(reader)) {\n    reader._readRequests.forEach(readRequest => {\n      readRequest._errorSteps(e);\n    });\n\n    reader._readRequests = new SimpleQueue();\n  } else {\n    assert(IsReadableStreamBYOBReader(reader));\n\n    reader._readIntoRequests.forEach(readIntoRequest => {\n      readIntoRequest._errorSteps(e);\n    });\n\n    reader._readIntoRequests = new SimpleQueue();\n  }\n}\n\n// Readers\n\nexport type ReadableStreamReader<R> = ReadableStreamDefaultReader<R> | ReadableStreamBYOBReader;\n\nexport {\n  ReadableStreamDefaultReader,\n  ReadableStreamBYOBReader\n};\n\n// Controllers\n\nexport {\n  ReadableStreamDefaultController,\n  ReadableStreamBYOBRequest,\n  ReadableByteStreamController\n};\n\n// Helper functions for the ReadableStream.\n\nfunction streamBrandCheckException(name: string): TypeError {\n  return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);\n}\n","import { QueuingStrategyInit } from '../queuing-strategy';\nimport { assertDictionary, assertRequiredField, convertUnrestrictedDouble } from './basic';\n\nexport function convertQueuingStrategyInit(init: QueuingStrategyInit | null | undefined,\n                                           context: string): QueuingStrategyInit {\n  assertDictionary(init, context);\n  const highWaterMark = init?.highWaterMark;\n  assertRequiredField(highWaterMark, 'highWaterMark', 'QueuingStrategyInit');\n  return {\n    highWaterMark: convertUnrestrictedDouble(highWaterMark)\n  };\n}\n","import { QueuingStrategy, QueuingStrategyInit } from './queuing-strategy';\nimport { typeIsObject } from './helpers/miscellaneous';\nimport { assertRequiredArgument } from './validators/basic';\nimport { convertQueuingStrategyInit } from './validators/queuing-strategy-init';\n\n// The size function must not have a prototype property nor be a constructor\nconst byteLengthSizeFunction = (chunk: ArrayBufferView): number => {\n  return chunk.byteLength;\n};\ntry {\n  Object.defineProperty(byteLengthSizeFunction, 'name', {\n    value: 'size',\n    configurable: true\n  });\n} catch {\n  // This property is non-configurable in older browsers, so ignore if this throws.\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n}\n\n/**\n * A queuing strategy that counts the number of bytes in each chunk.\n *\n * @public\n */\nexport default class ByteLengthQueuingStrategy implements QueuingStrategy<ArrayBufferView> {\n  /** @internal */\n  readonly _byteLengthQueuingStrategyHighWaterMark: number;\n\n  constructor(options: QueuingStrategyInit) {\n    assertRequiredArgument(options, 1, 'ByteLengthQueuingStrategy');\n    options = convertQueuingStrategyInit(options, 'First parameter');\n    this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;\n  }\n\n  /**\n   * Returns the high water mark provided to the constructor.\n   */\n  get highWaterMark(): number {\n    if (!IsByteLengthQueuingStrategy(this)) {\n      throw byteLengthBrandCheckException('highWaterMark');\n    }\n    return this._byteLengthQueuingStrategyHighWaterMark;\n  }\n\n  /**\n   * Measures the size of `chunk` by returning the value of its `byteLength` property.\n   */\n  get size(): (chunk: ArrayBufferView) => number {\n    if (!IsByteLengthQueuingStrategy(this)) {\n      throw byteLengthBrandCheckException('size');\n    }\n    return byteLengthSizeFunction;\n  }\n}\n\nObject.defineProperties(ByteLengthQueuingStrategy.prototype, {\n  highWaterMark: { enumerable: true },\n  size: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(ByteLengthQueuingStrategy.prototype, Symbol.toStringTag, {\n    value: 'ByteLengthQueuingStrategy',\n    configurable: true\n  });\n}\n\n// Helper functions for the ByteLengthQueuingStrategy.\n\nfunction byteLengthBrandCheckException(name: string): TypeError {\n  return new TypeError(`ByteLengthQueuingStrategy.prototype.${name} can only be used on a ByteLengthQueuingStrategy`);\n}\n\nexport function IsByteLengthQueuingStrategy(x: any): x is ByteLengthQueuingStrategy {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_byteLengthQueuingStrategyHighWaterMark')) {\n    return false;\n  }\n\n  return x instanceof ByteLengthQueuingStrategy;\n}\n","import { QueuingStrategy, QueuingStrategyInit } from './queuing-strategy';\nimport { typeIsObject } from './helpers/miscellaneous';\nimport { assertRequiredArgument } from './validators/basic';\nimport { convertQueuingStrategyInit } from './validators/queuing-strategy-init';\n\n// The size function must not have a prototype property nor be a constructor\nconst countSizeFunction = (): 1 => {\n  return 1;\n};\ntry {\n  Object.defineProperty(countSizeFunction, 'name', {\n    value: 'size',\n    configurable: true\n  });\n} catch {\n  // This property is non-configurable in older browsers, so ignore if this throws.\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n}\n\n/**\n * A queuing strategy that counts the number of chunks.\n *\n * @public\n */\nexport default class CountQueuingStrategy implements QueuingStrategy<any> {\n  /** @internal */\n  readonly _countQueuingStrategyHighWaterMark!: number;\n\n  constructor(options: QueuingStrategyInit) {\n    assertRequiredArgument(options, 1, 'CountQueuingStrategy');\n    options = convertQueuingStrategyInit(options, 'First parameter');\n    this._countQueuingStrategyHighWaterMark = options.highWaterMark;\n  }\n\n  /**\n   * Returns the high water mark provided to the constructor.\n   */\n  get highWaterMark(): number {\n    if (!IsCountQueuingStrategy(this)) {\n      throw countBrandCheckException('highWaterMark');\n    }\n    return this._countQueuingStrategyHighWaterMark;\n  }\n\n  /**\n   * Measures the size of `chunk` by always returning 1.\n   * This ensures that the total queue size is a count of the number of chunks in the queue.\n   */\n  get size(): (chunk: any) => 1 {\n    if (!IsCountQueuingStrategy(this)) {\n      throw countBrandCheckException('size');\n    }\n    return countSizeFunction;\n  }\n}\n\nObject.defineProperties(CountQueuingStrategy.prototype, {\n  highWaterMark: { enumerable: true },\n  size: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(CountQueuingStrategy.prototype, Symbol.toStringTag, {\n    value: 'CountQueuingStrategy',\n    configurable: true\n  });\n}\n\n// Helper functions for the CountQueuingStrategy.\n\nfunction countBrandCheckException(name: string): TypeError {\n  return new TypeError(`CountQueuingStrategy.prototype.${name} can only be used on a CountQueuingStrategy`);\n}\n\nexport function IsCountQueuingStrategy(x: any): x is CountQueuingStrategy {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_countQueuingStrategyHighWaterMark')) {\n    return false;\n  }\n\n  return x instanceof CountQueuingStrategy;\n}\n","import { assertDictionary, assertFunction } from './basic';\nimport { promiseCall, reflectCall } from '../helpers/webidl';\nimport {\n  Transformer,\n  TransformerFlushCallback,\n  TransformerStartCallback,\n  TransformerTransformCallback,\n  ValidatedTransformer\n} from '../transform-stream/transformer';\nimport { TransformStreamDefaultController } from '../transform-stream';\n\nexport function convertTransformer<I, O>(original: Transformer<I, O> | null,\n                                         context: string): ValidatedTransformer<I, O> {\n  assertDictionary(original, context);\n  const flush = original?.flush;\n  const readableType = original?.readableType;\n  const start = original?.start;\n  const transform = original?.transform;\n  const writableType = original?.writableType;\n  return {\n    flush: flush === undefined ?\n      undefined :\n      convertTransformerFlushCallback(flush, original!, `${context} has member 'flush' that`),\n    readableType,\n    start: start === undefined ?\n      undefined :\n      convertTransformerStartCallback(start, original!, `${context} has member 'start' that`),\n    transform: transform === undefined ?\n      undefined :\n      convertTransformerTransformCallback(transform, original!, `${context} has member 'transform' that`),\n    writableType\n  };\n}\n\nfunction convertTransformerFlushCallback<I, O>(\n  fn: TransformerFlushCallback<O>,\n  original: Transformer<I, O>,\n  context: string\n): (controller: TransformStreamDefaultController<O>) => Promise<void> {\n  assertFunction(fn, context);\n  return (controller: TransformStreamDefaultController<O>) => promiseCall(fn, original, [controller]);\n}\n\nfunction convertTransformerStartCallback<I, O>(\n  fn: TransformerStartCallback<O>,\n  original: Transformer<I, O>,\n  context: string\n): TransformerStartCallback<O> {\n  assertFunction(fn, context);\n  return (controller: TransformStreamDefaultController<O>) => reflectCall(fn, original, [controller]);\n}\n\nfunction convertTransformerTransformCallback<I, O>(\n  fn: TransformerTransformCallback<I, O>,\n  original: Transformer<I, O>,\n  context: string\n): (chunk: I, controller: TransformStreamDefaultController<O>) => Promise<void> {\n  assertFunction(fn, context);\n  return (chunk: I, controller: TransformStreamDefaultController<O>) => promiseCall(fn, original, [chunk, controller]);\n}\n","import assert from '../stub/assert';\nimport { newPromise, promiseRejectedWith, promiseResolvedWith, transformPromiseWith } from './helpers/webidl';\nimport { CreateReadableStream, ReadableStream, ReadableStreamDefaultController } from './readable-stream';\nimport {\n  ReadableStreamDefaultControllerCanCloseOrEnqueue,\n  ReadableStreamDefaultControllerClose,\n  ReadableStreamDefaultControllerEnqueue,\n  ReadableStreamDefaultControllerError,\n  ReadableStreamDefaultControllerGetDesiredSize,\n  ReadableStreamDefaultControllerHasBackpressure\n} from './readable-stream/default-controller';\nimport { QueuingStrategy, QueuingStrategySizeCallback } from './queuing-strategy';\nimport { CreateWritableStream, WritableStream, WritableStreamDefaultControllerErrorIfNeeded } from './writable-stream';\nimport { typeIsObject } from './helpers/miscellaneous';\nimport { IsNonNegativeNumber } from './abstract-ops/miscellaneous';\nimport { convertQueuingStrategy } from './validators/queuing-strategy';\nimport { ExtractHighWaterMark, ExtractSizeAlgorithm } from './abstract-ops/queuing-strategy';\nimport {\n  Transformer,\n  TransformerFlushCallback,\n  TransformerStartCallback,\n  TransformerTransformCallback,\n  ValidatedTransformer\n} from './transform-stream/transformer';\nimport { convertTransformer } from './validators/transformer';\n\n// Class TransformStream\n\n/**\n * A transform stream consists of a pair of streams: a {@link WritableStream | writable stream},\n * known as its writable side, and a {@link ReadableStream | readable stream}, known as its readable side.\n * In a manner specific to the transform stream in question, writes to the writable side result in new data being\n * made available for reading from the readable side.\n *\n * @public\n */\nexport class TransformStream<I = any, O = any> {\n  /** @internal */\n  _writable!: WritableStream<I>;\n  /** @internal */\n  _readable!: ReadableStream<O>;\n  /** @internal */\n  _backpressure!: boolean;\n  /** @internal */\n  _backpressureChangePromise!: Promise<void>;\n  /** @internal */\n  _backpressureChangePromise_resolve!: () => void;\n  /** @internal */\n  _transformStreamController!: TransformStreamDefaultController<O>;\n\n  constructor(\n    transformer?: Transformer<I, O>,\n    writableStrategy?: QueuingStrategy<I>,\n    readableStrategy?: QueuingStrategy<O>\n  );\n  constructor(rawTransformer: Transformer<I, O> | null | undefined = {},\n              rawWritableStrategy: QueuingStrategy<I> | null | undefined = {},\n              rawReadableStrategy: QueuingStrategy<O> | null | undefined = {}) {\n    if (rawTransformer === undefined) {\n      rawTransformer = null;\n    }\n\n    const writableStrategy = convertQueuingStrategy(rawWritableStrategy, 'Second parameter');\n    const readableStrategy = convertQueuingStrategy(rawReadableStrategy, 'Third parameter');\n\n    const transformer = convertTransformer(rawTransformer, 'First parameter');\n    if (transformer.readableType !== undefined) {\n      throw new RangeError('Invalid readableType specified');\n    }\n    if (transformer.writableType !== undefined) {\n      throw new RangeError('Invalid writableType specified');\n    }\n\n    const readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);\n    const readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);\n    const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);\n    const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);\n\n    let startPromise_resolve!: (value: void | PromiseLike<void>) => void;\n    const startPromise = newPromise<void>(resolve => {\n      startPromise_resolve = resolve;\n    });\n\n    InitializeTransformStream(\n      this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm\n    );\n    SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);\n\n    if (transformer.start !== undefined) {\n      startPromise_resolve(transformer.start(this._transformStreamController));\n    } else {\n      startPromise_resolve(undefined);\n    }\n  }\n\n  /**\n   * The readable side of the transform stream.\n   */\n  get readable(): ReadableStream<O> {\n    if (!IsTransformStream(this)) {\n      throw streamBrandCheckException('readable');\n    }\n\n    return this._readable;\n  }\n\n  /**\n   * The writable side of the transform stream.\n   */\n  get writable(): WritableStream<I> {\n    if (!IsTransformStream(this)) {\n      throw streamBrandCheckException('writable');\n    }\n\n    return this._writable;\n  }\n}\n\nObject.defineProperties(TransformStream.prototype, {\n  readable: { enumerable: true },\n  writable: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(TransformStream.prototype, Symbol.toStringTag, {\n    value: 'TransformStream',\n    configurable: true\n  });\n}\n\nexport {\n  Transformer,\n  TransformerStartCallback,\n  TransformerFlushCallback,\n  TransformerTransformCallback\n};\n\n// Transform Stream Abstract Operations\n\nexport function CreateTransformStream<I, O>(startAlgorithm: () => void | PromiseLike<void>,\n                                            transformAlgorithm: (chunk: I) => Promise<void>,\n                                            flushAlgorithm: () => Promise<void>,\n                                            writableHighWaterMark = 1,\n                                            writableSizeAlgorithm: QueuingStrategySizeCallback<I> = () => 1,\n                                            readableHighWaterMark = 0,\n                                            readableSizeAlgorithm: QueuingStrategySizeCallback<O> = () => 1) {\n  assert(IsNonNegativeNumber(writableHighWaterMark));\n  assert(IsNonNegativeNumber(readableHighWaterMark));\n\n  const stream: TransformStream<I, O> = Object.create(TransformStream.prototype);\n\n  let startPromise_resolve!: (value: void | PromiseLike<void>) => void;\n  const startPromise = newPromise<void>(resolve => {\n    startPromise_resolve = resolve;\n  });\n\n  InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark,\n                            readableSizeAlgorithm);\n\n  const controller: TransformStreamDefaultController<O> = Object.create(TransformStreamDefaultController.prototype);\n\n  SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n\n  const startResult = startAlgorithm();\n  startPromise_resolve(startResult);\n  return stream;\n}\n\nfunction InitializeTransformStream<I, O>(stream: TransformStream<I, O>,\n                                         startPromise: Promise<void>,\n                                         writableHighWaterMark: number,\n                                         writableSizeAlgorithm: QueuingStrategySizeCallback<I>,\n                                         readableHighWaterMark: number,\n                                         readableSizeAlgorithm: QueuingStrategySizeCallback<O>) {\n  function startAlgorithm(): Promise<void> {\n    return startPromise;\n  }\n\n  function writeAlgorithm(chunk: I): Promise<void> {\n    return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);\n  }\n\n  function abortAlgorithm(reason: any): Promise<void> {\n    return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);\n  }\n\n  function closeAlgorithm(): Promise<void> {\n    return TransformStreamDefaultSinkCloseAlgorithm(stream);\n  }\n\n  stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm,\n                                          writableHighWaterMark, writableSizeAlgorithm);\n\n  function pullAlgorithm(): Promise<void> {\n    return TransformStreamDefaultSourcePullAlgorithm(stream);\n  }\n\n  function cancelAlgorithm(reason: any): Promise<void> {\n    TransformStreamErrorWritableAndUnblockWrite(stream, reason);\n    return promiseResolvedWith(undefined);\n  }\n\n  stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark,\n                                          readableSizeAlgorithm);\n\n  // The [[backpressure]] slot is set to undefined so that it can be initialised by TransformStreamSetBackpressure.\n  stream._backpressure = undefined!;\n  stream._backpressureChangePromise = undefined!;\n  stream._backpressureChangePromise_resolve = undefined!;\n  TransformStreamSetBackpressure(stream, true);\n\n  stream._transformStreamController = undefined!;\n}\n\nfunction IsTransformStream(x: unknown): x is TransformStream {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n    return false;\n  }\n\n  return x instanceof TransformStream;\n}\n\n// This is a no-op if both sides are already errored.\nfunction TransformStreamError(stream: TransformStream, e: any) {\n  ReadableStreamDefaultControllerError(\n    stream._readable._readableStreamController as ReadableStreamDefaultController<any>,\n    e\n  );\n  TransformStreamErrorWritableAndUnblockWrite(stream, e);\n}\n\nfunction TransformStreamErrorWritableAndUnblockWrite(stream: TransformStream, e: any) {\n  TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);\n  WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);\n  if (stream._backpressure) {\n    // Pretend that pull() was called to permit any pending write() calls to complete. TransformStreamSetBackpressure()\n    // cannot be called from enqueue() or pull() once the ReadableStream is errored, so this will will be the final time\n    // _backpressure is set.\n    TransformStreamSetBackpressure(stream, false);\n  }\n}\n\nfunction TransformStreamSetBackpressure(stream: TransformStream, backpressure: boolean) {\n  // Passes also when called during construction.\n  assert(stream._backpressure !== backpressure);\n\n  if (stream._backpressureChangePromise !== undefined) {\n    stream._backpressureChangePromise_resolve();\n  }\n\n  stream._backpressureChangePromise = newPromise(resolve => {\n    stream._backpressureChangePromise_resolve = resolve;\n  });\n\n  stream._backpressure = backpressure;\n}\n\n// Class TransformStreamDefaultController\n\n/**\n * Allows control of the {@link ReadableStream} and {@link WritableStream} of the associated {@link TransformStream}.\n *\n * @public\n */\nexport class TransformStreamDefaultController<O> {\n  /** @internal */\n  _controlledTransformStream: TransformStream<any, O>;\n  /** @internal */\n  _transformAlgorithm: (chunk: any) => Promise<void>;\n  /** @internal */\n  _flushAlgorithm: () => Promise<void>;\n\n  private constructor() {\n    throw new TypeError('Illegal constructor');\n  }\n\n  /**\n   * Returns the desired size to fill the readable side’s internal queue. It can be negative, if the queue is over-full.\n   */\n  get desiredSize(): number | null {\n    if (!IsTransformStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('desiredSize');\n    }\n\n    const readableController = this._controlledTransformStream._readable._readableStreamController;\n    return ReadableStreamDefaultControllerGetDesiredSize(readableController as ReadableStreamDefaultController<O>);\n  }\n\n  /**\n   * Enqueues the given chunk `chunk` in the readable side of the controlled transform stream.\n   */\n  enqueue(chunk: O): void;\n  enqueue(chunk: O = undefined!): void {\n    if (!IsTransformStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('enqueue');\n    }\n\n    TransformStreamDefaultControllerEnqueue(this, chunk);\n  }\n\n  /**\n   * Errors both the readable side and the writable side of the controlled transform stream, making all future\n   * interactions with it fail with the given error `e`. Any chunks queued for transformation will be discarded.\n   */\n  error(reason: any = undefined): void {\n    if (!IsTransformStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('error');\n    }\n\n    TransformStreamDefaultControllerError(this, reason);\n  }\n\n  /**\n   * Closes the readable side and errors the writable side of the controlled transform stream. This is useful when the\n   * transformer only needs to consume a portion of the chunks written to the writable side.\n   */\n  terminate(): void {\n    if (!IsTransformStreamDefaultController(this)) {\n      throw defaultControllerBrandCheckException('terminate');\n    }\n\n    TransformStreamDefaultControllerTerminate(this);\n  }\n}\n\nObject.defineProperties(TransformStreamDefaultController.prototype, {\n  enqueue: { enumerable: true },\n  error: { enumerable: true },\n  terminate: { enumerable: true },\n  desiredSize: { enumerable: true }\n});\nif (typeof Symbol.toStringTag === 'symbol') {\n  Object.defineProperty(TransformStreamDefaultController.prototype, Symbol.toStringTag, {\n    value: 'TransformStreamDefaultController',\n    configurable: true\n  });\n}\n\n// Transform Stream Default Controller Abstract Operations\n\nfunction IsTransformStreamDefaultController<O = any>(x: any): x is TransformStreamDefaultController<O> {\n  if (!typeIsObject(x)) {\n    return false;\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n    return false;\n  }\n\n  return x instanceof TransformStreamDefaultController;\n}\n\nfunction SetUpTransformStreamDefaultController<I, O>(stream: TransformStream<I, O>,\n                                                     controller: TransformStreamDefaultController<O>,\n                                                     transformAlgorithm: (chunk: I) => Promise<void>,\n                                                     flushAlgorithm: () => Promise<void>) {\n  assert(IsTransformStream(stream));\n  assert(stream._transformStreamController === undefined);\n\n  controller._controlledTransformStream = stream;\n  stream._transformStreamController = controller;\n\n  controller._transformAlgorithm = transformAlgorithm;\n  controller._flushAlgorithm = flushAlgorithm;\n}\n\nfunction SetUpTransformStreamDefaultControllerFromTransformer<I, O>(stream: TransformStream<I, O>,\n                                                                    transformer: ValidatedTransformer<I, O>) {\n  const controller: TransformStreamDefaultController<O> = Object.create(TransformStreamDefaultController.prototype);\n\n  let transformAlgorithm = (chunk: I): Promise<void> => {\n    try {\n      TransformStreamDefaultControllerEnqueue(controller, chunk as unknown as O);\n      return promiseResolvedWith(undefined);\n    } catch (transformResultE) {\n      return promiseRejectedWith(transformResultE);\n    }\n  };\n\n  let flushAlgorithm: () => Promise<void> = () => promiseResolvedWith(undefined);\n\n  if (transformer.transform !== undefined) {\n    transformAlgorithm = chunk => transformer.transform!(chunk, controller);\n  }\n  if (transformer.flush !== undefined) {\n    flushAlgorithm = () => transformer.flush!(controller);\n  }\n\n  SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n}\n\nfunction TransformStreamDefaultControllerClearAlgorithms(controller: TransformStreamDefaultController<any>) {\n  controller._transformAlgorithm = undefined!;\n  controller._flushAlgorithm = undefined!;\n}\n\nfunction TransformStreamDefaultControllerEnqueue<O>(controller: TransformStreamDefaultController<O>, chunk: O) {\n  const stream = controller._controlledTransformStream;\n  const readableController = stream._readable._readableStreamController as ReadableStreamDefaultController<O>;\n  if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {\n    throw new TypeError('Readable side is not in a state that permits enqueue');\n  }\n\n  // We throttle transform invocations based on the backpressure of the ReadableStream, but we still\n  // accept TransformStreamDefaultControllerEnqueue() calls.\n\n  try {\n    ReadableStreamDefaultControllerEnqueue(readableController, chunk);\n  } catch (e) {\n    // This happens when readableStrategy.size() throws.\n    TransformStreamErrorWritableAndUnblockWrite(stream, e);\n\n    throw stream._readable._storedError;\n  }\n\n  const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);\n  if (backpressure !== stream._backpressure) {\n    assert(backpressure);\n    TransformStreamSetBackpressure(stream, true);\n  }\n}\n\nfunction TransformStreamDefaultControllerError(controller: TransformStreamDefaultController<any>, e: any) {\n  TransformStreamError(controller._controlledTransformStream, e);\n}\n\nfunction TransformStreamDefaultControllerPerformTransform<I, O>(controller: TransformStreamDefaultController<O>,\n                                                                chunk: I) {\n  const transformPromise = controller._transformAlgorithm(chunk);\n  return transformPromiseWith(transformPromise, undefined, r => {\n    TransformStreamError(controller._controlledTransformStream, r);\n    throw r;\n  });\n}\n\nfunction TransformStreamDefaultControllerTerminate<O>(controller: TransformStreamDefaultController<O>) {\n  const stream = controller._controlledTransformStream;\n  const readableController = stream._readable._readableStreamController as ReadableStreamDefaultController<O>;\n\n  ReadableStreamDefaultControllerClose(readableController);\n\n  const error = new TypeError('TransformStream terminated');\n  TransformStreamErrorWritableAndUnblockWrite(stream, error);\n}\n\n// TransformStreamDefaultSink Algorithms\n\nfunction TransformStreamDefaultSinkWriteAlgorithm<I, O>(stream: TransformStream<I, O>, chunk: I): Promise<void> {\n  assert(stream._writable._state === 'writable');\n\n  const controller = stream._transformStreamController;\n\n  if (stream._backpressure) {\n    const backpressureChangePromise = stream._backpressureChangePromise;\n    assert(backpressureChangePromise !== undefined);\n    return transformPromiseWith(backpressureChangePromise, () => {\n      const writable = stream._writable;\n      const state = writable._state;\n      if (state === 'erroring') {\n        throw writable._storedError;\n      }\n      assert(state === 'writable');\n      return TransformStreamDefaultControllerPerformTransform<I, O>(controller, chunk);\n    });\n  }\n\n  return TransformStreamDefaultControllerPerformTransform<I, O>(controller, chunk);\n}\n\nfunction TransformStreamDefaultSinkAbortAlgorithm(stream: TransformStream, reason: any): Promise<void> {\n  // abort() is not called synchronously, so it is possible for abort() to be called when the stream is already\n  // errored.\n  TransformStreamError(stream, reason);\n  return promiseResolvedWith(undefined);\n}\n\nfunction TransformStreamDefaultSinkCloseAlgorithm<I, O>(stream: TransformStream<I, O>): Promise<void> {\n  // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n  const readable = stream._readable;\n\n  const controller = stream._transformStreamController;\n  const flushPromise = controller._flushAlgorithm();\n  TransformStreamDefaultControllerClearAlgorithms(controller);\n\n  // Return a promise that is fulfilled with undefined on success.\n  return transformPromiseWith(flushPromise, () => {\n    if (readable._state === 'errored') {\n      throw readable._storedError;\n    }\n    ReadableStreamDefaultControllerClose(readable._readableStreamController as ReadableStreamDefaultController<O>);\n  }, r => {\n    TransformStreamError(stream, r);\n    throw readable._storedError;\n  });\n}\n\n// TransformStreamDefaultSource Algorithms\n\nfunction TransformStreamDefaultSourcePullAlgorithm(stream: TransformStream): Promise<void> {\n  // Invariant. Enforced by the promises returned by start() and pull().\n  assert(stream._backpressure);\n\n  assert(stream._backpressureChangePromise !== undefined);\n\n  TransformStreamSetBackpressure(stream, false);\n\n  // Prevent the next pull() call until there is backpressure.\n  return stream._backpressureChangePromise;\n}\n\n// Helper functions for the TransformStreamDefaultController.\n\nfunction defaultControllerBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);\n}\n\n// Helper functions for the TransformStream.\n\nfunction streamBrandCheckException(name: string): TypeError {\n  return new TypeError(\n    `TransformStream.prototype.${name} can only be used on a TransformStream`);\n}\n","/*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\nimport C from 'fetch-blob'\nimport F from 'fetch-blob/file.js'\n\nvar {toStringTag:t,iterator:i,hasInstance:h}=Symbol,\nr=Math.random,\nm='append,set,get,getAll,delete,keys,values,entries,forEach,constructor'.split(','),\nf=(a,b,c)=>(a+='',/^(Blob|File)$/.test(b && b[t])?[(c=c!==void 0?c+'':b[t]=='File'?b.name:'blob',a),b.name!==c||b[t]=='blob'?new F([b],c,b):b]:[a,b+'']),\ne=(c,f)=>(f?c:c.replace(/\\r?\\n|\\r/g,'\\r\\n')).replace(/\\n/g,'%0A').replace(/\\r/g,'%0D').replace(/\"/g,'%22'),\nx=(n, a, e)=>{if(a.length<e){throw new TypeError(`Failed to execute '${n}' on 'FormData': ${e} arguments required, but only ${a.length} present.`)}}\n\nexport const File = F\n\n/** @type {typeof globalThis.FormData} */\nexport const FormData = class FormData {\n#d=[];\nconstructor(...a){if(a.length)throw new TypeError(`Failed to construct 'FormData': parameter 1 is not of type 'HTMLFormElement'.`)}\nget [t]() {return 'FormData'}\n[i](){return this.entries()}\nstatic [h](o) {return o&&typeof o==='object'&&o[t]==='FormData'&&!m.some(m=>typeof o[m]!='function')}\nappend(...a){x('append',arguments,2);this.#d.push(f(...a))}\ndelete(a){x('delete',arguments,1);a+='';this.#d=this.#d.filter(([b])=>b!==a)}\nget(a){x('get',arguments,1);a+='';for(var b=this.#d,l=b.length,c=0;c<l;c++)if(b[c][0]===a)return b[c][1];return null}\ngetAll(a,b){x('getAll',arguments,1);b=[];a+='';this.#d.forEach(c=>c[0]===a&&b.push(c[1]));return b}\nhas(a){x('has',arguments,1);a+='';return this.#d.some(b=>b[0]===a)}\nforEach(a,b){x('forEach',arguments,1);for(var [c,d]of this)a.call(b,d,c,this)}\nset(...a){x('set',arguments,2);var b=[],c=!0;a=f(...a);this.#d.forEach(d=>{d[0]===a[0]?c&&(c=!b.push(a)):b.push(d)});c&&b.push(a);this.#d=b}\n*entries(){yield*this.#d}\n*keys(){for(var[a]of this)yield a}\n*values(){for(var[,a]of this)yield a}}\n\n/** @param {FormData} F */\nexport function formDataToBlob (F,B=C){\nvar b=`${r()}${r()}`.replace(/\\./g, '').slice(-28).padStart(32, '-'),c=[],p=`--${b}\\r\\nContent-Disposition: form-data; name=\"`\nF.forEach((v,n)=>typeof v=='string'\n?c.push(p+e(n)+`\"\\r\\n\\r\\n${v.replace(/\\r(?!\\n)|(?<!\\r)\\n/g, '\\r\\n')}\\r\\n`)\n:c.push(p+e(n)+`\"; filename=\"${e(v.name, 1)}\"\\r\\nContent-Type: ${v.type||\"application/octet-stream\"}\\r\\n\\r\\n`, v, '\\r\\n'))\nc.push(`--${b}--`)\nreturn new B(c,{type:\"multipart/form-data; boundary=\"+b})}\n","/*! fetch-blob. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\n// TODO (jimmywarting): in the feature use conditional loading with top level await (requires 14.x)\n// Node has recently added whatwg stream into core\n\nimport './streams.cjs'\n\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\n/** @param {(Blob | Uint8Array)[]} parts */\nasync function * toIterator (parts, clone = true) {\n  for (const part of parts) {\n    if ('stream' in part) {\n      yield * (/** @type {AsyncIterableIterator<Uint8Array>} */ (part.stream()))\n    } else if (ArrayBuffer.isView(part)) {\n      if (clone) {\n        let position = part.byteOffset\n        const end = part.byteOffset + part.byteLength\n        while (position !== end) {\n          const size = Math.min(end - position, POOL_SIZE)\n          const chunk = part.buffer.slice(position, position + size)\n          position += chunk.byteLength\n          yield new Uint8Array(chunk)\n        }\n      } else {\n        yield part\n      }\n    /* c8 ignore next 10 */\n    } else {\n      // For blobs that have arrayBuffer but no stream method (nodes buffer.Blob)\n      let position = 0, b = (/** @type {Blob} */ (part))\n      while (position !== b.size) {\n        const chunk = b.slice(position, Math.min(b.size, position + POOL_SIZE))\n        const buffer = await chunk.arrayBuffer()\n        position += buffer.byteLength\n        yield new Uint8Array(buffer)\n      }\n    }\n  }\n}\n\nconst _Blob = class Blob {\n  /** @type {Array.<(Blob|Uint8Array)>} */\n  #parts = []\n  #type = ''\n  #size = 0\n  #endings = 'transparent'\n\n  /**\n   * The Blob() constructor returns a new Blob object. The content\n   * of the blob consists of the concatenation of the values given\n   * in the parameter array.\n   *\n   * @param {*} blobParts\n   * @param {{ type?: string, endings?: string }} [options]\n   */\n  constructor (blobParts = [], options = {}) {\n    if (typeof blobParts !== 'object' || blobParts === null) {\n      throw new TypeError('Failed to construct \\'Blob\\': The provided value cannot be converted to a sequence.')\n    }\n\n    if (typeof blobParts[Symbol.iterator] !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': The object must have a callable @@iterator property.')\n    }\n\n    if (typeof options !== 'object' && typeof options !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': parameter 2 cannot convert to dictionary.')\n    }\n\n    if (options === null) options = {}\n\n    const encoder = new TextEncoder()\n    for (const element of blobParts) {\n      let part\n      if (ArrayBuffer.isView(element)) {\n        part = new Uint8Array(element.buffer.slice(element.byteOffset, element.byteOffset + element.byteLength))\n      } else if (element instanceof ArrayBuffer) {\n        part = new Uint8Array(element.slice(0))\n      } else if (element instanceof Blob) {\n        part = element\n      } else {\n        part = encoder.encode(`${element}`)\n      }\n\n      this.#size += ArrayBuffer.isView(part) ? part.byteLength : part.size\n      this.#parts.push(part)\n    }\n\n    this.#endings = `${options.endings === undefined ? 'transparent' : options.endings}`\n    const type = options.type === undefined ? '' : String(options.type)\n    this.#type = /^[\\x20-\\x7E]*$/.test(type) ? type : ''\n  }\n\n  /**\n   * The Blob interface's size property returns the\n   * size of the Blob in bytes.\n   */\n  get size () {\n    return this.#size\n  }\n\n  /**\n   * The type property of a Blob object returns the MIME type of the file.\n   */\n  get type () {\n    return this.#type\n  }\n\n  /**\n   * The text() method in the Blob interface returns a Promise\n   * that resolves with a string containing the contents of\n   * the blob, interpreted as UTF-8.\n   *\n   * @return {Promise<string>}\n   */\n  async text () {\n    // More optimized than using this.arrayBuffer()\n    // that requires twice as much ram\n    const decoder = new TextDecoder()\n    let str = ''\n    for await (const part of toIterator(this.#parts, false)) {\n      str += decoder.decode(part, { stream: true })\n    }\n    // Remaining\n    str += decoder.decode()\n    return str\n  }\n\n  /**\n   * The arrayBuffer() method in the Blob interface returns a\n   * Promise that resolves with the contents of the blob as\n   * binary data contained in an ArrayBuffer.\n   *\n   * @return {Promise<ArrayBuffer>}\n   */\n  async arrayBuffer () {\n    // Easier way... Just a unnecessary overhead\n    // const view = new Uint8Array(this.size);\n    // await this.stream().getReader({mode: 'byob'}).read(view);\n    // return view.buffer;\n\n    const data = new Uint8Array(this.size)\n    let offset = 0\n    for await (const chunk of toIterator(this.#parts, false)) {\n      data.set(chunk, offset)\n      offset += chunk.length\n    }\n\n    return data.buffer\n  }\n\n  stream () {\n    const it = toIterator(this.#parts, true)\n\n    return new globalThis.ReadableStream({\n      // @ts-ignore\n      type: 'bytes',\n      async pull (ctrl) {\n        const chunk = await it.next()\n        chunk.done ? ctrl.close() : ctrl.enqueue(chunk.value)\n      },\n\n      async cancel () {\n        await it.return()\n      }\n    })\n  }\n\n  /**\n   * The Blob interface's slice() method creates and returns a\n   * new Blob object which contains data from a subset of the\n   * blob on which it's called.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @param {string} [type]\n   */\n  slice (start = 0, end = this.size, type = '') {\n    const { size } = this\n\n    let relativeStart = start < 0 ? Math.max(size + start, 0) : Math.min(start, size)\n    let relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size)\n\n    const span = Math.max(relativeEnd - relativeStart, 0)\n    const parts = this.#parts\n    const blobParts = []\n    let added = 0\n\n    for (const part of parts) {\n      // don't add the overflow to new blobParts\n      if (added >= span) {\n        break\n      }\n\n      const size = ArrayBuffer.isView(part) ? part.byteLength : part.size\n      if (relativeStart && size <= relativeStart) {\n        // Skip the beginning and change the relative\n        // start & end position as we skip the unwanted parts\n        relativeStart -= size\n        relativeEnd -= size\n      } else {\n        let chunk\n        if (ArrayBuffer.isView(part)) {\n          chunk = part.subarray(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.byteLength\n        } else {\n          chunk = part.slice(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.size\n        }\n        relativeEnd -= size\n        blobParts.push(chunk)\n        relativeStart = 0 // All next sequential parts should start at 0\n      }\n    }\n\n    const blob = new Blob([], { type: String(type).toLowerCase() })\n    blob.#size = span\n    blob.#parts = blobParts\n\n    return blob\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return (\n      object &&\n      typeof object === 'object' &&\n      typeof object.constructor === 'function' &&\n      (\n        typeof object.stream === 'function' ||\n        typeof object.arrayBuffer === 'function'\n      ) &&\n      /^(Blob|File)$/.test(object[Symbol.toStringTag])\n    )\n  }\n}\n\nObject.defineProperties(_Blob.prototype, {\n  size: { enumerable: true },\n  type: { enumerable: true },\n  slice: { enumerable: true }\n})\n\n/** @type {typeof globalThis.Blob} */\nexport const Blob = _Blob\nexport default Blob\n","/* c8 ignore start */\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\nif (!globalThis.ReadableStream) {\n  // `node:stream/web` got introduced in v16.5.0 as experimental\n  // and it's preferred over the polyfilled version. So we also\n  // suppress the warning that gets emitted by NodeJS for using it.\n  try {\n    const process = require('node:process')\n    const { emitWarning } = process\n    try {\n      process.emitWarning = () => {}\n      Object.assign(globalThis, require('node:stream/web'))\n      process.emitWarning = emitWarning\n    } catch (error) {\n      process.emitWarning = emitWarning\n      throw error\n    }\n  } catch (error) {\n    // fallback to polyfill implementation\n    Object.assign(globalThis, require('web-streams-polyfill/dist/ponyfill.es2018.js'))\n  }\n}\n\ntry {\n  // Don't use node: prefix for this, require+node: is not supported until node v14.14\n  // Only `import()` can use prefix in 12.20 and later\n  const { Blob } = require('buffer')\n  if (Blob && !Blob.prototype.stream) {\n    Blob.prototype.stream = function name (params) {\n      let position = 0\n      const blob = this\n\n      return new ReadableStream({\n        type: 'bytes',\n        async pull (ctrl) {\n          const chunk = blob.slice(position, Math.min(blob.size, position + POOL_SIZE))\n          const buffer = await chunk.arrayBuffer()\n          position += buffer.byteLength\n          ctrl.enqueue(new Uint8Array(buffer))\n\n          if (position === blob.size) {\n            ctrl.close()\n          }\n        }\n      })\n    }\n  }\n} catch (error) {}\n/* c8 ignore end */\n","import Blob from './index.js'\n\nconst _File = class File extends Blob {\n  #lastModified = 0\n  #name = ''\n\n  /**\n   * @param {*[]} fileBits\n   * @param {string} fileName\n   * @param {{lastModified?: number, type?: string}} options\n   */// @ts-ignore\n  constructor (fileBits, fileName, options = {}) {\n    if (arguments.length < 2) {\n      throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`)\n    }\n    super(fileBits, options)\n\n    if (options === null) options = {}\n\n    // Simulate WebIDL type casting for NaN value in lastModified option.\n    const lastModified = options.lastModified === undefined ? Date.now() : Number(options.lastModified)\n    if (!Number.isNaN(lastModified)) {\n      this.#lastModified = lastModified\n    }\n\n    this.#name = String(fileName)\n  }\n\n  get name () {\n    return this.#name\n  }\n\n  get lastModified () {\n    return this.#lastModified\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'File'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return !!object && object instanceof Blob &&\n      /^(File)$/.test(object[Symbol.toStringTag])\n  }\n}\n\n/** @type {typeof globalThis.File} */// @ts-ignore\nexport const File = _File\nexport default File\n","module.exports = (Promise.resolve(__parcel__require__(\"./\" + \"multipart-parser.f3fa1cd9.js\"))).then(() => parcelRequire('irjQh'));","import { statSync, createReadStream, promises as fs } from 'node:fs'\nimport { basename } from 'node:path'\nimport DOMException from 'node-domexception'\n\nimport File from './file.js'\nimport Blob from './index.js'\n\nconst { stat } = fs\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst blobFromSync = (path, type) => fromBlob(statSync(path), path, type)\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<Blob>}\n */\nconst blobFrom = (path, type) => stat(path).then(stat => fromBlob(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<File>}\n */\nconst fileFrom = (path, type) => stat(path).then(stat => fromFile(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst fileFromSync = (path, type) => fromFile(statSync(path), path, type)\n\n// @ts-ignore\nconst fromBlob = (stat, path, type = '') => new Blob([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], { type })\n\n// @ts-ignore\nconst fromFile = (stat, path, type = '') => new File([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], basename(path), { type, lastModified: stat.mtimeMs })\n\n/**\n * This is a blob backed up by a file on the disk\n * with minium requirement. Its wrapped around a Blob as a blobPart\n * so you have no direct access to this.\n *\n * @private\n */\nclass BlobDataItem {\n  #path\n  #start\n\n  constructor (options) {\n    this.#path = options.path\n    this.#start = options.start\n    this.size = options.size\n    this.lastModified = options.lastModified\n  }\n\n  /**\n   * Slicing arguments is first validated and formatted\n   * to not be out of range by Blob.prototype.slice\n   */\n  slice (start, end) {\n    return new BlobDataItem({\n      path: this.#path,\n      lastModified: this.lastModified,\n      size: end - start,\n      start: this.#start + start\n    })\n  }\n\n  async * stream () {\n    const { mtimeMs } = await stat(this.#path)\n    if (mtimeMs > this.lastModified) {\n      throw new DOMException('The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.', 'NotReadableError')\n    }\n    yield * createReadStream(this.#path, {\n      start: this.#start,\n      end: this.#start + this.size - 1\n    })\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n}\n\nexport default blobFromSync\nexport { File, Blob, blobFrom, blobFromSync, fileFrom, fileFromSync }\n","/*! node-domexception. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\n\nif (!globalThis.DOMException) {\n  try {\n    const { MessageChannel } = require('worker_threads'),\n    port = new MessageChannel().port1,\n    ab = new ArrayBuffer()\n    port.postMessage(ab, [ab, ab])\n  } catch (err) {\n    err.constructor.name === 'DOMException' && (\n      globalThis.DOMException = err.constructor\n    )\n  }\n}\n\nmodule.exports = globalThis.DOMException\n","import fetch, { RequestInit, Response } from \"node-fetch\";\n// link below gives insight on how to do this\n// https://github.com/aws-amplify/amplify-js/blob/main/packages/amazon-cognito-identity-js/src/Client.js\nlet REACT_APP_COGNITO_CLIENT_ID;\nconst REACT_APP_COGNITO_URL = \"\";\nexport const configure = (clientId) => {\n  REACT_APP_COGNITO_CLIENT_ID = clientId;\n};\n\nexport const headers = {\n  \"X-Amz-User-Agent\": \"Chrome\",\n  \"Content-Type\": \"application/x-amz-json-1.1\",\n};\n\nexport enum AuthTarget {\n  SignUp = \"AWSCognitoIdentityProviderService.SignUp\",\n  ConfirmSignUp = \"AWSCognitoIdentityProviderService.ConfirmSignUp\",\n  ResendConfirmationCode = \"AWSCognitoIdentityProviderService.ResendConfirmationCode\",\n  InitiateAuth = \"AWSCognitoIdentityProviderService.InitiateAuth\",\n}\nexport enum CognitoException {\n  // sign up exceptions\n  UsernameExistsException = \"UsernameExistsException\",\n  // confirm sign up exceptions\n  ExpiredCodeException = \"ExpiredCodeException\",\n  CodeMismatchException = \"CodeMismatchException\",\n  TooManyFailedAttemptsException = \"TooManyFailedAttemptsException\",\n  // resend verification exceptions\n  TooManyRequestsException = \"TooManyRequestsException\",\n  // default error\n  DefaultError = \"DefaultError\",\n}\n\nexport const request = async <T>(post: () => Promise<Response>): Promise<T> => {\n  try {\n    const response = await post();\n    const data = await response.json();\n\n    if (response.ok) return data as T;\n\n    if (typeof data === \"object\" && \"__type\" in data) {\n      const error = data as CognitoErrorResponse;\n      throw new CognitoError(\"response-error\", error.__type);\n    }\n\n    throw new Error(\"default error\");\n  } catch (error) {\n    if (error instanceof CognitoError) throw error;\n\n    throw new CognitoError(\"aws-cognito-error\", CognitoException.DefaultError);\n  }\n};\n\nexport const generateRequestShape = (target: AuthTarget, body: Body) => {\n  return {\n    headers: {\n      ...headers,\n      \"X-Amz-Target\": target,\n    },\n    method: \"POST\",\n    body: JSON.stringify({\n      ClientId: REACT_APP_COGNITO_CLIENT_ID,\n      ...body,\n    }),\n  };\n};\n\nexport const signUp = async (email: string, password: string) => {\n  const requestInit = generateRequestShape(AuthTarget.SignUp, {\n    Password: password,\n    UserAttributes: [{ Name: \"email\", Value: email }],\n    Username: email,\n  });\n  const post = createRequestFunction(requestInit);\n  return await request<SignUpResponse>(post);\n};\n\nexport const signIn = async (email: string, password: string) => {\n  const requestInit = generateRequestShape(AuthTarget.InitiateAuth, {\n    AuthFlow: \"USER_PASSWORD_AUTH\",\n    AuthParameters: {\n      USERNAME: email,\n      PASSWORD: password,\n    },\n  });\n  const post = createRequestFunction(requestInit);\n  return await request<any>(post);\n};\n\nexport const confirmSignUp = async (\n  email: string,\n  confirmationCode: string\n) => {\n  const requestInit = generateRequestShape(AuthTarget.ConfirmSignUp, {\n    ConfirmationCode: confirmationCode,\n    Username: email,\n  });\n  const post = createRequestFunction(requestInit);\n  return await request<Record<string, string>>(post);\n};\n\nexport const resendConfirmationCode = async (email: string) => {\n  const requestInit = generateRequestShape(AuthTarget.ResendConfirmationCode, {\n    Username: email,\n  });\n  const post = createRequestFunction(requestInit);\n  return await request<ResendConfirmationResponse>(post);\n};\n\nconst createRequestFunction = (requestInit: RequestInit) => {\n  return async (): Promise<Response> =>\n    fetch(REACT_APP_COGNITO_URL, requestInit);\n};\n\n/**\n * Post Responses\n **/\nexport interface ResendConfirmationResponse {\n  CodeDeliveryDetails: {\n    AttributeName: string;\n    DeliveryMedium: string;\n    Destination: string;\n  };\n}\nexport interface SignUpResponse {\n  CodeDeliveryDetails: {\n    AttributeName: string;\n    DeliveryMedium: string;\n    Destination: string;\n  };\n  UserConfirmed: boolean;\n  UserSub: string;\n}\n\n/**\n * Post Body\n **/\n\nexport type Body = BaseBody | SignUpBody | ConfirmSignUpBody | SignInBody;\nexport interface BaseBody {\n  Username: string;\n}\nexport interface SignInBody {\n  AuthFlow: string;\n  AuthParameters: {\n    USERNAME: string;\n    PASSWORD: string;\n  };\n}\nexport interface SignUpBody extends BaseBody {\n  Password: string;\n  UserAttributes: { Name: \"email\"; Value: string }[];\n}\nexport interface ConfirmSignUpBody extends BaseBody {\n  ConfirmationCode: string;\n}\n\n/**\n * Error Handling\n **/\nexport interface CognitoErrorResponse {\n  __type: CognitoException;\n  message: string;\n}\n\nexport class CognitoError extends Error {\n  constructor(public message: string, public exception: CognitoException) {\n    super(message);\n  }\n}\n","/**\n * Index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport http from 'node:http';\nimport https from 'node:https';\nimport zlib from 'node:zlib';\nimport Stream, {PassThrough, pipeline as pump} from 'node:stream';\nimport {Buffer} from 'node:buffer';\n\nimport dataUriToBuffer from 'data-uri-to-buffer';\n\nimport {writeToStream, clone} from './body.js';\nimport Response from './response.js';\nimport Headers, {fromRawHeaders} from './headers.js';\nimport Request, {getNodeRequestOptions} from './request.js';\nimport {FetchError} from './errors/fetch-error.js';\nimport {AbortError} from './errors/abort-error.js';\nimport {isRedirect} from './utils/is-redirect.js';\nimport {FormData} from 'formdata-polyfill/esm.min.js';\nimport {isDomainOrSubdomain, isSameProtocol} from './utils/is.js';\nimport {parseReferrerPolicyFromHeader} from './utils/referrer.js';\nimport {\n\tBlob,\n\tFile,\n\tfileFromSync,\n\tfileFrom,\n\tblobFromSync,\n\tblobFrom\n} from 'fetch-blob/from.js';\n\nexport {FormData, Headers, Request, Response, FetchError, AbortError, isRedirect};\nexport {Blob, File, fileFromSync, fileFrom, blobFromSync, blobFrom};\n\nconst supportedSchemas = new Set(['data:', 'http:', 'https:']);\n\n/**\n * Fetch function\n *\n * @param   {string | URL | import('./request').default} url - Absolute url or Request instance\n * @param   {*} [options_] - Fetch options\n * @return  {Promise<import('./response').default>}\n */\nexport default async function fetch(url, options_) {\n\treturn new Promise((resolve, reject) => {\n\t\t// Build request object\n\t\tconst request = new Request(url, options_);\n\t\tconst {parsedURL, options} = getNodeRequestOptions(request);\n\t\tif (!supportedSchemas.has(parsedURL.protocol)) {\n\t\t\tthrow new TypeError(`node-fetch cannot load ${url}. URL scheme \"${parsedURL.protocol.replace(/:$/, '')}\" is not supported.`);\n\t\t}\n\n\t\tif (parsedURL.protocol === 'data:') {\n\t\t\tconst data = dataUriToBuffer(request.url);\n\t\t\tconst response = new Response(data, {headers: {'Content-Type': data.typeFull}});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\t// Wrap http.request into fetch\n\t\tconst send = (parsedURL.protocol === 'https:' ? https : http).request;\n\t\tconst {signal} = request;\n\t\tlet response = null;\n\n\t\tconst abort = () => {\n\t\t\tconst error = new AbortError('The operation was aborted.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\n\t\t\tif (!response || !response.body) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = () => {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// Send request\n\t\tconst request_ = send(parsedURL.toString(), options);\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tconst finalize = () => {\n\t\t\trequest_.abort();\n\t\t\tif (signal) {\n\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t}\n\t\t};\n\n\t\trequest_.on('error', error => {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${error.message}`, 'system', error));\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(request_, error => {\n\t\t\tif (response && response.body) {\n\t\t\t\tresponse.body.destroy(error);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (process.version < 'v14') {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\trequest_.on('socket', s => {\n\t\t\t\tlet endedWithEventsCount;\n\t\t\t\ts.prependListener('end', () => {\n\t\t\t\t\tendedWithEventsCount = s._eventsCount;\n\t\t\t\t});\n\t\t\t\ts.prependListener('close', hadError => {\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && endedWithEventsCount < s._eventsCount && !hadError) {\n\t\t\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\trequest_.on('response', response_ => {\n\t\t\trequest_.setTimeout(0);\n\t\t\tconst headers = fromRawHeaders(response_.rawHeaders);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (isRedirect(response_.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL(location, request.url);\n\t\t\t\t} catch {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// Nothing to do\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow': {\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOptions = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: clone(request),\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\tsize: request.size,\n\t\t\t\t\t\t\treferrer: request.referrer,\n\t\t\t\t\t\t\treferrerPolicy: request.referrerPolicy\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// when forwarding sensitive headers like \"Authorization\",\n\t\t\t\t\t\t// \"WWW-Authenticate\", and \"Cookie\" to untrusted targets,\n\t\t\t\t\t\t// headers will be ignored when following a redirect to a domain\n\t\t\t\t\t\t// that is not a subdomain match or exact match of the initial domain.\n\t\t\t\t\t\t// For example, a redirect from \"foo.com\" to either \"foo.com\" or \"sub.foo.com\"\n\t\t\t\t\t\t// will forward the sensitive headers, but a redirect to \"bar.com\" will not.\n\t\t\t\t\t\t// headers will also be ignored when following a redirect to a domain using\n\t\t\t\t\t\t// a different protocol. For example, a redirect from \"https://foo.com\" to \"http://foo.com\"\n\t\t\t\t\t\t// will not forward the sensitive headers\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOptions.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (response_.statusCode !== 303 && request.body && options_.body instanceof Stream.Readable) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (response_.statusCode === 303 || ((response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST')) {\n\t\t\t\t\t\t\trequestOptions.method = 'GET';\n\t\t\t\t\t\t\trequestOptions.body = undefined;\n\t\t\t\t\t\t\trequestOptions.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 14\n\t\t\t\t\t\tconst responseReferrerPolicy = parseReferrerPolicyFromHeader(headers);\n\t\t\t\t\t\tif (responseReferrerPolicy) {\n\t\t\t\t\t\t\trequestOptions.referrerPolicy = responseReferrerPolicy;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOptions)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Prepare response\n\t\t\tif (signal) {\n\t\t\t\tresponse_.once('end', () => {\n\t\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet body = pump(response_, new PassThrough(), error => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// see https://github.com/nodejs/node/pull/29376\n\t\t\t/* c8 ignore next 3 */\n\t\t\tif (process.version < 'v12.10') {\n\t\t\t\tresponse_.on('aborted', abortAndFinalize);\n\t\t\t}\n\n\t\t\tconst responseOptions = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: response_.statusCode,\n\t\t\t\tstatusText: response_.statusMessage,\n\t\t\t\theaders,\n\t\t\t\tsize: request.size,\n\t\t\t\tcounter: request.counter,\n\t\t\t\thighWaterMark: request.highWaterMark\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// For gzip\n\t\t\tif (codings === 'gzip' || codings === 'x-gzip') {\n\t\t\t\tbody = pump(body, zlib.createGunzip(zlibOptions), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For deflate\n\t\t\tif (codings === 'deflate' || codings === 'x-deflate') {\n\t\t\t\t// Handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = pump(response_, new PassThrough(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\traw.once('data', chunk => {\n\t\t\t\t\t// See http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflate(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflateRaw(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.once('end', () => {\n\t\t\t\t\t// Some old IIS servers return zero-length OK deflate responses, so\n\t\t\t\t\t// 'data' is never emitted. See https://github.com/node-fetch/node-fetch/pull/903\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For br\n\t\t\tif (codings === 'br') {\n\t\t\t\tbody = pump(body, zlib.createBrotliDecompress(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, use response as-is\n\t\t\tresponse = new Response(body, responseOptions);\n\t\t\tresolve(response);\n\t\t});\n\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\twriteToStream(request_, request).catch(reject);\n\t});\n}\n\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tconst LAST_CHUNK = Buffer.from('0\\r\\n\\r\\n');\n\n\tlet isChunkedTransfer = false;\n\tlet properLastChunkReceived = false;\n\tlet previousChunk;\n\n\trequest.on('response', response => {\n\t\tconst {headers} = response;\n\t\tisChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];\n\t});\n\n\trequest.on('socket', socket => {\n\t\tconst onSocketClose = () => {\n\t\t\tif (isChunkedTransfer && !properLastChunkReceived) {\n\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\terrorCallback(error);\n\t\t\t}\n\t\t};\n\n\t\tconst onData = buf => {\n\t\t\tproperLastChunkReceived = Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;\n\n\t\t\t// Sometimes final 0-length chunk and end of message code are in separate packets\n\t\t\tif (!properLastChunkReceived && previousChunk) {\n\t\t\t\tproperLastChunkReceived = (\n\t\t\t\t\tBuffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 &&\n\t\t\t\t\tBuffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tpreviousChunk = buf;\n\t\t};\n\n\t\tsocket.prependListener('close', onSocketClose);\n\t\tsocket.on('data', onData);\n\n\t\trequest.on('close', () => {\n\t\t\tsocket.removeListener('close', onSocketClose);\n\t\t\tsocket.removeListener('data', onData);\n\t\t});\n\t});\n}\n",null,null,"\n/**\n * Body.js\n *\n * Body interface provides common methods for Request and Response\n */\n\nimport Stream, {PassThrough} from 'node:stream';\nimport {types, deprecate, promisify} from 'node:util';\nimport {Buffer} from 'node:buffer';\n\nimport Blob from 'fetch-blob';\nimport {FormData, formDataToBlob} from 'formdata-polyfill/esm.min.js';\n\nimport {FetchError} from './errors/fetch-error.js';\nimport {FetchBaseError} from './errors/base.js';\nimport {isBlob, isURLSearchParameters} from './utils/is.js';\n\nconst pipeline = promisify(Stream.pipeline);\nconst INTERNALS = Symbol('Body internals');\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Body {\n\tconstructor(body, {\n\t\tsize = 0\n\t} = {}) {\n\t\tlet boundary = null;\n\n\t\tif (body === null) {\n\t\t\t// Body is undefined or null\n\t\t\tbody = null;\n\t\t} else if (isURLSearchParameters(body)) {\n\t\t\t// Body is a URLSearchParams\n\t\t\tbody = Buffer.from(body.toString());\n\t\t} else if (isBlob(body)) {\n\t\t\t// Body is blob\n\t\t} else if (Buffer.isBuffer(body)) {\n\t\t\t// Body is Buffer\n\t\t} else if (types.isAnyArrayBuffer(body)) {\n\t\t\t// Body is ArrayBuffer\n\t\t\tbody = Buffer.from(body);\n\t\t} else if (ArrayBuffer.isView(body)) {\n\t\t\t// Body is ArrayBufferView\n\t\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t\t} else if (body instanceof Stream) {\n\t\t\t// Body is stream\n\t\t} else if (body instanceof FormData) {\n\t\t\t// Body is FormData\n\t\t\tbody = formDataToBlob(body);\n\t\t\tboundary = body.type.split('=')[1];\n\t\t} else {\n\t\t\t// None of the above\n\t\t\t// coerce to string then buffer\n\t\t\tbody = Buffer.from(String(body));\n\t\t}\n\n\t\tlet stream = body;\n\n\t\tif (Buffer.isBuffer(body)) {\n\t\t\tstream = Stream.Readable.from(body);\n\t\t} else if (isBlob(body)) {\n\t\t\tstream = Stream.Readable.from(body.stream());\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tbody,\n\t\t\tstream,\n\t\t\tboundary,\n\t\t\tdisturbed: false,\n\t\t\terror: null\n\t\t};\n\t\tthis.size = size;\n\n\t\tif (body instanceof Stream) {\n\t\t\tbody.on('error', error_ => {\n\t\t\t\tconst error = error_ instanceof FetchBaseError ?\n\t\t\t\t\terror_ :\n\t\t\t\t\tnew FetchError(`Invalid response body while trying to fetch ${this.url}: ${error_.message}`, 'system', error_);\n\t\t\t\tthis[INTERNALS].error = error;\n\t\t\t});\n\t\t}\n\t}\n\n\tget body() {\n\t\treturn this[INTERNALS].stream;\n\t}\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t}\n\n\t/**\n\t * Decode response as ArrayBuffer\n\t *\n\t * @return  Promise\n\t */\n\tasync arrayBuffer() {\n\t\tconst {buffer, byteOffset, byteLength} = await consumeBody(this);\n\t\treturn buffer.slice(byteOffset, byteOffset + byteLength);\n\t}\n\n\tasync formData() {\n\t\tconst ct = this.headers.get('content-type');\n\n\t\tif (ct.startsWith('application/x-www-form-urlencoded')) {\n\t\t\tconst formData = new FormData();\n\t\t\tconst parameters = new URLSearchParams(await this.text());\n\n\t\t\tfor (const [name, value] of parameters) {\n\t\t\t\tformData.append(name, value);\n\t\t\t}\n\n\t\t\treturn formData;\n\t\t}\n\n\t\tconst {toFormData} = await import('./utils/multipart-parser.js');\n\t\treturn toFormData(this.body, ct);\n\t}\n\n\t/**\n\t * Return raw response as Blob\n\t *\n\t * @return Promise\n\t */\n\tasync blob() {\n\t\tconst ct = (this.headers && this.headers.get('content-type')) || (this[INTERNALS].body && this[INTERNALS].body.type) || '';\n\t\tconst buf = await this.arrayBuffer();\n\n\t\treturn new Blob([buf], {\n\t\t\ttype: ct\n\t\t});\n\t}\n\n\t/**\n\t * Decode response as json\n\t *\n\t * @return  Promise\n\t */\n\tasync json() {\n\t\tconst text = await this.text();\n\t\treturn JSON.parse(text);\n\t}\n\n\t/**\n\t * Decode response as text\n\t *\n\t * @return  Promise\n\t */\n\tasync text() {\n\t\tconst buffer = await consumeBody(this);\n\t\treturn new TextDecoder().decode(buffer);\n\t}\n\n\t/**\n\t * Decode response as buffer (non-spec api)\n\t *\n\t * @return  Promise\n\t */\n\tbuffer() {\n\t\treturn consumeBody(this);\n\t}\n}\n\nBody.prototype.buffer = deprecate(Body.prototype.buffer, 'Please use \\'response.arrayBuffer()\\' instead of \\'response.buffer()\\'', 'node-fetch#buffer');\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: {enumerable: true},\n\tbodyUsed: {enumerable: true},\n\tarrayBuffer: {enumerable: true},\n\tblob: {enumerable: true},\n\tjson: {enumerable: true},\n\ttext: {enumerable: true},\n\tdata: {get: deprecate(() => {},\n\t\t'data doesn\\'t exist, use json(), text(), arrayBuffer(), or body instead',\n\t\t'https://github.com/node-fetch/node-fetch/issues/1000 (response)')}\n});\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return Promise\n */\nasync function consumeBody(data) {\n\tif (data[INTERNALS].disturbed) {\n\t\tthrow new TypeError(`body used already for: ${data.url}`);\n\t}\n\n\tdata[INTERNALS].disturbed = true;\n\n\tif (data[INTERNALS].error) {\n\t\tthrow data[INTERNALS].error;\n\t}\n\n\tconst {body} = data;\n\n\t// Body is null\n\tif (body === null) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t/* c8 ignore next 3 */\n\tif (!(body instanceof Stream)) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t// Body is stream\n\t// get ready to actually consume the body\n\tconst accum = [];\n\tlet accumBytes = 0;\n\n\ttry {\n\t\tfor await (const chunk of body) {\n\t\t\tif (data.size > 0 && accumBytes + chunk.length > data.size) {\n\t\t\t\tconst error = new FetchError(`content size at ${data.url} over limit: ${data.size}`, 'max-size');\n\t\t\t\tbody.destroy(error);\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t}\n\t} catch (error) {\n\t\tconst error_ = error instanceof FetchBaseError ? error : new FetchError(`Invalid response body while trying to fetch ${data.url}: ${error.message}`, 'system', error);\n\t\tthrow error_;\n\t}\n\n\tif (body.readableEnded === true || body._readableState.ended === true) {\n\t\ttry {\n\t\t\tif (accum.every(c => typeof c === 'string')) {\n\t\t\t\treturn Buffer.from(accum.join(''));\n\t\t\t}\n\n\t\t\treturn Buffer.concat(accum, accumBytes);\n\t\t} catch (error) {\n\t\t\tthrow new FetchError(`Could not create Buffer from response body for ${data.url}: ${error.message}`, 'system', error);\n\t\t}\n\t} else {\n\t\tthrow new FetchError(`Premature close of server response while trying to fetch ${data.url}`);\n\t}\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed   instance       Response or Request instance\n * @param   String  highWaterMark  highWaterMark for both PassThrough body streams\n * @return  Mixed\n */\nexport const clone = (instance, highWaterMark) => {\n\tlet p1;\n\tlet p2;\n\tlet {body} = instance[INTERNALS];\n\n\t// Don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// Check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif ((body instanceof Stream) && (typeof body.getBoundary !== 'function')) {\n\t\t// Tee instance body\n\t\tp1 = new PassThrough({highWaterMark});\n\t\tp2 = new PassThrough({highWaterMark});\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// Set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].stream = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n};\n\nconst getNonSpecFormDataBoundary = deprecate(\n\tbody => body.getBoundary(),\n\t'form-data doesn\\'t follow the spec and requires special treatment. Use alternative package',\n\t'https://github.com/node-fetch/node-fetch/issues/1167'\n);\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param {any} body Any options.body input\n * @returns {string | null}\n */\nexport const extractContentType = (body, request) => {\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn null;\n\t}\n\n\t// Body is string\n\tif (typeof body === 'string') {\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n\n\t// Body is a URLSearchParams\n\tif (isURLSearchParameters(body)) {\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t}\n\n\t// Body is blob\n\tif (isBlob(body)) {\n\t\treturn body.type || null;\n\t}\n\n\t// Body is a Buffer (Buffer, ArrayBuffer or ArrayBufferView)\n\tif (Buffer.isBuffer(body) || types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {\n\t\treturn null;\n\t}\n\n\tif (body instanceof FormData) {\n\t\treturn `multipart/form-data; boundary=${request[INTERNALS].boundary}`;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getBoundary === 'function') {\n\t\treturn `multipart/form-data;boundary=${getNonSpecFormDataBoundary(body)}`;\n\t}\n\n\t// Body is stream - can't really do much about this\n\tif (body instanceof Stream) {\n\t\treturn null;\n\t}\n\n\t// Body constructor defaults other things to string\n\treturn 'text/plain;charset=UTF-8';\n};\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param {any} obj.body Body object from the Body instance.\n * @returns {number | null}\n */\nexport const getTotalBytes = request => {\n\tconst {body} = request[INTERNALS];\n\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn 0;\n\t}\n\n\t// Body is Blob\n\tif (isBlob(body)) {\n\t\treturn body.size;\n\t}\n\n\t// Body is Buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn body.length;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getLengthSync === 'function') {\n\t\treturn body.hasKnownLength && body.hasKnownLength() ? body.getLengthSync() : null;\n\t}\n\n\t// Body is stream\n\treturn null;\n};\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param {Stream.Writable} dest The stream to write to.\n * @param obj.body Body object from the Body instance.\n * @returns {Promise<void>}\n */\nexport const writeToStream = async (dest, {body}) => {\n\tif (body === null) {\n\t\t// Body is null\n\t\tdest.end();\n\t} else {\n\t\t// Body is stream\n\t\tawait pipeline(body, dest);\n\t}\n};\n","\nimport {FetchBaseError} from './base.js';\n\n/**\n * @typedef {{ address?: string, code: string, dest?: string, errno: number, info?: object, message: string, path?: string, port?: number, syscall: string}} SystemError\n*/\n\n/**\n * FetchError interface for operational errors\n */\nexport class FetchError extends FetchBaseError {\n\t/**\n\t * @param  {string} message -      Error message for human\n\t * @param  {string} [type] -        Error type for machine\n\t * @param  {SystemError} [systemError] - For Node.js system error\n\t */\n\tconstructor(message, type, systemError) {\n\t\tsuper(message, type);\n\t\t// When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code\n\t\tif (systemError) {\n\t\t\t// eslint-disable-next-line no-multi-assign\n\t\t\tthis.code = this.errno = systemError.code;\n\t\t\tthis.erroredSysCall = systemError.syscall;\n\t\t}\n\t}\n}\n","export class FetchBaseError extends Error {\n\tconstructor(message, type) {\n\t\tsuper(message);\n\t\t// Hide custom error implementation details from end-users\n\t\tError.captureStackTrace(this, this.constructor);\n\n\t\tthis.type = type;\n\t}\n\n\tget name() {\n\t\treturn this.constructor.name;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n}\n","/**\n * Is.js\n *\n * Object type checks.\n */\n\nconst NAME = Symbol.toStringTag;\n\n/**\n * Check if `obj` is a URLSearchParams object\n * ref: https://github.com/node-fetch/node-fetch/issues/296#issuecomment-307598143\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isURLSearchParameters = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.append === 'function' &&\n\t\ttypeof object.delete === 'function' &&\n\t\ttypeof object.get === 'function' &&\n\t\ttypeof object.getAll === 'function' &&\n\t\ttypeof object.has === 'function' &&\n\t\ttypeof object.set === 'function' &&\n\t\ttypeof object.sort === 'function' &&\n\t\tobject[NAME] === 'URLSearchParams'\n\t);\n};\n\n/**\n * Check if `object` is a W3C `Blob` object (which `File` inherits from)\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isBlob = object => {\n\treturn (\n\t\tobject &&\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.arrayBuffer === 'function' &&\n\t\ttypeof object.type === 'string' &&\n\t\ttypeof object.stream === 'function' &&\n\t\ttypeof object.constructor === 'function' &&\n\t\t/^(Blob|File)$/.test(object[NAME])\n\t);\n};\n\n/**\n * Check if `obj` is an instance of AbortSignal.\n * @param {*} object - Object to check for\n * @return {boolean}\n */\nexport const isAbortSignal = object => {\n\treturn (\n\t\ttypeof object === 'object' && (\n\t\t\tobject[NAME] === 'AbortSignal' ||\n\t\t\tobject[NAME] === 'EventTarget'\n\t\t)\n\t);\n};\n\n/**\n * isDomainOrSubdomain reports whether sub is a subdomain (or exact match) of\n * the parent domain.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nexport const isDomainOrSubdomain = (destination, original) => {\n\tconst orig = new URL(original).hostname;\n\tconst dest = new URL(destination).hostname;\n\n\treturn orig === dest || orig.endsWith(`.${dest}`);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nexport const isSameProtocol = (destination, original) => {\n\tconst orig = new URL(original).protocol;\n\tconst dest = new URL(destination).protocol;\n\n\treturn orig === dest;\n};\n","/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType} from './body.js';\nimport {isRedirect} from './utils/is-redirect.js';\n\nconst INTERNALS = Symbol('Response internals');\n\n/**\n * Response class\n *\n * Ref: https://fetch.spec.whatwg.org/#response-class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Response extends Body {\n\tconstructor(body = null, options = {}) {\n\t\tsuper(body, options);\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq, no-negated-condition\n\t\tconst status = options.status != null ? options.status : 200;\n\n\t\tconst headers = new Headers(options.headers);\n\n\t\tif (body !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\ttype: 'default',\n\t\t\turl: options.url,\n\t\t\tstatus,\n\t\t\tstatusText: options.statusText || '',\n\t\t\theaders,\n\t\t\tcounter: options.counter,\n\t\t\thighWaterMark: options.highWaterMark\n\t\t};\n\t}\n\n\tget type() {\n\t\treturn this[INTERNALS].type;\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS].status;\n\t}\n\n\t/**\n\t * Convenience property representing if the request ended normally\n\t */\n\tget ok() {\n\t\treturn this[INTERNALS].status >= 200 && this[INTERNALS].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget highWaterMark() {\n\t\treturn this[INTERNALS].highWaterMark;\n\t}\n\n\t/**\n\t * Clone this response\n\t *\n\t * @return  Response\n\t */\n\tclone() {\n\t\treturn new Response(clone(this, this.highWaterMark), {\n\t\t\ttype: this.type,\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected,\n\t\t\tsize: this.size,\n\t\t\thighWaterMark: this.highWaterMark\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} url    The URL that the new response is to originate from.\n\t * @param {number} status An optional status code for the response (e.g., 302.)\n\t * @returns {Response}    A Response object.\n\t */\n\tstatic redirect(url, status = 302) {\n\t\tif (!isRedirect(status)) {\n\t\t\tthrow new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n\t\t}\n\n\t\treturn new Response(null, {\n\t\t\theaders: {\n\t\t\t\tlocation: new URL(url).toString()\n\t\t\t},\n\t\t\tstatus\n\t\t});\n\t}\n\n\tstatic error() {\n\t\tconst response = new Response(null, {status: 0, statusText: ''});\n\t\tresponse[INTERNALS].type = 'error';\n\t\treturn response;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Response';\n\t}\n}\n\nObject.defineProperties(Response.prototype, {\n\ttype: {enumerable: true},\n\turl: {enumerable: true},\n\tstatus: {enumerable: true},\n\tok: {enumerable: true},\n\tredirected: {enumerable: true},\n\tstatusText: {enumerable: true},\n\theaders: {enumerable: true},\n\tclone: {enumerable: true}\n});\n","/**\n * Headers.js\n *\n * Headers class offers convenient helpers\n */\n\nimport {types} from 'node:util';\nimport http from 'node:http';\n\n/* c8 ignore next 9 */\nconst validateHeaderName = typeof http.validateHeaderName === 'function' ?\n\thttp.validateHeaderName :\n\tname => {\n\t\tif (!/^[\\^`\\-\\w!#$%&'*+.|~]+$/.test(name)) {\n\t\t\tconst error = new TypeError(`Header name must be a valid HTTP token [${name}]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_HTTP_TOKEN'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/* c8 ignore next 9 */\nconst validateHeaderValue = typeof http.validateHeaderValue === 'function' ?\n\thttp.validateHeaderValue :\n\t(name, value) => {\n\t\tif (/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(value)) {\n\t\t\tconst error = new TypeError(`Invalid character in header content [\"${name}\"]`);\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_CHAR'});\n\t\t\tthrow error;\n\t\t}\n\t};\n\n/**\n * @typedef {Headers | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>} HeadersInit\n */\n\n/**\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers.\n * These actions include retrieving, setting, adding to, and removing.\n * A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.\n * You can add to this using methods like append() (see Examples.)\n * In all methods of this interface, header names are matched by case-insensitive byte sequence.\n *\n */\nexport default class Headers extends URLSearchParams {\n\t/**\n\t * Headers class\n\t *\n\t * @constructor\n\t * @param {HeadersInit} [init] - Response headers\n\t */\n\tconstructor(init) {\n\t\t// Validate and normalize init object in [name, value(s)][]\n\t\t/** @type {string[][]} */\n\t\tlet result = [];\n\t\tif (init instanceof Headers) {\n\t\t\tconst raw = init.raw();\n\t\t\tfor (const [name, values] of Object.entries(raw)) {\n\t\t\t\tresult.push(...values.map(value => [name, value]));\n\t\t\t}\n\t\t} else if (init == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\t\t// No op\n\t\t} else if (typeof init === 'object' && !types.isBoxedPrimitive(init)) {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\t\tif (method == null) {\n\t\t\t\t// Record<ByteString, ByteString>\n\t\t\t\tresult.push(...Object.entries(init));\n\t\t\t} else {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// Sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tresult = [...init]\n\t\t\t\t\t.map(pair => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof pair !== 'object' || types.isBoxedPrimitive(pair)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be an iterable object');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t}).map(pair => {\n\t\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Failed to construct \\'Headers\\': The provided value is not of type \\'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)');\n\t\t}\n\n\t\t// Validate and lowercase\n\t\tresult =\n\t\t\tresult.length > 0 ?\n\t\t\t\tresult.map(([name, value]) => {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn [String(name).toLowerCase(), String(value)];\n\t\t\t\t}) :\n\t\t\t\tundefined;\n\n\t\tsuper(result);\n\n\t\t// Returning a Proxy that will lowercase key names, validate parameters and sort keys\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn new Proxy(this, {\n\t\t\tget(target, p, receiver) {\n\t\t\t\tswitch (p) {\n\t\t\t\t\tcase 'append':\n\t\t\t\t\tcase 'set':\n\t\t\t\t\t\treturn (name, value) => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase(),\n\t\t\t\t\t\t\t\tString(value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'delete':\n\t\t\t\t\tcase 'has':\n\t\t\t\t\tcase 'getAll':\n\t\t\t\t\t\treturn name => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tString(name).toLowerCase()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'keys':\n\t\t\t\t\t\treturn () => {\n\t\t\t\t\t\t\ttarget.sort();\n\t\t\t\t\t\t\treturn new Set(URLSearchParams.prototype.keys.call(target)).keys();\n\t\t\t\t\t\t};\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn Reflect.get(target, p, receiver);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t/* c8 ignore next */\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n\n\ttoString() {\n\t\treturn Object.prototype.toString.call(this);\n\t}\n\n\tget(name) {\n\t\tconst values = this.getAll(name);\n\t\tif (values.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = values.join(', ');\n\t\tif (/^content-encoding$/i.test(name)) {\n\t\t\tvalue = value.toLowerCase();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tforEach(callback, thisArg = undefined) {\n\t\tfor (const name of this.keys()) {\n\t\t\tReflect.apply(callback, thisArg, [this.get(name), name, this]);\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield this.get(name);\n\t\t}\n\t}\n\n\t/**\n\t * @type {() => IterableIterator<[string, string]>}\n\t */\n\t* entries() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield [name, this.get(name)];\n\t\t}\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.entries();\n\t}\n\n\t/**\n\t * Node-fetch non-spec method\n\t * returning all headers and their values as array\n\t * @returns {Record<string, string[]>}\n\t */\n\traw() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tresult[key] = this.getAll(key);\n\t\t\treturn result;\n\t\t}, {});\n\t}\n\n\t/**\n\t * For better console.log(headers) and also to convert Headers into Node.js Request compatible format\n\t */\n\t[Symbol.for('nodejs.util.inspect.custom')]() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tconst values = this.getAll(key);\n\t\t\t// Http.request() only supports string as Host header.\n\t\t\t// This hack makes specifying custom Host header possible.\n\t\t\tif (key === 'host') {\n\t\t\t\tresult[key] = values[0];\n\t\t\t} else {\n\t\t\t\tresult[key] = values.length > 1 ? values : values[0];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, {});\n\t}\n}\n\n/**\n * Re-shaping object for Web IDL tests\n * Only need to do it for overridden methods\n */\nObject.defineProperties(\n\tHeaders.prototype,\n\t['get', 'entries', 'forEach', 'values'].reduce((result, property) => {\n\t\tresult[property] = {enumerable: true};\n\t\treturn result;\n\t}, {})\n);\n\n/**\n * Create a Headers object from an http.IncomingMessage.rawHeaders, ignoring those that do\n * not conform to HTTP grammar productions.\n * @param {import('http').IncomingMessage['rawHeaders']} headers\n */\nexport function fromRawHeaders(headers = []) {\n\treturn new Headers(\n\t\theaders\n\t\t\t// Split into pairs\n\t\t\t.reduce((result, value, index, array) => {\n\t\t\t\tif (index % 2 === 0) {\n\t\t\t\t\tresult.push(array.slice(index, index + 2));\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t\t.filter(([name, value]) => {\n\t\t\t\ttry {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn true;\n\t\t\t\t} catch {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\n\t);\n}\n","const redirectStatus = new Set([301, 302, 303, 307, 308]);\n\n/**\n * Redirect code matching\n *\n * @param {number} code - Status code\n * @return {boolean}\n */\nexport const isRedirect = code => {\n\treturn redirectStatus.has(code);\n};\n","/**\n * Request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport {format as formatUrl} from 'node:url';\nimport {deprecate} from 'node:util';\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType, getTotalBytes} from './body.js';\nimport {isAbortSignal} from './utils/is.js';\nimport {getSearch} from './utils/get-search.js';\nimport {\n\tvalidateReferrerPolicy, determineRequestsReferrer, DEFAULT_REFERRER_POLICY\n} from './utils/referrer.js';\n\nconst INTERNALS = Symbol('Request internals');\n\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {*} object\n * @return {boolean}\n */\nconst isRequest = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object[INTERNALS] === 'object'\n\t);\n};\n\nconst doBadDataWarn = deprecate(() => {},\n\t'.data is not a valid RequestInit property, use .body instead',\n\t'https://github.com/node-fetch/node-fetch/issues/1000 (request)');\n\n/**\n * Request class\n *\n * Ref: https://fetch.spec.whatwg.org/#request-class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nexport default class Request extends Body {\n\tconstructor(input, init = {}) {\n\t\tlet parsedURL;\n\n\t\t// Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n\t\tif (isRequest(input)) {\n\t\t\tparsedURL = new URL(input.url);\n\t\t} else {\n\t\t\tparsedURL = new URL(input);\n\t\t\tinput = {};\n\t\t}\n\n\t\tif (parsedURL.username !== '' || parsedURL.password !== '') {\n\t\t\tthrow new TypeError(`${parsedURL} is an url with embedded credentials.`);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tif (/^(delete|get|head|options|post|put)$/i.test(method)) {\n\t\t\tmethod = method.toUpperCase();\n\t\t}\n\n\t\tif (!isRequest(init) && 'data' in init) {\n\t\t\tdoBadDataWarn();\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif ((init.body != null || (isRequest(input) && input.body !== null)) &&\n\t\t\t(method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tconst inputBody = init.body ?\n\t\t\tinit.body :\n\t\t\t(isRequest(input) && input.body !== null ?\n\t\t\t\tclone(input) :\n\t\t\t\tnull);\n\n\t\tsuper(inputBody, {\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.set('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ?\n\t\t\tinput.signal :\n\t\t\tnull;\n\t\tif ('signal' in init) {\n\t\t\tsignal = init.signal;\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n\t\t}\n\n\t\t// §5.4, Request constructor steps, step 15.1\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tlet referrer = init.referrer == null ? input.referrer : init.referrer;\n\t\tif (referrer === '') {\n\t\t\t// §5.4, Request constructor steps, step 15.2\n\t\t\treferrer = 'no-referrer';\n\t\t} else if (referrer) {\n\t\t\t// §5.4, Request constructor steps, step 15.3.1, 15.3.2\n\t\t\tconst parsedReferrer = new URL(referrer);\n\t\t\t// §5.4, Request constructor steps, step 15.3.3, 15.3.4\n\t\t\treferrer = /^about:(\\/\\/)?client$/.test(parsedReferrer) ? 'client' : parsedReferrer;\n\t\t} else {\n\t\t\treferrer = undefined;\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal,\n\t\t\treferrer\n\t\t};\n\n\t\t// Node-fetch-only options\n\t\tthis.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;\n\t\tthis.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t\tthis.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n\t\tthis.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n\n\t\t// §5.4, Request constructor steps, step 16.\n\t\t// Default is empty string per https://fetch.spec.whatwg.org/#concept-request-referrer-policy\n\t\tthis.referrerPolicy = init.referrerPolicy || input.referrerPolicy || '';\n\t}\n\n\t/** @returns {string} */\n\tget method() {\n\t\treturn this[INTERNALS].method;\n\t}\n\n\t/** @returns {string} */\n\tget url() {\n\t\treturn formatUrl(this[INTERNALS].parsedURL);\n\t}\n\n\t/** @returns {Headers} */\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS].redirect;\n\t}\n\n\t/** @returns {AbortSignal} */\n\tget signal() {\n\t\treturn this[INTERNALS].signal;\n\t}\n\n\t// https://fetch.spec.whatwg.org/#dom-request-referrer\n\tget referrer() {\n\t\tif (this[INTERNALS].referrer === 'no-referrer') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer === 'client') {\n\t\t\treturn 'about:client';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer) {\n\t\t\treturn this[INTERNALS].referrer.toString();\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget referrerPolicy() {\n\t\treturn this[INTERNALS].referrerPolicy;\n\t}\n\n\tset referrerPolicy(referrerPolicy) {\n\t\tthis[INTERNALS].referrerPolicy = validateReferrerPolicy(referrerPolicy);\n\t}\n\n\t/**\n\t * Clone this request\n\t *\n\t * @return  Request\n\t */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Request';\n\t}\n}\n\nObject.defineProperties(Request.prototype, {\n\tmethod: {enumerable: true},\n\turl: {enumerable: true},\n\theaders: {enumerable: true},\n\tredirect: {enumerable: true},\n\tclone: {enumerable: true},\n\tsignal: {enumerable: true},\n\treferrer: {enumerable: true},\n\treferrerPolicy: {enumerable: true}\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param {Request} request - A Request instance\n * @return The options object to be passed to http.request\n */\nexport const getNodeRequestOptions = request => {\n\tconst {parsedURL} = request[INTERNALS];\n\tconst headers = new Headers(request[INTERNALS].headers);\n\n\t// Fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body === null && /^(post|put)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\n\tif (request.body !== null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\t// Set Content-Length if totalBytes is a number (that is not NaN)\n\t\tif (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// 4.1. Main fetch, step 2.6\n\t// > If request's referrer policy is the empty string, then set request's referrer policy to the\n\t// > default referrer policy.\n\tif (request.referrerPolicy === '') {\n\t\trequest.referrerPolicy = DEFAULT_REFERRER_POLICY;\n\t}\n\n\t// 4.1. Main fetch, step 2.7\n\t// > If request's referrer is not \"no-referrer\", set request's referrer to the result of invoking\n\t// > determine request's referrer.\n\tif (request.referrer && request.referrer !== 'no-referrer') {\n\t\trequest[INTERNALS].referrer = determineRequestsReferrer(request);\n\t} else {\n\t\trequest[INTERNALS].referrer = 'no-referrer';\n\t}\n\n\t// 4.5. HTTP-network-or-cache fetch, step 6.9\n\t// > If httpRequest's referrer is a URL, then append `Referer`/httpRequest's referrer, serialized\n\t// >  and isomorphic encoded, to httpRequest's header list.\n\tif (request[INTERNALS].referrer instanceof URL) {\n\t\theaders.set('Referer', request.referrer);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip, deflate, br');\n\t}\n\n\tlet {agent} = request;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\tconst search = getSearch(parsedURL);\n\n\t// Pass the full URL directly to request(), but overwrite the following\n\t// options:\n\tconst options = {\n\t\t// Overwrite search to retain trailing ? (issue #776)\n\t\tpath: parsedURL.pathname + search,\n\t\t// The following options are not expressed in the URL\n\t\tmethod: request.method,\n\t\theaders: headers[Symbol.for('nodejs.util.inspect.custom')](),\n\t\tinsecureHTTPParser: request.insecureHTTPParser,\n\t\tagent\n\t};\n\n\treturn {\n\t\t/** @type {URL} */\n\t\tparsedURL,\n\t\toptions\n\t};\n};\n","export const getSearch = parsedURL => {\n\tif (parsedURL.search) {\n\t\treturn parsedURL.search;\n\t}\n\n\tconst lastOffset = parsedURL.href.length - 1;\n\tconst hash = parsedURL.hash || (parsedURL.href[lastOffset] === '#' ? '#' : '');\n\treturn parsedURL.href[lastOffset - hash.length] === '?' ? '?' : '';\n};\n","import {isIP} from 'node:net';\n\n/**\n * @external URL\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/URL|URL}\n */\n\n/**\n * @module utils/referrer\n * @private\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#strip-url|Referrer Policy §8.4. Strip url for use as a referrer}\n * @param {string} URL\n * @param {boolean} [originOnly=false]\n */\nexport function stripURLForUseAsAReferrer(url, originOnly = false) {\n\t// 1. If url is null, return no referrer.\n\tif (url == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\treturn 'no-referrer';\n\t}\n\n\turl = new URL(url);\n\n\t// 2. If url's scheme is a local scheme, then return no referrer.\n\tif (/^(about|blob|data):$/.test(url.protocol)) {\n\t\treturn 'no-referrer';\n\t}\n\n\t// 3. Set url's username to the empty string.\n\turl.username = '';\n\n\t// 4. Set url's password to null.\n\t// Note: `null` appears to be a mistake as this actually results in the password being `\"null\"`.\n\turl.password = '';\n\n\t// 5. Set url's fragment to null.\n\t// Note: `null` appears to be a mistake as this actually results in the fragment being `\"#null\"`.\n\turl.hash = '';\n\n\t// 6. If the origin-only flag is true, then:\n\tif (originOnly) {\n\t\t// 6.1. Set url's path to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the path being `\"/null\"`.\n\t\turl.pathname = '';\n\n\t\t// 6.2. Set url's query to null.\n\t\t// Note: `null` appears to be a mistake as this actually results in the query being `\"?null\"`.\n\t\turl.search = '';\n\t}\n\n\t// 7. Return url.\n\treturn url;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#enumdef-referrerpolicy|enum ReferrerPolicy}\n */\nexport const ReferrerPolicy = new Set([\n\t'',\n\t'no-referrer',\n\t'no-referrer-when-downgrade',\n\t'same-origin',\n\t'origin',\n\t'strict-origin',\n\t'origin-when-cross-origin',\n\t'strict-origin-when-cross-origin',\n\t'unsafe-url'\n]);\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#default-referrer-policy|default referrer policy}\n */\nexport const DEFAULT_REFERRER_POLICY = 'strict-origin-when-cross-origin';\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#referrer-policies|Referrer Policy §3. Referrer Policies}\n * @param {string} referrerPolicy\n * @returns {string} referrerPolicy\n */\nexport function validateReferrerPolicy(referrerPolicy) {\n\tif (!ReferrerPolicy.has(referrerPolicy)) {\n\t\tthrow new TypeError(`Invalid referrerPolicy: ${referrerPolicy}`);\n\t}\n\n\treturn referrerPolicy;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-origin-trustworthy|Referrer Policy §3.2. Is origin potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isOriginPotentiallyTrustworthy(url) {\n\t// 1. If origin is an opaque origin, return \"Not Trustworthy\".\n\t// Not applicable\n\n\t// 2. Assert: origin is a tuple origin.\n\t// Not for implementations\n\n\t// 3. If origin's scheme is either \"https\" or \"wss\", return \"Potentially Trustworthy\".\n\tif (/^(http|ws)s:$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 4. If origin's host component matches one of the CIDR notations 127.0.0.0/8 or ::1/128 [RFC4632], return \"Potentially Trustworthy\".\n\tconst hostIp = url.host.replace(/(^\\[)|(]$)/g, '');\n\tconst hostIPVersion = isIP(hostIp);\n\n\tif (hostIPVersion === 4 && /^127\\./.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\tif (hostIPVersion === 6 && /^(((0+:){7})|(::(0+:){0,6}))0*1$/.test(hostIp)) {\n\t\treturn true;\n\t}\n\n\t// 5. If origin's host component is \"localhost\" or falls within \".localhost\", and the user agent conforms to the name resolution rules in [let-localhost-be-localhost], return \"Potentially Trustworthy\".\n\t// We are returning FALSE here because we cannot ensure conformance to\n\t// let-localhost-be-loalhost (https://tools.ietf.org/html/draft-west-let-localhost-be-localhost)\n\tif (url.host === 'localhost' || url.host.endsWith('.localhost')) {\n\t\treturn false;\n\t}\n\n\t// 6. If origin's scheme component is file, return \"Potentially Trustworthy\".\n\tif (url.protocol === 'file:') {\n\t\treturn true;\n\t}\n\n\t// 7. If origin's scheme component is one which the user agent considers to be authenticated, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 8. If origin has been configured as a trustworthy origin, return \"Potentially Trustworthy\".\n\t// Not supported\n\n\t// 9. Return \"Not Trustworthy\".\n\treturn false;\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-url-trustworthy|Referrer Policy §3.3. Is url potentially trustworthy?}\n * @param {external:URL} url\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\n */\nexport function isUrlPotentiallyTrustworthy(url) {\n\t// 1. If url is \"about:blank\" or \"about:srcdoc\", return \"Potentially Trustworthy\".\n\tif (/^about:(blank|srcdoc)$/.test(url)) {\n\t\treturn true;\n\t}\n\n\t// 2. If url's scheme is \"data\", return \"Potentially Trustworthy\".\n\tif (url.protocol === 'data:') {\n\t\treturn true;\n\t}\n\n\t// Note: The origin of blob: and filesystem: URLs is the origin of the context in which they were\n\t// created. Therefore, blobs created in a trustworthy origin will themselves be potentially\n\t// trustworthy.\n\tif (/^(blob|filesystem):$/.test(url.protocol)) {\n\t\treturn true;\n\t}\n\n\t// 3. Return the result of executing §3.2 Is origin potentially trustworthy? on url's origin.\n\treturn isOriginPotentiallyTrustworthy(url);\n}\n\n/**\n * Modifies the referrerURL to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerURLCallback\n * @param {external:URL} referrerURL\n * @returns {external:URL} modified referrerURL\n */\n\n/**\n * Modifies the referrerOrigin to enforce any extra security policy considerations.\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7\n * @callback module:utils/referrer~referrerOriginCallback\n * @param {external:URL} referrerOrigin\n * @returns {external:URL} modified referrerOrigin\n */\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}\n * @param {Request} request\n * @param {object} o\n * @param {module:utils/referrer~referrerURLCallback} o.referrerURLCallback\n * @param {module:utils/referrer~referrerOriginCallback} o.referrerOriginCallback\n * @returns {external:URL} Request's referrer\n */\nexport function determineRequestsReferrer(request, {referrerURLCallback, referrerOriginCallback} = {}) {\n\t// There are 2 notes in the specification about invalid pre-conditions.  We return null, here, for\n\t// these cases:\n\t// > Note: If request's referrer is \"no-referrer\", Fetch will not call into this algorithm.\n\t// > Note: If request's referrer policy is the empty string, Fetch will not call into this\n\t// > algorithm.\n\tif (request.referrer === 'no-referrer' || request.referrerPolicy === '') {\n\t\treturn null;\n\t}\n\n\t// 1. Let policy be request's associated referrer policy.\n\tconst policy = request.referrerPolicy;\n\n\t// 2. Let environment be request's client.\n\t// not applicable to node.js\n\n\t// 3. Switch on request's referrer:\n\tif (request.referrer === 'about:client') {\n\t\treturn 'no-referrer';\n\t}\n\n\t// \"a URL\": Let referrerSource be request's referrer.\n\tconst referrerSource = request.referrer;\n\n\t// 4. Let request's referrerURL be the result of stripping referrerSource for use as a referrer.\n\tlet referrerURL = stripURLForUseAsAReferrer(referrerSource);\n\n\t// 5. Let referrerOrigin be the result of stripping referrerSource for use as a referrer, with the\n\t//    origin-only flag set to true.\n\tlet referrerOrigin = stripURLForUseAsAReferrer(referrerSource, true);\n\n\t// 6. If the result of serializing referrerURL is a string whose length is greater than 4096, set\n\t//    referrerURL to referrerOrigin.\n\tif (referrerURL.toString().length > 4096) {\n\t\treferrerURL = referrerOrigin;\n\t}\n\n\t// 7. The user agent MAY alter referrerURL or referrerOrigin at this point to enforce arbitrary\n\t//    policy considerations in the interests of minimizing data leakage. For example, the user\n\t//    agent could strip the URL down to an origin, modify its host, replace it with an empty\n\t//    string, etc.\n\tif (referrerURLCallback) {\n\t\treferrerURL = referrerURLCallback(referrerURL);\n\t}\n\n\tif (referrerOriginCallback) {\n\t\treferrerOrigin = referrerOriginCallback(referrerOrigin);\n\t}\n\n\t// 8.Execute the statements corresponding to the value of policy:\n\tconst currentURL = new URL(request.url);\n\n\tswitch (policy) {\n\t\tcase 'no-referrer':\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin':\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'unsafe-url':\n\t\t\treturn referrerURL;\n\n\t\tcase 'strict-origin':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerOrigin.\n\t\t\treturn referrerOrigin.toString();\n\n\t\tcase 'strict-origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 3. Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'same-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// 2. Return no referrer.\n\t\t\treturn 'no-referrer';\n\n\t\tcase 'origin-when-cross-origin':\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\n\t\t\t//    return referrerURL.\n\t\t\tif (referrerURL.origin === currentURL.origin) {\n\t\t\t\treturn referrerURL;\n\t\t\t}\n\n\t\t\t// Return referrerOrigin.\n\t\t\treturn referrerOrigin;\n\n\t\tcase 'no-referrer-when-downgrade':\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\n\t\t\t//    potentially trustworthy URL, then return no referrer.\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\n\t\t\t\treturn 'no-referrer';\n\t\t\t}\n\n\t\t\t// 2. Return referrerURL.\n\t\t\treturn referrerURL;\n\n\t\tdefault:\n\t\t\tthrow new TypeError(`Invalid referrerPolicy: ${policy}`);\n\t}\n}\n\n/**\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#parse-referrer-policy-from-header|Referrer Policy §8.1. Parse a referrer policy from a Referrer-Policy header}\n * @param {Headers} headers Response headers\n * @returns {string} policy\n */\nexport function parseReferrerPolicyFromHeader(headers) {\n\t// 1. Let policy-tokens be the result of extracting header list values given `Referrer-Policy`\n\t//    and response’s header list.\n\tconst policyTokens = (headers.get('referrer-policy') || '').split(/[,\\s]+/);\n\n\t// 2. Let policy be the empty string.\n\tlet policy = '';\n\n\t// 3. For each token in policy-tokens, if token is a referrer policy and token is not the empty\n\t//    string, then set policy to token.\n\t// Note: This algorithm loops over multiple policy values to allow deployment of new policy\n\t// values with fallbacks for older user agents, as described in § 11.1 Unknown Policy Values.\n\tfor (const token of policyTokens) {\n\t\tif (token && ReferrerPolicy.has(token)) {\n\t\t\tpolicy = token;\n\t\t}\n\t}\n\n\t// 4. Return policy.\n\treturn policy;\n}\n","import {FetchBaseError} from './base.js';\n\n/**\n * AbortError interface for cancelled requests\n */\nexport class AbortError extends FetchBaseError {\n\tconstructor(message, type = 'aborted') {\n\t\tsuper(message, type);\n\t}\n}\n"],"names":["Symbol","streamBrandCheckException","defaultControllerBrandCheckException","DOMException"],"version":3,"file":"main.js.map","sourceRoot":"../"}