{"mappings":"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","sources":["node_modules/node-fetch/src/utils/multipart-parser.js"],"sourcesContent":["import {File} from 'fetch-blob/from.js';\nimport {FormData} from 'formdata-polyfill/esm.min.js';\n\nlet s = 0;\nconst S = {\n\tSTART_BOUNDARY: s++,\n\tHEADER_FIELD_START: s++,\n\tHEADER_FIELD: s++,\n\tHEADER_VALUE_START: s++,\n\tHEADER_VALUE: s++,\n\tHEADER_VALUE_ALMOST_DONE: s++,\n\tHEADERS_ALMOST_DONE: s++,\n\tPART_DATA_START: s++,\n\tPART_DATA: s++,\n\tEND: s++\n};\n\nlet f = 1;\nconst F = {\n\tPART_BOUNDARY: f,\n\tLAST_BOUNDARY: f *= 2\n};\n\nconst LF = 10;\nconst CR = 13;\nconst SPACE = 32;\nconst HYPHEN = 45;\nconst COLON = 58;\nconst A = 97;\nconst Z = 122;\n\nconst lower = c => c | 0x20;\n\nconst noop = () => {};\n\nclass MultipartParser {\n\t/**\n\t * @param {string} boundary\n\t */\n\tconstructor(boundary) {\n\t\tthis.index = 0;\n\t\tthis.flags = 0;\n\n\t\tthis.onHeaderEnd = noop;\n\t\tthis.onHeaderField = noop;\n\t\tthis.onHeadersEnd = noop;\n\t\tthis.onHeaderValue = noop;\n\t\tthis.onPartBegin = noop;\n\t\tthis.onPartData = noop;\n\t\tthis.onPartEnd = noop;\n\n\t\tthis.boundaryChars = {};\n\n\t\tboundary = '\\r\\n--' + boundary;\n\t\tconst ui8a = new Uint8Array(boundary.length);\n\t\tfor (let i = 0; i < boundary.length; i++) {\n\t\t\tui8a[i] = boundary.charCodeAt(i);\n\t\t\tthis.boundaryChars[ui8a[i]] = true;\n\t\t}\n\n\t\tthis.boundary = ui8a;\n\t\tthis.lookbehind = new Uint8Array(this.boundary.length + 8);\n\t\tthis.state = S.START_BOUNDARY;\n\t}\n\n\t/**\n\t * @param {Uint8Array} data\n\t */\n\twrite(data) {\n\t\tlet i = 0;\n\t\tconst length_ = data.length;\n\t\tlet previousIndex = this.index;\n\t\tlet {lookbehind, boundary, boundaryChars, index, state, flags} = this;\n\t\tconst boundaryLength = this.boundary.length;\n\t\tconst boundaryEnd = boundaryLength - 1;\n\t\tconst bufferLength = data.length;\n\t\tlet c;\n\t\tlet cl;\n\n\t\tconst mark = name => {\n\t\t\tthis[name + 'Mark'] = i;\n\t\t};\n\n\t\tconst clear = name => {\n\t\t\tdelete this[name + 'Mark'];\n\t\t};\n\n\t\tconst callback = (callbackSymbol, start, end, ui8a) => {\n\t\t\tif (start === undefined || start !== end) {\n\t\t\t\tthis[callbackSymbol](ui8a && ui8a.subarray(start, end));\n\t\t\t}\n\t\t};\n\n\t\tconst dataCallback = (name, clear) => {\n\t\t\tconst markSymbol = name + 'Mark';\n\t\t\tif (!(markSymbol in this)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (clear) {\n\t\t\t\tcallback(name, this[markSymbol], i, data);\n\t\t\t\tdelete this[markSymbol];\n\t\t\t} else {\n\t\t\t\tcallback(name, this[markSymbol], data.length, data);\n\t\t\t\tthis[markSymbol] = 0;\n\t\t\t}\n\t\t};\n\n\t\tfor (i = 0; i < length_; i++) {\n\t\t\tc = data[i];\n\n\t\t\tswitch (state) {\n\t\t\t\tcase S.START_BOUNDARY:\n\t\t\t\t\tif (index === boundary.length - 2) {\n\t\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\t\tflags |= F.LAST_BOUNDARY;\n\t\t\t\t\t\t} else if (c !== CR) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (index - 1 === boundary.length - 2) {\n\t\t\t\t\t\tif (flags & F.LAST_BOUNDARY && c === HYPHEN) {\n\t\t\t\t\t\t\tstate = S.END;\n\t\t\t\t\t\t\tflags = 0;\n\t\t\t\t\t\t} else if (!(flags & F.LAST_BOUNDARY) && c === LF) {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\tcallback('onPartBegin');\n\t\t\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c !== boundary[index + 2]) {\n\t\t\t\t\t\tindex = -2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c === boundary[index + 2]) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_FIELD_START:\n\t\t\t\t\tstate = S.HEADER_FIELD;\n\t\t\t\t\tmark('onHeaderField');\n\t\t\t\t\tindex = 0;\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.HEADER_FIELD:\n\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\tclear('onHeaderField');\n\t\t\t\t\t\tstate = S.HEADERS_ALMOST_DONE;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex++;\n\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c === COLON) {\n\t\t\t\t\t\tif (index === 1) {\n\t\t\t\t\t\t\t// empty header field\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdataCallback('onHeaderField', true);\n\t\t\t\t\t\tstate = S.HEADER_VALUE_START;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcl = lower(c);\n\t\t\t\t\tif (cl < A || cl > Z) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_VALUE_START:\n\t\t\t\t\tif (c === SPACE) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tmark('onHeaderValue');\n\t\t\t\t\tstate = S.HEADER_VALUE;\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.HEADER_VALUE:\n\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\tdataCallback('onHeaderValue', true);\n\t\t\t\t\t\tcallback('onHeaderEnd');\n\t\t\t\t\t\tstate = S.HEADER_VALUE_ALMOST_DONE;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADER_VALUE_ALMOST_DONE:\n\t\t\t\t\tif (c !== LF) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.HEADERS_ALMOST_DONE:\n\t\t\t\t\tif (c !== LF) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback('onHeadersEnd');\n\t\t\t\t\tstate = S.PART_DATA_START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.PART_DATA_START:\n\t\t\t\t\tstate = S.PART_DATA;\n\t\t\t\t\tmark('onPartData');\n\t\t\t\t\t// falls through\n\t\t\t\tcase S.PART_DATA:\n\t\t\t\t\tpreviousIndex = index;\n\n\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\t// boyer-moore derrived algorithm to safely skip non-boundary data\n\t\t\t\t\t\ti += boundaryEnd;\n\t\t\t\t\t\twhile (i < bufferLength && !(data[i] in boundaryChars)) {\n\t\t\t\t\t\t\ti += boundaryLength;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ti -= boundaryEnd;\n\t\t\t\t\t\tc = data[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index < boundary.length) {\n\t\t\t\t\t\tif (boundary[index] === c) {\n\t\t\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\t\t\tdataCallback('onPartData', true);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (index === boundary.length) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tif (c === CR) {\n\t\t\t\t\t\t\t// CR = part boundary\n\t\t\t\t\t\t\tflags |= F.PART_BOUNDARY;\n\t\t\t\t\t\t} else if (c === HYPHEN) {\n\t\t\t\t\t\t\t// HYPHEN = end boundary\n\t\t\t\t\t\t\tflags |= F.LAST_BOUNDARY;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (index - 1 === boundary.length) {\n\t\t\t\t\t\tif (flags & F.PART_BOUNDARY) {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\tif (c === LF) {\n\t\t\t\t\t\t\t\t// unset the PART_BOUNDARY flag\n\t\t\t\t\t\t\t\tflags &= ~F.PART_BOUNDARY;\n\t\t\t\t\t\t\t\tcallback('onPartEnd');\n\t\t\t\t\t\t\t\tcallback('onPartBegin');\n\t\t\t\t\t\t\t\tstate = S.HEADER_FIELD_START;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (flags & F.LAST_BOUNDARY) {\n\t\t\t\t\t\t\tif (c === HYPHEN) {\n\t\t\t\t\t\t\t\tcallback('onPartEnd');\n\t\t\t\t\t\t\t\tstate = S.END;\n\t\t\t\t\t\t\t\tflags = 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0) {\n\t\t\t\t\t\t// when matching a possible boundary, keep a lookbehind reference\n\t\t\t\t\t\t// in case it turns out to be a false lead\n\t\t\t\t\t\tlookbehind[index - 1] = c;\n\t\t\t\t\t} else if (previousIndex > 0) {\n\t\t\t\t\t\t// if our boundary turned out to be rubbish, the captured lookbehind\n\t\t\t\t\t\t// belongs to partData\n\t\t\t\t\t\tconst _lookbehind = new Uint8Array(lookbehind.buffer, lookbehind.byteOffset, lookbehind.byteLength);\n\t\t\t\t\t\tcallback('onPartData', 0, previousIndex, _lookbehind);\n\t\t\t\t\t\tpreviousIndex = 0;\n\t\t\t\t\t\tmark('onPartData');\n\n\t\t\t\t\t\t// reconsider the current character even so it interrupted the sequence\n\t\t\t\t\t\t// it could be the beginning of a new sequence\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase S.END:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unexpected state entered: ${state}`);\n\t\t\t}\n\t\t}\n\n\t\tdataCallback('onHeaderField');\n\t\tdataCallback('onHeaderValue');\n\t\tdataCallback('onPartData');\n\n\t\t// Update properties for the next call\n\t\tthis.index = index;\n\t\tthis.state = state;\n\t\tthis.flags = flags;\n\t}\n\n\tend() {\n\t\tif ((this.state === S.HEADER_FIELD_START && this.index === 0) ||\n\t\t\t(this.state === S.PART_DATA && this.index === this.boundary.length)) {\n\t\t\tthis.onPartEnd();\n\t\t} else if (this.state !== S.END) {\n\t\t\tthrow new Error('MultipartParser.end(): stream ended unexpectedly');\n\t\t}\n\t}\n}\n\nfunction _fileName(headerValue) {\n\t// matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n\tconst m = headerValue.match(/\\bfilename=(\"(.*?)\"|([^()<>@,;:\\\\\"/[\\]?={}\\s\\t]+))($|;\\s)/i);\n\tif (!m) {\n\t\treturn;\n\t}\n\n\tconst match = m[2] || m[3] || '';\n\tlet filename = match.slice(match.lastIndexOf('\\\\') + 1);\n\tfilename = filename.replace(/%22/g, '\"');\n\tfilename = filename.replace(/&#(\\d{4});/g, (m, code) => {\n\t\treturn String.fromCharCode(code);\n\t});\n\treturn filename;\n}\n\nexport async function toFormData(Body, ct) {\n\tif (!/multipart/i.test(ct)) {\n\t\tthrow new TypeError('Failed to fetch');\n\t}\n\n\tconst m = ct.match(/boundary=(?:\"([^\"]+)\"|([^;]+))/i);\n\n\tif (!m) {\n\t\tthrow new TypeError('no or bad content-type header, no multipart boundary');\n\t}\n\n\tconst parser = new MultipartParser(m[1] || m[2]);\n\n\tlet headerField;\n\tlet headerValue;\n\tlet entryValue;\n\tlet entryName;\n\tlet contentType;\n\tlet filename;\n\tconst entryChunks = [];\n\tconst formData = new FormData();\n\n\tconst onPartData = ui8a => {\n\t\tentryValue += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tconst appendToFile = ui8a => {\n\t\tentryChunks.push(ui8a);\n\t};\n\n\tconst appendFileToFormData = () => {\n\t\tconst file = new File(entryChunks, filename, {type: contentType});\n\t\tformData.append(entryName, file);\n\t};\n\n\tconst appendEntryToFormData = () => {\n\t\tformData.append(entryName, entryValue);\n\t};\n\n\tconst decoder = new TextDecoder('utf-8');\n\tdecoder.decode();\n\n\tparser.onPartBegin = function () {\n\t\tparser.onPartData = onPartData;\n\t\tparser.onPartEnd = appendEntryToFormData;\n\n\t\theaderField = '';\n\t\theaderValue = '';\n\t\tentryValue = '';\n\t\tentryName = '';\n\t\tcontentType = '';\n\t\tfilename = null;\n\t\tentryChunks.length = 0;\n\t};\n\n\tparser.onHeaderField = function (ui8a) {\n\t\theaderField += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tparser.onHeaderValue = function (ui8a) {\n\t\theaderValue += decoder.decode(ui8a, {stream: true});\n\t};\n\n\tparser.onHeaderEnd = function () {\n\t\theaderValue += decoder.decode();\n\t\theaderField = headerField.toLowerCase();\n\n\t\tif (headerField === 'content-disposition') {\n\t\t\t// matches either a quoted-string or a token (RFC 2616 section 19.5.1)\n\t\t\tconst m = headerValue.match(/\\bname=(\"([^\"]*)\"|([^()<>@,;:\\\\\"/[\\]?={}\\s\\t]+))/i);\n\n\t\t\tif (m) {\n\t\t\t\tentryName = m[2] || m[3] || '';\n\t\t\t}\n\n\t\t\tfilename = _fileName(headerValue);\n\n\t\t\tif (filename) {\n\t\t\t\tparser.onPartData = appendToFile;\n\t\t\t\tparser.onPartEnd = appendFileToFormData;\n\t\t\t}\n\t\t} else if (headerField === 'content-type') {\n\t\t\tcontentType = headerValue;\n\t\t}\n\n\t\theaderValue = '';\n\t\theaderField = '';\n\t};\n\n\tfor await (const chunk of Body) {\n\t\tparser.write(chunk);\n\t}\n\n\tparser.end();\n\n\treturn formData;\n}\n"],"names":[],"version":3,"file":"multipart-parser.f3fa1cd9.js.map","sourceRoot":"../"}